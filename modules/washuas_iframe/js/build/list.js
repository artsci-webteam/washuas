!function(e, t) {
  "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define([], t) : "object" == typeof exports ? exports.CKEditor5 = t() : (e.CKEditor5 = e.CKEditor5 || {},
  e.CKEditor5.list = t())
}(self, (()=>(()=>{
  var __webpack_modules__ = {
      "./js/ckeditor5_plugins/list/src/documentlist.js": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ DocumentList)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ "ckeditor5/src/core.js");\n/* harmony import */ var _documentlist_documentlistediting__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./documentlist/documentlistediting */ "./js/ckeditor5_plugins/list/src/documentlist/documentlistediting.js");\n/* harmony import */ var _list_listui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./list/listui */ "./js/ckeditor5_plugins/list/src/list/listui.js");\n/**\r\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n/**\r\n * @module list/documentlist\r\n */\r\n\r\n\r\n\r\n/**\r\n * The document list feature.\r\n *\r\n * This is a "glue" plugin that loads the {@link module:list/documentlist/documentlistediting~DocumentListEditing document list\r\n * editing feature} and {@link module:list/list/listui~ListUI list UI feature}.\r\n */\r\nclass DocumentList extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    static get requires() {\r\n        return [_documentlist_documentlistediting__WEBPACK_IMPORTED_MODULE_1__["default"], _list_listui__WEBPACK_IMPORTED_MODULE_2__["default"]];\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    static get pluginName() {\r\n        return \'DocumentList\';\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/src/documentlist.js?')
      }
      ,
      "./js/ckeditor5_plugins/list/src/documentlist/converters.js": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bogusParagraphCreator: () => (/* binding */ bogusParagraphCreator),\n/* harmony export */   findMappedViewElement: () => (/* binding */ findMappedViewElement),\n/* harmony export */   listItemDowncastConverter: () => (/* binding */ listItemDowncastConverter),\n/* harmony export */   listItemUpcastConverter: () => (/* binding */ listItemUpcastConverter),\n/* harmony export */   listUpcastCleanList: () => (/* binding */ listUpcastCleanList),\n/* harmony export */   reconvertItemsOnDataChange: () => (/* binding */ reconvertItemsOnDataChange)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/engine */ \"ckeditor5/src/engine.js\");\n/* harmony import */ var _utils_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/model */ \"./js/ckeditor5_plugins/list/src/documentlist/utils/model.js\");\n/* harmony import */ var _utils_view__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/view */ \"./js/ckeditor5_plugins/list/src/documentlist/utils/view.js\");\n/* harmony import */ var _utils_listwalker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/listwalker */ \"./js/ckeditor5_plugins/list/src/documentlist/utils/listwalker.js\");\n/* harmony import */ var _utils_postfixers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/postfixers */ \"./js/ckeditor5_plugins/list/src/documentlist/utils/postfixers.js\");\n/**\r\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n/**\r\n * @module list/documentlist/converters\r\n */\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Returns the upcast converter for list items. It's supposed to work after the block converters (content inside list items) are converted.\r\n *\r\n * @internal\r\n */\r\nfunction listItemUpcastConverter() {\r\n    return (evt, data, conversionApi) => {\r\n        const { writer, schema } = conversionApi;\r\n        if (!data.modelRange) {\r\n            return;\r\n        }\r\n        const items = Array.from(data.modelRange.getItems({ shallow: true }))\r\n            .filter((item) => schema.checkAttribute(item, 'listItemId'));\r\n        if (!items.length) {\r\n            return;\r\n        }\r\n        const attributes = {\r\n            listItemId: _utils_model__WEBPACK_IMPORTED_MODULE_1__.ListItemUid.next(),\r\n            listIndent: (0,_utils_view__WEBPACK_IMPORTED_MODULE_2__.getIndent)(data.viewItem),\r\n            listType: data.viewItem.parent && data.viewItem.parent.is('element', 'ol') ? 'numbered' : 'bulleted'\r\n        };\r\n        for (const item of items) {\r\n            // Set list attributes only on same level items, those nested deeper are already handled by the recursive conversion.\r\n            if (!(0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.isListItemBlock)(item)) {\r\n                writer.setAttributes(attributes, item);\r\n            }\r\n        }\r\n        if (items.length > 1) {\r\n            // Make sure that list item that contain only nested list will preserve paragraph for itself:\r\n            //\t<ul>\r\n            //\t\t<li>\r\n            //\t\t\t<p></p>  <-- this one must be kept\r\n            //\t\t\t<ul>\r\n            //\t\t\t\t<li></li>\r\n            //\t\t\t</ul>\r\n            //\t\t</li>\r\n            //\t</ul>\r\n            if (items[1].getAttribute('listItemId') != attributes.listItemId) {\r\n                conversionApi.keepEmptyElement(items[0]);\r\n            }\r\n        }\r\n    };\r\n}\r\n/**\r\n * Returns the upcast converter for the `<ul>` and `<ol>` view elements that cleans the input view of garbage.\r\n * This is mostly to clean whitespaces from between the `<li>` view elements inside the view list element. However,\r\n * incorrect data can also be cleared if the view was incorrect.\r\n *\r\n * @internal\r\n */\r\nfunction listUpcastCleanList() {\r\n    return (evt, data, conversionApi) => {\r\n        if (!conversionApi.consumable.test(data.viewItem, { name: true })) {\r\n            return;\r\n        }\r\n        const viewWriter = new ckeditor5_src_engine__WEBPACK_IMPORTED_MODULE_0__.UpcastWriter(data.viewItem.document);\r\n        for (const child of Array.from(data.viewItem.getChildren())) {\r\n            if (!(0,_utils_view__WEBPACK_IMPORTED_MODULE_2__.isListItemView)(child) && !(0,_utils_view__WEBPACK_IMPORTED_MODULE_2__.isListView)(child)) {\r\n                viewWriter.remove(child);\r\n            }\r\n        }\r\n    };\r\n}\r\n/**\r\n * Returns a model document change:data event listener that triggers conversion of related items if needed.\r\n *\r\n * @internal\r\n * @param model The editor model.\r\n * @param editing The editing controller.\r\n * @param attributeNames The list of all model list attributes (including registered strategies).\r\n * @param documentListEditing The document list editing plugin.\r\n */\r\nfunction reconvertItemsOnDataChange(model, editing, attributeNames, documentListEditing) {\r\n    return () => {\r\n        const changes = model.document.differ.getChanges();\r\n        const itemsToRefresh = [];\r\n        const itemToListHead = new Map();\r\n        const changedItems = new Set();\r\n        for (const entry of changes) {\r\n            if (entry.type == 'insert' && entry.name != '$text') {\r\n                (0,_utils_postfixers__WEBPACK_IMPORTED_MODULE_4__.findAndAddListHeadToMap)(entry.position, itemToListHead);\r\n                // Insert of a non-list item.\r\n                if (!entry.attributes.has('listItemId')) {\r\n                    (0,_utils_postfixers__WEBPACK_IMPORTED_MODULE_4__.findAndAddListHeadToMap)(entry.position.getShiftedBy(entry.length), itemToListHead);\r\n                }\r\n                else {\r\n                    changedItems.add(entry.position.nodeAfter);\r\n                }\r\n            }\r\n            // Removed list item.\r\n            else if (entry.type == 'remove' && entry.attributes.has('listItemId')) {\r\n                (0,_utils_postfixers__WEBPACK_IMPORTED_MODULE_4__.findAndAddListHeadToMap)(entry.position, itemToListHead);\r\n            }\r\n            // Changed list attribute.\r\n            else if (entry.type == 'attribute') {\r\n                const item = entry.range.start.nodeAfter;\r\n                if (attributeNames.includes(entry.attributeKey)) {\r\n                    (0,_utils_postfixers__WEBPACK_IMPORTED_MODULE_4__.findAndAddListHeadToMap)(entry.range.start, itemToListHead);\r\n                    if (entry.attributeNewValue === null) {\r\n                        (0,_utils_postfixers__WEBPACK_IMPORTED_MODULE_4__.findAndAddListHeadToMap)(entry.range.start.getShiftedBy(1), itemToListHead);\r\n                        // Check if paragraph should be converted from bogus to plain paragraph.\r\n                        if (doesItemParagraphRequiresRefresh(item)) {\r\n                            itemsToRefresh.push(item);\r\n                        }\r\n                    }\r\n                    else {\r\n                        changedItems.add(item);\r\n                    }\r\n                }\r\n                else if ((0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.isListItemBlock)(item)) {\r\n                    // Some other attribute was changed on the list item,\r\n                    // check if paragraph does not need to be converted to bogus or back.\r\n                    if (doesItemParagraphRequiresRefresh(item)) {\r\n                        itemsToRefresh.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (const listHead of itemToListHead.values()) {\r\n            itemsToRefresh.push(...collectListItemsToRefresh(listHead, changedItems));\r\n        }\r\n        for (const item of new Set(itemsToRefresh)) {\r\n            editing.reconvertItem(item);\r\n        }\r\n    };\r\n    function collectListItemsToRefresh(listHead, changedItems) {\r\n        const itemsToRefresh = [];\r\n        const visited = new Set();\r\n        const stack = [];\r\n        for (const { node, previous } of (0,_utils_listwalker__WEBPACK_IMPORTED_MODULE_3__.iterateSiblingListBlocks)(listHead, 'forward')) {\r\n            if (visited.has(node)) {\r\n                continue;\r\n            }\r\n            const itemIndent = node.getAttribute('listIndent');\r\n            // Current node is at the lower indent so trim the stack.\r\n            if (previous && itemIndent < previous.getAttribute('listIndent')) {\r\n                stack.length = itemIndent + 1;\r\n            }\r\n            // Update the stack for the current indent level.\r\n            stack[itemIndent] = Object.fromEntries(Array.from(node.getAttributes())\r\n                .filter(([key]) => attributeNames.includes(key)));\r\n            // Find all blocks of the current node.\r\n            const blocks = (0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.getListItemBlocks)(node, { direction: 'forward' });\r\n            for (const block of blocks) {\r\n                visited.add(block);\r\n                // Check if bogus vs plain paragraph needs refresh.\r\n                if (doesItemParagraphRequiresRefresh(block, blocks)) {\r\n                    itemsToRefresh.push(block);\r\n                }\r\n                // Check if wrapping with UL, OL, LIs needs refresh.\r\n                else if (doesItemWrappingRequiresRefresh(block, stack, changedItems)) {\r\n                    itemsToRefresh.push(block);\r\n                }\r\n            }\r\n        }\r\n        return itemsToRefresh;\r\n    }\r\n    function doesItemParagraphRequiresRefresh(item, blocks) {\r\n        if (!item.is('element', 'paragraph')) {\r\n            return false;\r\n        }\r\n        const viewElement = editing.mapper.toViewElement(item);\r\n        if (!viewElement) {\r\n            return false;\r\n        }\r\n        const useBogus = shouldUseBogusParagraph(item, attributeNames, blocks);\r\n        if (useBogus && viewElement.is('element', 'p')) {\r\n            return true;\r\n        }\r\n        else if (!useBogus && viewElement.is('element', 'span')) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    function doesItemWrappingRequiresRefresh(item, stack, changedItems) {\r\n        // Items directly affected by some \"change\" don't need a refresh, they will be converted by their own changes.\r\n        if (changedItems.has(item)) {\r\n            return false;\r\n        }\r\n        const viewElement = editing.mapper.toViewElement(item);\r\n        let indent = stack.length - 1;\r\n        // Traverse down the stack to the root to verify if all ULs, OLs, and LIs are as expected.\r\n        for (let element = viewElement.parent; !element.is('editableElement'); element = element.parent) {\r\n            const isListItemElement = (0,_utils_view__WEBPACK_IMPORTED_MODULE_2__.isListItemView)(element);\r\n            const isListElement = (0,_utils_view__WEBPACK_IMPORTED_MODULE_2__.isListView)(element);\r\n            if (!isListElement && !isListItemElement) {\r\n                continue;\r\n            }\r\n            const eventName = `checkAttributes:${isListItemElement ? 'item' : 'list'}`;\r\n            const needsRefresh = documentListEditing.fire(eventName, {\r\n                viewElement: element,\r\n                modelAttributes: stack[indent]\r\n            });\r\n            if (needsRefresh) {\r\n                break;\r\n            }\r\n            if (isListElement) {\r\n                indent--;\r\n                // Don't need to iterate further if we already know that the item is wrapped appropriately.\r\n                if (indent < 0) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\n/**\r\n * Returns the list item downcast converter.\r\n *\r\n * @internal\r\n * @param attributeNames A list of attribute names that should be converted if they are set.\r\n * @param strategies The strategies.\r\n * @param model The model.\r\n */\r\nfunction listItemDowncastConverter(attributeNames, strategies, model) {\r\n    const consumer = createAttributesConsumer(attributeNames);\r\n    return (evt, data, conversionApi) => {\r\n        const { writer, mapper, consumable } = conversionApi;\r\n        const listItem = data.item;\r\n        if (!attributeNames.includes(data.attributeKey)) {\r\n            return;\r\n        }\r\n        // Test if attributes on the converted items are not consumed.\r\n        if (!consumer(listItem, consumable)) {\r\n            return;\r\n        }\r\n        // Use positions mapping instead of mapper.toViewElement( listItem ) to find outermost view element.\r\n        // This is for cases when mapping is using inner view element like in the code blocks (pre > code).\r\n        const viewElement = findMappedViewElement(listItem, mapper, model);\r\n        // Unwrap element from current list wrappers.\r\n        unwrapListItemBlock(viewElement, writer);\r\n        // Then wrap them with the new list wrappers.\r\n        wrapListItemBlock(listItem, writer.createRangeOn(viewElement), strategies, writer);\r\n    };\r\n}\r\n/**\r\n * Returns the bogus paragraph view element creator. A bogus paragraph is used if a list item contains only a single block or nested list.\r\n *\r\n * @internal\r\n * @param attributeNames The list of all model list attributes (including registered strategies).\r\n */\r\nfunction bogusParagraphCreator(attributeNames, { dataPipeline } = {}) {\r\n    return (modelElement, { writer }) => {\r\n        // Convert only if a bogus paragraph should be used.\r\n        if (!shouldUseBogusParagraph(modelElement, attributeNames)) {\r\n            return null;\r\n        }\r\n        if (!dataPipeline) {\r\n            return writer.createContainerElement('span', { class: 'ck-list-bogus-paragraph' });\r\n        }\r\n        // Using `<p>` in case there are some markers on it and transparentRendering will render it anyway.\r\n        const viewElement = writer.createContainerElement('p');\r\n        writer.setCustomProperty('dataPipeline:transparentRendering', true, viewElement);\r\n        return viewElement;\r\n    };\r\n}\r\n/**\r\n * Helper for mapping mode to view elements. It's using positions mapping instead of mapper.toViewElement( element )\r\n * to find outermost view element. This is for cases when mapping is using inner view element like in the code blocks (pre > code).\r\n *\r\n * @internal\r\n * @param element The model element.\r\n * @param mapper The mapper instance.\r\n * @param model The model.\r\n */\r\nfunction findMappedViewElement(element, mapper, model) {\r\n    const modelRange = model.createRangeOn(element);\r\n    const viewRange = mapper.toViewRange(modelRange).getTrimmed();\r\n    return viewRange.getContainedElement();\r\n}\r\n// Unwraps all ol, ul, and li attribute elements that are wrapping the provided view element.\r\nfunction unwrapListItemBlock(viewElement, viewWriter) {\r\n    let attributeElement = viewElement.parent;\r\n    while (attributeElement.is('attributeElement') && ['ul', 'ol', 'li'].includes(attributeElement.name)) {\r\n        const parentElement = attributeElement.parent;\r\n        viewWriter.unwrap(viewWriter.createRangeOn(viewElement), attributeElement);\r\n        attributeElement = parentElement;\r\n    }\r\n}\r\n// Wraps the given list item with appropriate attribute elements for ul, ol, and li.\r\nfunction wrapListItemBlock(listItem, viewRange, strategies, writer) {\r\n    if (!listItem.hasAttribute('listIndent')) {\r\n        return;\r\n    }\r\n    const listItemIndent = listItem.getAttribute('listIndent');\r\n    let currentListItem = listItem;\r\n    for (let indent = listItemIndent; indent >= 0; indent--) {\r\n        const listItemViewElement = (0,_utils_view__WEBPACK_IMPORTED_MODULE_2__.createListItemElement)(writer, indent, currentListItem.getAttribute('listItemId'));\r\n        const listViewElement = (0,_utils_view__WEBPACK_IMPORTED_MODULE_2__.createListElement)(writer, indent, currentListItem.getAttribute('listType'));\r\n        for (const strategy of strategies) {\r\n            if (currentListItem.hasAttribute(strategy.attributeName)) {\r\n                strategy.setAttributeOnDowncast(writer, currentListItem.getAttribute(strategy.attributeName), strategy.scope == 'list' ? listViewElement : listItemViewElement);\r\n            }\r\n        }\r\n        viewRange = writer.wrap(viewRange, listItemViewElement);\r\n        viewRange = writer.wrap(viewRange, listViewElement);\r\n        if (indent == 0) {\r\n            break;\r\n        }\r\n        currentListItem = _utils_listwalker__WEBPACK_IMPORTED_MODULE_3__[\"default\"].first(currentListItem, { lowerIndent: true });\r\n        // There is no list item with lower indent, this means this is a document fragment containing\r\n        // only a part of nested list (like copy to clipboard) so we don't need to try to wrap it further.\r\n        if (!currentListItem) {\r\n            break;\r\n        }\r\n    }\r\n}\r\n// Returns the function that is responsible for consuming attributes that are set on the model node.\r\nfunction createAttributesConsumer(attributeNames) {\r\n    return (node, consumable) => {\r\n        const events = [];\r\n        // Collect all set attributes that are triggering conversion.\r\n        for (const attributeName of attributeNames) {\r\n            if (node.hasAttribute(attributeName)) {\r\n                events.push(`attribute:${attributeName}`);\r\n            }\r\n        }\r\n        if (!events.every(event => consumable.test(node, event) !== false)) {\r\n            return false;\r\n        }\r\n        events.forEach(event => consumable.consume(node, event));\r\n        return true;\r\n    };\r\n}\r\n// Whether the given item should be rendered as a bogus paragraph.\r\nfunction shouldUseBogusParagraph(item, attributeNames, blocks = (0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.getAllListItemBlocks)(item)) {\r\n    if (!(0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.isListItemBlock)(item)) {\r\n        return false;\r\n    }\r\n    for (const attributeKey of item.getAttributeKeys()) {\r\n        // Ignore selection attributes stored on block elements.\r\n        if (attributeKey.startsWith('selection:')) {\r\n            continue;\r\n        }\r\n        // Don't use bogus paragraph if there are attributes from other features.\r\n        if (!attributeNames.includes(attributeKey)) {\r\n            return false;\r\n        }\r\n    }\r\n    return blocks.length < 2;\r\n}\r\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/src/documentlist/converters.js?")
      }
      ,
      "./js/ckeditor5_plugins/list/src/documentlist/documentlistcommand.js": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DocumentListCommand)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n/* harmony import */ var _utils_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/model */ \"./js/ckeditor5_plugins/list/src/documentlist/utils/model.js\");\n/**\r\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n\r\n/**\r\n * The list command. It is used by the {@link module:list/documentlist~DocumentList document list feature}.\r\n */\r\nclass DocumentListCommand extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Command {\r\n    /**\r\n     * Creates an instance of the command.\r\n     *\r\n     * @param editor The editor instance.\r\n     * @param type List type that will be handled by this command.\r\n     */\r\n    constructor(editor, type) {\r\n        super(editor);\r\n        this.type = type;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    refresh() {\r\n        this.value = this._getValue();\r\n        this.isEnabled = this._checkEnabled();\r\n    }\r\n    /**\r\n     * Executes the list command.\r\n     *\r\n     * @fires execute\r\n     * @fires afterExecute\r\n     * @param options Command options.\r\n     * @param options.forceValue If set, it will force the command behavior. If `true`, the command will try to convert the\r\n     * selected items and potentially the neighbor elements to the proper list items. If set to `false` it will convert selected elements\r\n     * to paragraphs. If not set, the command will toggle selected elements to list items or paragraphs, depending on the selection.\r\n     */\r\n    execute(options = {}) {\r\n        const model = this.editor.model;\r\n        const document = model.document;\r\n        const selectedBlockObject = (0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.getSelectedBlockObject)(model);\r\n        const blocks = Array.from(document.selection.getSelectedBlocks())\r\n            .filter(block => model.schema.checkAttribute(block, 'listType'));\r\n        // Whether we are turning off some items.\r\n        const turnOff = options.forceValue !== undefined ? !options.forceValue : this.value;\r\n        model.change(writer => {\r\n            if (turnOff) {\r\n                const lastBlock = blocks[blocks.length - 1];\r\n                // Split the first block from the list item.\r\n                const itemBlocks = (0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.getListItemBlocks)(lastBlock, { direction: 'forward' });\r\n                const changedBlocks = [];\r\n                if (itemBlocks.length > 1) {\r\n                    changedBlocks.push(...(0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.splitListItemBefore)(itemBlocks[1], writer));\r\n                }\r\n                // Convert list blocks to plain blocks.\r\n                changedBlocks.push(...(0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.removeListAttributes)(blocks, writer));\r\n                // Outdent items following the selected list item.\r\n                changedBlocks.push(...(0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.outdentFollowingItems)(lastBlock, writer));\r\n                this._fireAfterExecute(changedBlocks);\r\n            }\r\n            // Turning on the list items for a collapsed selection inside a list item.\r\n            else if ((selectedBlockObject || document.selection.isCollapsed) && (0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.isListItemBlock)(blocks[0])) {\r\n                const changedBlocks = (0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.getListItems)(selectedBlockObject || blocks[0]);\r\n                for (const block of changedBlocks) {\r\n                    writer.setAttribute('listType', this.type, block);\r\n                }\r\n                this._fireAfterExecute(changedBlocks);\r\n            }\r\n            // Turning on the list items for a non-collapsed selection.\r\n            else {\r\n                const changedBlocks = [];\r\n                for (const block of blocks) {\r\n                    // Promote the given block to the list item.\r\n                    if (!block.hasAttribute('listType')) {\r\n                        writer.setAttributes({\r\n                            listIndent: 0,\r\n                            listItemId: _utils_model__WEBPACK_IMPORTED_MODULE_1__.ListItemUid.next(),\r\n                            listType: this.type\r\n                        }, block);\r\n                        changedBlocks.push(block);\r\n                    }\r\n                    // Change the type of list item.\r\n                    else {\r\n                        for (const node of (0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.expandListBlocksToCompleteItems)(block, { withNested: false })) {\r\n                            if (node.getAttribute('listType') != this.type) {\r\n                                writer.setAttribute('listType', this.type, node);\r\n                                changedBlocks.push(node);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                this._fireAfterExecute(changedBlocks);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Fires the `afterExecute` event.\r\n     *\r\n     * @param changedBlocks The changed list elements.\r\n     */\r\n    _fireAfterExecute(changedBlocks) {\r\n        this.fire('afterExecute', (0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.sortBlocks)(new Set(changedBlocks)));\r\n    }\r\n    /**\r\n     * Checks the command's {@link #value}.\r\n     *\r\n     * @returns The current value.\r\n     */\r\n    _getValue() {\r\n        const selection = this.editor.model.document.selection;\r\n        const blocks = Array.from(selection.getSelectedBlocks());\r\n        if (!blocks.length) {\r\n            return false;\r\n        }\r\n        for (const block of blocks) {\r\n            if (block.getAttribute('listType') != this.type) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Checks whether the command can be enabled in the current context.\r\n     *\r\n     * @returns Whether the command should be enabled.\r\n     */\r\n    _checkEnabled() {\r\n        const selection = this.editor.model.document.selection;\r\n        const schema = this.editor.model.schema;\r\n        const blocks = Array.from(selection.getSelectedBlocks());\r\n        if (!blocks.length) {\r\n            return false;\r\n        }\r\n        // If command value is true it means that we are in list item, so the command should be enabled.\r\n        if (this.value) {\r\n            return true;\r\n        }\r\n        for (const block of blocks) {\r\n            if (schema.checkAttribute(block, 'listType')) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/src/documentlist/documentlistcommand.js?")
      }
      ,
      "./js/ckeditor5_plugins/list/src/documentlist/documentlistediting.js": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DocumentListEditing)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n/* harmony import */ var ckeditor5_src_typing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ckeditor5/src/typing */ \"ckeditor5/src/typing.js\");\n/* harmony import */ var ckeditor5_src_enter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ckeditor5/src/enter */ \"ckeditor5/src/enter.js\");\n/* harmony import */ var ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ckeditor5/src/utils */ \"ckeditor5/src/utils.js\");\n/* harmony import */ var _documentlistindentcommand__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./documentlistindentcommand */ \"./js/ckeditor5_plugins/list/src/documentlist/documentlistindentcommand.js\");\n/* harmony import */ var _documentlistcommand__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./documentlistcommand */ \"./js/ckeditor5_plugins/list/src/documentlist/documentlistcommand.js\");\n/* harmony import */ var _documentlistmergecommand__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./documentlistmergecommand */ \"./js/ckeditor5_plugins/list/src/documentlist/documentlistmergecommand.js\");\n/* harmony import */ var _documentlistsplitcommand__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./documentlistsplitcommand */ \"./js/ckeditor5_plugins/list/src/documentlist/documentlistsplitcommand.js\");\n/* harmony import */ var _documentlistutils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./documentlistutils */ \"./js/ckeditor5_plugins/list/src/documentlist/documentlistutils.js\");\n/* harmony import */ var _converters__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./converters */ \"./js/ckeditor5_plugins/list/src/documentlist/converters.js\");\n/* harmony import */ var _utils_postfixers__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/postfixers */ \"./js/ckeditor5_plugins/list/src/documentlist/utils/postfixers.js\");\n/* harmony import */ var _utils_model__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/model */ \"./js/ckeditor5_plugins/list/src/documentlist/utils/model.js\");\n/* harmony import */ var _utils_view__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/view */ \"./js/ckeditor5_plugins/list/src/documentlist/utils/view.js\");\n/* harmony import */ var _utils_listwalker__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utils/listwalker */ \"./js/ckeditor5_plugins/list/src/documentlist/utils/listwalker.js\");\n/* harmony import */ var _theme_documentlist_css__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../theme/documentlist.css */ \"./js/ckeditor5_plugins/list/theme/documentlist.css\");\n/* harmony import */ var _theme_list_css__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../theme/list.css */ \"./js/ckeditor5_plugins/list/theme/list.css\");\n/**\r\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n/**\r\n * @module list/documentlist/documentlistediting\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * A list of base list model attributes.\r\n */\r\nconst LIST_BASE_ATTRIBUTES = ['listType', 'listIndent', 'listItemId'];\r\n/**\r\n * The editing part of the document-list feature. It handles creating, editing and removing lists and list items.\r\n */\r\nclass DocumentListEditing extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * The list of registered downcast strategies.\r\n         */\r\n        this._downcastStrategies = [];\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    static get pluginName() {\r\n        return 'DocumentListEditing';\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    static get requires() {\r\n        return [ckeditor5_src_enter__WEBPACK_IMPORTED_MODULE_2__.Enter, ckeditor5_src_typing__WEBPACK_IMPORTED_MODULE_1__.Delete, _documentlistutils__WEBPACK_IMPORTED_MODULE_8__[\"default\"]];\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    init() {\r\n        const editor = this.editor;\r\n        const model = editor.model;\r\n        if (editor.plugins.has('ListEditing')) {\r\n            /**\r\n             * The `DocumentList` feature can not be loaded together with the `List` plugin.\r\n             *\r\n             * @error document-list-feature-conflict\r\n             * @param conflictPlugin Name of the plugin.\r\n             */\r\n            throw new ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_3__.CKEditorError('document-list-feature-conflict', this, { conflictPlugin: 'ListEditing' });\r\n        }\r\n        model.schema.extend('$container', { allowAttributes: LIST_BASE_ATTRIBUTES });\r\n        model.schema.extend('$block', { allowAttributes: LIST_BASE_ATTRIBUTES });\r\n        model.schema.extend('$blockObject', { allowAttributes: LIST_BASE_ATTRIBUTES });\r\n        for (const attribute of LIST_BASE_ATTRIBUTES) {\r\n            model.schema.setAttributeProperties(attribute, {\r\n                copyOnReplace: true\r\n            });\r\n        }\r\n        // Register commands.\r\n        editor.commands.add('numberedList', new _documentlistcommand__WEBPACK_IMPORTED_MODULE_5__[\"default\"](editor, 'numbered'));\r\n        editor.commands.add('bulletedList', new _documentlistcommand__WEBPACK_IMPORTED_MODULE_5__[\"default\"](editor, 'bulleted'));\r\n        editor.commands.add('indentList', new _documentlistindentcommand__WEBPACK_IMPORTED_MODULE_4__[\"default\"](editor, 'forward'));\r\n        editor.commands.add('outdentList', new _documentlistindentcommand__WEBPACK_IMPORTED_MODULE_4__[\"default\"](editor, 'backward'));\r\n        editor.commands.add('mergeListItemBackward', new _documentlistmergecommand__WEBPACK_IMPORTED_MODULE_6__[\"default\"](editor, 'backward'));\r\n        editor.commands.add('mergeListItemForward', new _documentlistmergecommand__WEBPACK_IMPORTED_MODULE_6__[\"default\"](editor, 'forward'));\r\n        editor.commands.add('splitListItemBefore', new _documentlistsplitcommand__WEBPACK_IMPORTED_MODULE_7__[\"default\"](editor, 'before'));\r\n        editor.commands.add('splitListItemAfter', new _documentlistsplitcommand__WEBPACK_IMPORTED_MODULE_7__[\"default\"](editor, 'after'));\r\n        this._setupDeleteIntegration();\r\n        this._setupEnterIntegration();\r\n        this._setupTabIntegration();\r\n        this._setupClipboardIntegration();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    afterInit() {\r\n        const editor = this.editor;\r\n        const commands = editor.commands;\r\n        const indent = commands.get('indent');\r\n        const outdent = commands.get('outdent');\r\n        if (indent) {\r\n            // Priority is high due to integration with `IndentBlock` plugin. We want to indent list first and if it's not possible\r\n            // user can indent content with `IndentBlock` plugin.\r\n            indent.registerChildCommand(commands.get('indentList'), { priority: 'high' });\r\n        }\r\n        if (outdent) {\r\n            // Priority is lowest due to integration with `IndentBlock` and `IndentCode` plugins.\r\n            // First we want to allow user to outdent all indendations from other features then he can oudent list item.\r\n            outdent.registerChildCommand(commands.get('outdentList'), { priority: 'lowest' });\r\n        }\r\n        // Register conversion and model post-fixer after other plugins had a chance to register their attribute strategies.\r\n        this._setupModelPostFixing();\r\n        this._setupConversion();\r\n    }\r\n    /**\r\n     * Registers a downcast strategy.\r\n     *\r\n     * **Note**: Strategies must be registered in the `Plugin#init()` phase so that it can be applied\r\n     * in the `DocumentListEditing#afterInit()`.\r\n     *\r\n     * @param strategy The downcast strategy to register.\r\n     */\r\n    registerDowncastStrategy(strategy) {\r\n        this._downcastStrategies.push(strategy);\r\n    }\r\n    /**\r\n     * Returns list of model attribute names that should affect downcast conversion.\r\n     */\r\n    _getListAttributeNames() {\r\n        return [\r\n            ...LIST_BASE_ATTRIBUTES,\r\n            ...this._downcastStrategies.map(strategy => strategy.attributeName)\r\n        ];\r\n    }\r\n    /**\r\n     * Attaches the listener to the {@link module:engine/view/document~Document#event:delete} event and handles backspace/delete\r\n     * keys in and around document lists.\r\n     */\r\n    _setupDeleteIntegration() {\r\n        const editor = this.editor;\r\n        const mergeBackwardCommand = editor.commands.get('mergeListItemBackward');\r\n        const mergeForwardCommand = editor.commands.get('mergeListItemForward');\r\n        this.listenTo(editor.editing.view.document, 'delete', (evt, data) => {\r\n            const selection = editor.model.document.selection;\r\n            // Let the Widget plugin take care of block widgets while deleting (https://github.com/ckeditor/ckeditor5/issues/11346).\r\n            if ((0,_utils_model__WEBPACK_IMPORTED_MODULE_11__.getSelectedBlockObject)(editor.model)) {\r\n                return;\r\n            }\r\n            editor.model.change(() => {\r\n                const firstPosition = selection.getFirstPosition();\r\n                if (selection.isCollapsed && data.direction == 'backward') {\r\n                    if (!firstPosition.isAtStart) {\r\n                        return;\r\n                    }\r\n                    const positionParent = firstPosition.parent;\r\n                    if (!(0,_utils_model__WEBPACK_IMPORTED_MODULE_11__.isListItemBlock)(positionParent)) {\r\n                        return;\r\n                    }\r\n                    const previousBlock = _utils_listwalker__WEBPACK_IMPORTED_MODULE_13__[\"default\"].first(positionParent, {\r\n                        sameAttributes: 'listType',\r\n                        sameIndent: true\r\n                    });\r\n                    // Outdent the first block of a first list item.\r\n                    if (!previousBlock && positionParent.getAttribute('listIndent') === 0) {\r\n                        if (!(0,_utils_model__WEBPACK_IMPORTED_MODULE_11__.isLastBlockOfListItem)(positionParent)) {\r\n                            editor.execute('splitListItemAfter');\r\n                        }\r\n                        editor.execute('outdentList');\r\n                    }\r\n                    // Merge block with previous one (on the block level or on the content level).\r\n                    else {\r\n                        if (!mergeBackwardCommand.isEnabled) {\r\n                            return;\r\n                        }\r\n                        mergeBackwardCommand.execute({\r\n                            shouldMergeOnBlocksContentLevel: shouldMergeOnBlocksContentLevel(editor.model, 'backward')\r\n                        });\r\n                    }\r\n                    data.preventDefault();\r\n                    evt.stop();\r\n                }\r\n                // Non-collapsed selection or forward delete.\r\n                else {\r\n                    // Collapsed selection should trigger forward merging only if at the end of a block.\r\n                    if (selection.isCollapsed && !selection.getLastPosition().isAtEnd) {\r\n                        return;\r\n                    }\r\n                    if (!mergeForwardCommand.isEnabled) {\r\n                        return;\r\n                    }\r\n                    mergeForwardCommand.execute({\r\n                        shouldMergeOnBlocksContentLevel: shouldMergeOnBlocksContentLevel(editor.model, 'forward')\r\n                    });\r\n                    data.preventDefault();\r\n                    evt.stop();\r\n                }\r\n            });\r\n        }, { context: 'li' });\r\n    }\r\n    /**\r\n     * Attaches a listener to the {@link module:engine/view/document~Document#event:enter} event and handles enter key press\r\n     * in document lists.\r\n     */\r\n    _setupEnterIntegration() {\r\n        const editor = this.editor;\r\n        const model = editor.model;\r\n        const commands = editor.commands;\r\n        const enterCommand = commands.get('enter');\r\n        // Overwrite the default Enter key behavior: outdent or split the list in certain cases.\r\n        this.listenTo(editor.editing.view.document, 'enter', (evt, data) => {\r\n            const doc = model.document;\r\n            const positionParent = doc.selection.getFirstPosition().parent;\r\n            if (doc.selection.isCollapsed &&\r\n                (0,_utils_model__WEBPACK_IMPORTED_MODULE_11__.isListItemBlock)(positionParent) &&\r\n                positionParent.isEmpty &&\r\n                !data.isSoft) {\r\n                const isFirstBlock = (0,_utils_model__WEBPACK_IMPORTED_MODULE_11__.isFirstBlockOfListItem)(positionParent);\r\n                const isLastBlock = (0,_utils_model__WEBPACK_IMPORTED_MODULE_11__.isLastBlockOfListItem)(positionParent);\r\n                // * a      →      * a\r\n                // * []     →      []\r\n                if (isFirstBlock && isLastBlock) {\r\n                    editor.execute('outdentList');\r\n                    data.preventDefault();\r\n                    evt.stop();\r\n                }\r\n                // * []     →      * []\r\n                //   a      →      * a\r\n                else if (isFirstBlock && !isLastBlock) {\r\n                    editor.execute('splitListItemAfter');\r\n                    data.preventDefault();\r\n                    evt.stop();\r\n                }\r\n                // * a      →      * a\r\n                //   []     →      * []\r\n                else if (isLastBlock) {\r\n                    editor.execute('splitListItemBefore');\r\n                    data.preventDefault();\r\n                    evt.stop();\r\n                }\r\n            }\r\n        }, { context: 'li' });\r\n        // In some cases, after the default block splitting, we want to modify the new block to become a new list item\r\n        // instead of an additional block in the same list item.\r\n        this.listenTo(enterCommand, 'afterExecute', () => {\r\n            const splitCommand = commands.get('splitListItemBefore');\r\n            // The command has not refreshed because the change block related to EnterCommand#execute() is not over yet.\r\n            // Let's keep it up to date and take advantage of DocumentListSplitCommand#isEnabled.\r\n            splitCommand.refresh();\r\n            if (!splitCommand.isEnabled) {\r\n                return;\r\n            }\r\n            const doc = editor.model.document;\r\n            const positionParent = doc.selection.getLastPosition().parent;\r\n            const listItemBlocks = (0,_utils_model__WEBPACK_IMPORTED_MODULE_11__.getAllListItemBlocks)(positionParent);\r\n            // Keep in mind this split happens after the default enter handler was executed. For instance:\r\n            //\r\n            // │       Initial state       │    After default enter    │   Here in #afterExecute   │\r\n            // ├───────────────────────────┼───────────────────────────┼───────────────────────────┤\r\n            // │          * a[]            │           * a             │           * a             │\r\n            // │                           │             []            │           * []            │\r\n            if (listItemBlocks.length === 2) {\r\n                splitCommand.execute();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Attaches a listener to the {@link module:engine/view/document~Document#event:tab} event and handles tab key and tab+shift keys\r\n     * presses in document lists.\r\n     */\r\n    _setupTabIntegration() {\r\n        const editor = this.editor;\r\n        this.listenTo(editor.editing.view.document, 'tab', (evt, data) => {\r\n            const commandName = data.shiftKey ? 'outdentList' : 'indentList';\r\n            const command = this.editor.commands.get(commandName);\r\n            if (command.isEnabled) {\r\n                editor.execute(commandName);\r\n                data.stopPropagation();\r\n                data.preventDefault();\r\n                evt.stop();\r\n            }\r\n        }, { context: 'li' });\r\n    }\r\n    /**\r\n     * Registers the conversion helpers for the document-list feature.\r\n     */\r\n    _setupConversion() {\r\n        const editor = this.editor;\r\n        const model = editor.model;\r\n        const attributeNames = this._getListAttributeNames();\r\n        editor.conversion.for('upcast')\r\n            .elementToElement({ view: 'li', model: 'paragraph' })\r\n            .add(dispatcher => {\r\n            dispatcher.on('element:li', (0,_converters__WEBPACK_IMPORTED_MODULE_9__.listItemUpcastConverter)());\r\n            dispatcher.on('element:ul', (0,_converters__WEBPACK_IMPORTED_MODULE_9__.listUpcastCleanList)(), { priority: 'high' });\r\n            dispatcher.on('element:ol', (0,_converters__WEBPACK_IMPORTED_MODULE_9__.listUpcastCleanList)(), { priority: 'high' });\r\n        });\r\n        editor.conversion.for('editingDowncast')\r\n            .elementToElement({\r\n            model: 'paragraph',\r\n            view: (0,_converters__WEBPACK_IMPORTED_MODULE_9__.bogusParagraphCreator)(attributeNames),\r\n            converterPriority: 'high'\r\n        });\r\n        editor.conversion.for('dataDowncast')\r\n            .elementToElement({\r\n            model: 'paragraph',\r\n            view: (0,_converters__WEBPACK_IMPORTED_MODULE_9__.bogusParagraphCreator)(attributeNames, { dataPipeline: true }),\r\n            converterPriority: 'high'\r\n        });\r\n        editor.conversion.for('downcast')\r\n            .add(dispatcher => {\r\n            dispatcher.on('attribute', (0,_converters__WEBPACK_IMPORTED_MODULE_9__.listItemDowncastConverter)(attributeNames, this._downcastStrategies, model));\r\n        });\r\n        this.listenTo(model.document, 'change:data', (0,_converters__WEBPACK_IMPORTED_MODULE_9__.reconvertItemsOnDataChange)(model, editor.editing, attributeNames, this), { priority: 'high' });\r\n        // For LI verify if an ID of the attribute element is correct.\r\n        this.on('checkAttributes:item', (evt, { viewElement, modelAttributes }) => {\r\n            if (viewElement.id != modelAttributes.listItemId) {\r\n                evt.return = true;\r\n                evt.stop();\r\n            }\r\n        });\r\n        // For UL and OL check if the name and ID of element is correct.\r\n        this.on('checkAttributes:list', (evt, { viewElement, modelAttributes }) => {\r\n            if (viewElement.name != (0,_utils_view__WEBPACK_IMPORTED_MODULE_12__.getViewElementNameForListType)(modelAttributes.listType) ||\r\n                viewElement.id != (0,_utils_view__WEBPACK_IMPORTED_MODULE_12__.getViewElementIdForListType)(modelAttributes.listType, modelAttributes.listIndent)) {\r\n                evt.return = true;\r\n                evt.stop();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Registers model post-fixers.\r\n     */\r\n    _setupModelPostFixing() {\r\n        const model = this.editor.model;\r\n        const attributeNames = this._getListAttributeNames();\r\n        // Register list fixing.\r\n        // First the low level handler.\r\n        model.document.registerPostFixer(writer => modelChangePostFixer(model, writer, attributeNames, this));\r\n        // Then the callbacks for the specific lists.\r\n        // The indentation fixing must be the first one...\r\n        this.on('postFixer', (evt, { listNodes, writer }) => {\r\n            evt.return = (0,_utils_postfixers__WEBPACK_IMPORTED_MODULE_10__.fixListIndents)(listNodes, writer) || evt.return;\r\n        }, { priority: 'high' });\r\n        // ...then the item ids... and after that other fixers that rely on the correct indentation and ids.\r\n        this.on('postFixer', (evt, { listNodes, writer, seenIds }) => {\r\n            evt.return = (0,_utils_postfixers__WEBPACK_IMPORTED_MODULE_10__.fixListItemIds)(listNodes, seenIds, writer) || evt.return;\r\n        }, { priority: 'high' });\r\n    }\r\n    /**\r\n     * Integrates the feature with the clipboard via {@link module:engine/model/model~Model#insertContent} and\r\n     * {@link module:engine/model/model~Model#getSelectedContent}.\r\n     */\r\n    _setupClipboardIntegration() {\r\n        const model = this.editor.model;\r\n        this.listenTo(model, 'insertContent', createModelIndentPasteFixer(model), { priority: 'high' });\r\n        // To enhance the UX, the editor should not copy list attributes to the clipboard if the selection\r\n        // started and ended in the same list item.\r\n        //\r\n        // If the selection was enclosed in a single list item, there is a good chance the user did not want it\r\n        // copied as a list item but plain blocks.\r\n        //\r\n        // This avoids pasting orphaned list items instead of paragraphs, for instance, straight into the root.\r\n        //\r\n        //\t                       ┌─────────────────────┬───────────────────┐\r\n        //\t                       │ Selection           │ Clipboard content │\r\n        //\t                       ├─────────────────────┼───────────────────┤\r\n        //\t                       │ [* <Widget />]      │ <Widget />        │\r\n        //\t                       ├─────────────────────┼───────────────────┤\r\n        //\t                       │ [* Foo]             │ Foo               │\r\n        //\t                       ├─────────────────────┼───────────────────┤\r\n        //\t                       │ * Foo [bar] baz     │ bar               │\r\n        //\t                       ├─────────────────────┼───────────────────┤\r\n        //\t                       │ * Fo[o              │ o                 │\r\n        //\t                       │   ba]r              │ ba                │\r\n        //\t                       ├─────────────────────┼───────────────────┤\r\n        //\t                       │ * Fo[o              │ * o               │\r\n        //\t                       │ * ba]r              │ * ba              │\r\n        //\t                       ├─────────────────────┼───────────────────┤\r\n        //\t                       │ [* Foo              │ * Foo             │\r\n        //\t                       │  * bar]             │ * bar             │\r\n        //\t                       └─────────────────────┴───────────────────┘\r\n        //\r\n        // See https://github.com/ckeditor/ckeditor5/issues/11608.\r\n        this.listenTo(model, 'getSelectedContent', (evt, [selection]) => {\r\n            const isSingleListItemSelected = (0,_utils_model__WEBPACK_IMPORTED_MODULE_11__.isSingleListItem)(Array.from(selection.getSelectedBlocks()));\r\n            if (isSingleListItemSelected) {\r\n                model.change(writer => (0,_utils_model__WEBPACK_IMPORTED_MODULE_11__.removeListAttributes)(Array.from(evt.return.getChildren()), writer));\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Post-fixer that reacts to changes on document and fixes incorrect model states (invalid `listItemId` and `listIndent` values).\r\n *\r\n * In the example below, there is a correct list structure.\r\n * Then the middle element is removed so the list structure will become incorrect:\r\n *\r\n * ```xml\r\n * <paragraph listType=\"bulleted\" listItemId=\"a\" listIndent=0>Item 1</paragraph>\r\n * <paragraph listType=\"bulleted\" listItemId=\"b\" listIndent=1>Item 2</paragraph>   <--- this is removed.\r\n * <paragraph listType=\"bulleted\" listItemId=\"c\" listIndent=2>Item 3</paragraph>\r\n * ```\r\n *\r\n * The list structure after the middle element is removed:\r\n *\r\n * ```xml\r\n * <paragraph listType=\"bulleted\" listItemId=\"a\" listIndent=0>Item 1</paragraph>\r\n * <paragraph listType=\"bulleted\" listItemId=\"c\" listIndent=2>Item 3</paragraph>\r\n * ```\r\n *\r\n * Should become:\r\n *\r\n * ```xml\r\n * <paragraph listType=\"bulleted\" listItemId=\"a\" listIndent=0>Item 1</paragraph>\r\n * <paragraph listType=\"bulleted\" listItemId=\"c\" listIndent=1>Item 3</paragraph>   <--- note that indent got post-fixed.\r\n * ```\r\n *\r\n * @param model The data model.\r\n * @param writer The writer to do changes with.\r\n * @param attributeNames The list of all model list attributes (including registered strategies).\r\n * @param documentListEditing The document list editing plugin.\r\n * @returns `true` if any change has been applied, `false` otherwise.\r\n */\r\nfunction modelChangePostFixer(model, writer, attributeNames, documentListEditing) {\r\n    const changes = model.document.differ.getChanges();\r\n    const itemToListHead = new Map();\r\n    let applied = false;\r\n    for (const entry of changes) {\r\n        if (entry.type == 'insert' && entry.name != '$text') {\r\n            const item = entry.position.nodeAfter;\r\n            // Remove attributes in case of renamed element.\r\n            if (!model.schema.checkAttribute(item, 'listItemId')) {\r\n                for (const attributeName of Array.from(item.getAttributeKeys())) {\r\n                    if (attributeNames.includes(attributeName)) {\r\n                        writer.removeAttribute(attributeName, item);\r\n                        applied = true;\r\n                    }\r\n                }\r\n            }\r\n            (0,_utils_postfixers__WEBPACK_IMPORTED_MODULE_10__.findAndAddListHeadToMap)(entry.position, itemToListHead);\r\n            // Insert of a non-list item - check if there is a list after it.\r\n            if (!entry.attributes.has('listItemId')) {\r\n                (0,_utils_postfixers__WEBPACK_IMPORTED_MODULE_10__.findAndAddListHeadToMap)(entry.position.getShiftedBy(entry.length), itemToListHead);\r\n            }\r\n            // Check if there is no nested list.\r\n            for (const { item: innerItem, previousPosition } of model.createRangeIn(item)) {\r\n                if ((0,_utils_model__WEBPACK_IMPORTED_MODULE_11__.isListItemBlock)(innerItem)) {\r\n                    (0,_utils_postfixers__WEBPACK_IMPORTED_MODULE_10__.findAndAddListHeadToMap)(previousPosition, itemToListHead);\r\n                }\r\n            }\r\n        }\r\n        // Removed list item or block adjacent to a list.\r\n        else if (entry.type == 'remove') {\r\n            (0,_utils_postfixers__WEBPACK_IMPORTED_MODULE_10__.findAndAddListHeadToMap)(entry.position, itemToListHead);\r\n        }\r\n        // Changed list item indent or type.\r\n        else if (entry.type == 'attribute' && attributeNames.includes(entry.attributeKey)) {\r\n            (0,_utils_postfixers__WEBPACK_IMPORTED_MODULE_10__.findAndAddListHeadToMap)(entry.range.start, itemToListHead);\r\n            if (entry.attributeNewValue === null) {\r\n                (0,_utils_postfixers__WEBPACK_IMPORTED_MODULE_10__.findAndAddListHeadToMap)(entry.range.start.getShiftedBy(1), itemToListHead);\r\n            }\r\n        }\r\n    }\r\n    // Make sure that IDs are not shared by split list.\r\n    const seenIds = new Set();\r\n    for (const listHead of itemToListHead.values()) {\r\n        applied = documentListEditing.fire('postFixer', {\r\n            listNodes: new _utils_listwalker__WEBPACK_IMPORTED_MODULE_13__.ListBlocksIterable(listHead),\r\n            listHead,\r\n            writer,\r\n            seenIds\r\n        }) || applied;\r\n    }\r\n    return applied;\r\n}\r\n/**\r\n * A fixer for pasted content that includes list items.\r\n *\r\n * It fixes indentation of pasted list items so the pasted items match correctly to the context they are pasted into.\r\n *\r\n * Example:\r\n *\r\n * ```xml\r\n * <paragraph listType=\"bulleted\" listItemId=\"a\" listIndent=0>A</paragraph>\r\n * <paragraph listType=\"bulleted\" listItemId=\"b\" listIndent=1>B^</paragraph>\r\n * // At ^ paste:  <paragraph listType=\"bulleted\" listItemId=\"x\" listIndent=4>X</paragraph>\r\n * //              <paragraph listType=\"bulleted\" listItemId=\"y\" listIndent=5>Y</paragraph>\r\n * <paragraph listType=\"bulleted\" listItemId=\"c\" listIndent=2>C</paragraph>\r\n * ```\r\n *\r\n * Should become:\r\n *\r\n * ```xml\r\n * <paragraph listType=\"bulleted\" listItemId=\"a\" listIndent=0>A</paragraph>\r\n * <paragraph listType=\"bulleted\" listItemId=\"b\" listIndent=1>BX</paragraph>\r\n * <paragraph listType=\"bulleted\" listItemId=\"y\" listIndent=2>Y/paragraph>\r\n * <paragraph listType=\"bulleted\" listItemId=\"c\" listIndent=2>C</paragraph>\r\n * ```\r\n */\r\nfunction createModelIndentPasteFixer(model) {\r\n    return (evt, [content, selectable]) => {\r\n        // Check whether inserted content starts from a `listItem`. If it does not, it means that there are some other\r\n        // elements before it and there is no need to fix indents, because even if we insert that content into a list,\r\n        // that list will be broken.\r\n        // Note: we also need to handle singular elements because inserting item with indent 0 into 0,1,[],2\r\n        // would create incorrect model.\r\n        const item = content.is('documentFragment') ? content.getChild(0) : content;\r\n        if (!(0,_utils_model__WEBPACK_IMPORTED_MODULE_11__.isListItemBlock)(item)) {\r\n            return;\r\n        }\r\n        let selection;\r\n        if (!selectable) {\r\n            selection = model.document.selection;\r\n        }\r\n        else {\r\n            selection = model.createSelection(selectable);\r\n        }\r\n        // Get a reference list item. Inserted list items will be fixed according to that item.\r\n        const pos = selection.getFirstPosition();\r\n        let refItem = null;\r\n        if ((0,_utils_model__WEBPACK_IMPORTED_MODULE_11__.isListItemBlock)(pos.parent)) {\r\n            refItem = pos.parent;\r\n        }\r\n        else if ((0,_utils_model__WEBPACK_IMPORTED_MODULE_11__.isListItemBlock)(pos.nodeBefore)) {\r\n            refItem = pos.nodeBefore;\r\n        }\r\n        // If there is `refItem` it means that we do insert list items into an existing list.\r\n        if (!refItem) {\r\n            return;\r\n        }\r\n        // First list item in `data` has indent equal to 0 (it is a first list item). It should have indent equal\r\n        // to the indent of reference item. We have to fix the first item and all of it's children and following siblings.\r\n        // Indent of all those items has to be adjusted to reference item.\r\n        const indentChange = refItem.getAttribute('listIndent') - item.getAttribute('listIndent');\r\n        // Fix only if there is anything to fix.\r\n        if (indentChange <= 0) {\r\n            return;\r\n        }\r\n        model.change(writer => {\r\n            // Adjust indent of all \"first\" list items in inserted data.\r\n            for (const { node } of (0,_utils_listwalker__WEBPACK_IMPORTED_MODULE_13__.iterateSiblingListBlocks)(item, 'forward')) {\r\n                writer.setAttribute('listIndent', node.getAttribute('listIndent') + indentChange, node);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Decides whether the merge should be accompanied by the model's `deleteContent()`, for instance, to get rid of the inline\r\n * content in the selection or take advantage of the heuristics in `deleteContent()` that helps convert lists into paragraphs\r\n * in certain cases.\r\n */\r\nfunction shouldMergeOnBlocksContentLevel(model, direction) {\r\n    const selection = model.document.selection;\r\n    if (!selection.isCollapsed) {\r\n        return !(0,_utils_model__WEBPACK_IMPORTED_MODULE_11__.getSelectedBlockObject)(model);\r\n    }\r\n    if (direction === 'forward') {\r\n        return true;\r\n    }\r\n    const firstPosition = selection.getFirstPosition();\r\n    const positionParent = firstPosition.parent;\r\n    const previousSibling = positionParent.previousSibling;\r\n    if (model.schema.isObject(previousSibling)) {\r\n        return false;\r\n    }\r\n    if (previousSibling.isEmpty) {\r\n        return true;\r\n    }\r\n    return (0,_utils_model__WEBPACK_IMPORTED_MODULE_11__.isSingleListItem)([positionParent, previousSibling]);\r\n}\r\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/src/documentlist/documentlistediting.js?")
      }
      ,
      "./js/ckeditor5_plugins/list/src/documentlist/documentlistindentcommand.js": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DocumentListIndentCommand)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n/* harmony import */ var _utils_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/model */ \"./js/ckeditor5_plugins/list/src/documentlist/utils/model.js\");\n/* harmony import */ var _utils_listwalker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/listwalker */ \"./js/ckeditor5_plugins/list/src/documentlist/utils/listwalker.js\");\n/**\r\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n/**\r\n * @module list/documentlist/documentlistindentcommand\r\n */\r\n\r\n\r\n\r\n/**\r\n * The document list indent command. It is used by the {@link module:list/documentlist~DocumentList list feature}.\r\n */\r\nclass DocumentListIndentCommand extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Command {\r\n    /**\r\n     * Creates an instance of the command.\r\n     *\r\n     * @param editor The editor instance.\r\n     * @param indentDirection The direction of indent. If it is equal to `backward`, the command\r\n     * will outdent a list item.\r\n     */\r\n    constructor(editor, indentDirection) {\r\n        super(editor);\r\n        this._direction = indentDirection;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    refresh() {\r\n        this.isEnabled = this._checkEnabled();\r\n    }\r\n    /**\r\n     * Indents or outdents (depending on the {@link #constructor}'s `indentDirection` parameter) selected list items.\r\n     *\r\n     * @fires execute\r\n     * @fires afterExecute\r\n     */\r\n    execute() {\r\n        const model = this.editor.model;\r\n        const blocks = getSelectedListBlocks(model.document.selection);\r\n        model.change(writer => {\r\n            const changedBlocks = [];\r\n            // Handle selection contained in the single list item and starting in the following blocks.\r\n            if ((0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.isSingleListItem)(blocks) && !(0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.isFirstBlockOfListItem)(blocks[0])) {\r\n                // Allow increasing indent of following list item blocks.\r\n                if (this._direction == 'forward') {\r\n                    changedBlocks.push(...(0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.indentBlocks)(blocks, writer));\r\n                }\r\n                // For indent make sure that indented blocks have a new ID.\r\n                // For outdent just split blocks from the list item (give them a new IDs).\r\n                changedBlocks.push(...(0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.splitListItemBefore)(blocks[0], writer));\r\n            }\r\n            // More than a single list item is selected, or the first block of list item is selected.\r\n            else {\r\n                // Now just update the attributes of blocks.\r\n                if (this._direction == 'forward') {\r\n                    changedBlocks.push(...(0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.indentBlocks)(blocks, writer, { expand: true }));\r\n                }\r\n                else {\r\n                    changedBlocks.push(...(0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.outdentBlocksWithMerge)(blocks, writer));\r\n                }\r\n            }\r\n            // Align the list item type to match the previous list item (from the same list).\r\n            for (const block of changedBlocks) {\r\n                // This block become a plain block (for example a paragraph).\r\n                if (!block.hasAttribute('listType')) {\r\n                    continue;\r\n                }\r\n                const previousItemBlock = _utils_listwalker__WEBPACK_IMPORTED_MODULE_2__[\"default\"].first(block, { sameIndent: true });\r\n                if (previousItemBlock) {\r\n                    writer.setAttribute('listType', previousItemBlock.getAttribute('listType'), block);\r\n                }\r\n            }\r\n            this._fireAfterExecute(changedBlocks);\r\n        });\r\n    }\r\n    /**\r\n     * Fires the `afterExecute` event.\r\n     *\r\n     * @param changedBlocks The changed list elements.\r\n     */\r\n    _fireAfterExecute(changedBlocks) {\r\n        this.fire('afterExecute', (0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.sortBlocks)(new Set(changedBlocks)));\r\n    }\r\n    /**\r\n     * Checks whether the command can be enabled in the current context.\r\n     *\r\n     * @returns Whether the command should be enabled.\r\n     */\r\n    _checkEnabled() {\r\n        // Check whether any of position's ancestor is a list item.\r\n        let blocks = getSelectedListBlocks(this.editor.model.document.selection);\r\n        let firstBlock = blocks[0];\r\n        // If selection is not in a list item, the command is disabled.\r\n        if (!firstBlock) {\r\n            return false;\r\n        }\r\n        // If we are outdenting it is enough to be in list item. Every list item can always be outdented.\r\n        if (this._direction == 'backward') {\r\n            return true;\r\n        }\r\n        // A single block of a list item is selected, so it could be indented as a sublist.\r\n        if ((0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.isSingleListItem)(blocks) && !(0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.isFirstBlockOfListItem)(blocks[0])) {\r\n            return true;\r\n        }\r\n        blocks = (0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.expandListBlocksToCompleteItems)(blocks);\r\n        firstBlock = blocks[0];\r\n        // Check if there is any list item before selected items that could become a parent of selected items.\r\n        const siblingItem = _utils_listwalker__WEBPACK_IMPORTED_MODULE_2__[\"default\"].first(firstBlock, { sameIndent: true });\r\n        if (!siblingItem) {\r\n            return false;\r\n        }\r\n        if (siblingItem.getAttribute('listType') == firstBlock.getAttribute('listType')) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Returns an array of selected blocks truncated to the first non list block element.\r\n */\r\nfunction getSelectedListBlocks(selection) {\r\n    const blocks = Array.from(selection.getSelectedBlocks());\r\n    const firstNonListBlockIndex = blocks.findIndex(block => !(0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.isListItemBlock)(block));\r\n    if (firstNonListBlockIndex != -1) {\r\n        blocks.length = firstNonListBlockIndex;\r\n    }\r\n    return blocks;\r\n}\r\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/src/documentlist/documentlistindentcommand.js?")
      }
      ,
      "./js/ckeditor5_plugins/list/src/documentlist/documentlistmergecommand.js": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DocumentListMergeCommand)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n/* harmony import */ var _utils_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/model */ \"./js/ckeditor5_plugins/list/src/documentlist/utils/model.js\");\n/* harmony import */ var _utils_listwalker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/listwalker */ \"./js/ckeditor5_plugins/list/src/documentlist/utils/listwalker.js\");\n/**\r\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n/**\r\n * @module list/documentlist/documentlistmergecommand\r\n */\r\n\r\n\r\n\r\n/**\r\n * The document list merge command. It is used by the {@link module:list/documentlist~DocumentList list feature}.\r\n */\r\nclass DocumentListMergeCommand extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Command {\r\n    /**\r\n     * Creates an instance of the command.\r\n     *\r\n     * @param editor The editor instance.\r\n     * @param direction Whether list item should be merged before or after the selected block.\r\n     */\r\n    constructor(editor, direction) {\r\n        super(editor);\r\n        this._direction = direction;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    refresh() {\r\n        this.isEnabled = this._checkEnabled();\r\n    }\r\n    /**\r\n     * Merges list blocks together (depending on the {@link #constructor}'s `direction` parameter).\r\n     *\r\n     * @fires execute\r\n     * @fires afterExecute\r\n     * @param options Command options.\r\n     * @param options.shouldMergeOnBlocksContentLevel When set `true`, merging will be performed together\r\n     * with {@link module:engine/model/model~Model#deleteContent} to get rid of the inline content in the selection or take advantage\r\n     * of the heuristics in `deleteContent()` that helps convert lists into paragraphs in certain cases.\r\n     */\r\n    execute({ shouldMergeOnBlocksContentLevel = false } = {}) {\r\n        const model = this.editor.model;\r\n        const selection = model.document.selection;\r\n        const changedBlocks = [];\r\n        model.change(writer => {\r\n            const { firstElement, lastElement } = this._getMergeSubjectElements(selection, shouldMergeOnBlocksContentLevel);\r\n            const firstIndent = firstElement.getAttribute('listIndent') || 0;\r\n            const lastIndent = lastElement.getAttribute('listIndent');\r\n            const lastElementId = lastElement.getAttribute('listItemId');\r\n            if (firstIndent != lastIndent) {\r\n                const nestedLastElementBlocks = (0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.getNestedListBlocks)(lastElement);\r\n                changedBlocks.push(...(0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.indentBlocks)([lastElement, ...nestedLastElementBlocks], writer, {\r\n                    indentBy: firstIndent - lastIndent,\r\n                    // If outdenting, the entire sub-tree that follows must be included.\r\n                    expand: firstIndent < lastIndent\r\n                }));\r\n            }\r\n            if (shouldMergeOnBlocksContentLevel) {\r\n                let sel = selection;\r\n                if (selection.isCollapsed) {\r\n                    sel = writer.createSelection(writer.createRange(writer.createPositionAt(firstElement, 'end'), writer.createPositionAt(lastElement, 0)));\r\n                }\r\n                // Delete selected content. Replace entire content only for non-collapsed selection.\r\n                model.deleteContent(sel, { doNotResetEntireContent: selection.isCollapsed });\r\n                // Get the last \"touched\" element after deleteContent call (can't use the lastElement because\r\n                // it could get merged into the firstElement while deleting content).\r\n                const lastElementAfterDelete = sel.getLastPosition().parent;\r\n                // Check if the element after it was in the same list item and adjust it if needed.\r\n                const nextSibling = lastElementAfterDelete.nextSibling;\r\n                changedBlocks.push(lastElementAfterDelete);\r\n                if (nextSibling && nextSibling !== lastElement && nextSibling.getAttribute('listItemId') == lastElementId) {\r\n                    changedBlocks.push(...(0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.mergeListItemBefore)(nextSibling, lastElementAfterDelete, writer));\r\n                }\r\n            }\r\n            else {\r\n                changedBlocks.push(...(0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.mergeListItemBefore)(lastElement, firstElement, writer));\r\n            }\r\n            this._fireAfterExecute(changedBlocks);\r\n        });\r\n    }\r\n    /**\r\n     * Fires the `afterExecute` event.\r\n     *\r\n     * @param changedBlocks The changed list elements.\r\n     */\r\n    _fireAfterExecute(changedBlocks) {\r\n        this.fire('afterExecute', (0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.sortBlocks)(new Set(changedBlocks)));\r\n    }\r\n    /**\r\n     * Checks whether the command can be enabled in the current context.\r\n     *\r\n     * @returns Whether the command should be enabled.\r\n     */\r\n    _checkEnabled() {\r\n        const model = this.editor.model;\r\n        const selection = model.document.selection;\r\n        const selectedBlockObject = (0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.getSelectedBlockObject)(model);\r\n        if (selection.isCollapsed || selectedBlockObject) {\r\n            const positionParent = selectedBlockObject || selection.getFirstPosition().parent;\r\n            if (!(0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.isListItemBlock)(positionParent)) {\r\n                return false;\r\n            }\r\n            const siblingNode = this._direction == 'backward' ?\r\n                positionParent.previousSibling :\r\n                positionParent.nextSibling;\r\n            if (!siblingNode) {\r\n                return false;\r\n            }\r\n            if ((0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.isSingleListItem)([positionParent, siblingNode])) {\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            const lastPosition = selection.getLastPosition();\r\n            const firstPosition = selection.getFirstPosition();\r\n            // If deleting within a single block of a list item, there's no need to merge anything.\r\n            // The default delete should be executed instead.\r\n            if (lastPosition.parent === firstPosition.parent) {\r\n                return false;\r\n            }\r\n            if (!(0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.isListItemBlock)(lastPosition.parent)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Returns the boundary elements the merge should be executed for. These are not necessarily selection's first\r\n     * and last position parents but sometimes sibling or even further blocks depending on the context.\r\n     *\r\n     * @param selection The selection the merge is executed for.\r\n     * @param shouldMergeOnBlocksContentLevel When `true`, merge is performed together with\r\n     * {@link module:engine/model/model~Model#deleteContent} to remove the inline content within the selection.\r\n     */\r\n    _getMergeSubjectElements(selection, shouldMergeOnBlocksContentLevel) {\r\n        const model = this.editor.model;\r\n        const selectedBlockObject = (0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.getSelectedBlockObject)(model);\r\n        let firstElement, lastElement;\r\n        if (selection.isCollapsed || selectedBlockObject) {\r\n            const positionParent = selectedBlockObject || selection.getFirstPosition().parent;\r\n            const isFirstBlock = (0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.isFirstBlockOfListItem)(positionParent);\r\n            if (this._direction == 'backward') {\r\n                lastElement = positionParent;\r\n                if (isFirstBlock && !shouldMergeOnBlocksContentLevel) {\r\n                    // For the \"c\" as an anchorElement:\r\n                    //  * a\r\n                    //    * b\r\n                    //  * [c]  <-- this block should be merged with \"a\"\r\n                    // It should find \"a\" element to merge with:\r\n                    //  * a\r\n                    //    * b\r\n                    //    c\r\n                    firstElement = _utils_listwalker__WEBPACK_IMPORTED_MODULE_2__[\"default\"].first(positionParent, { sameIndent: true, lowerIndent: true });\r\n                }\r\n                else {\r\n                    firstElement = positionParent.previousSibling;\r\n                }\r\n            }\r\n            else {\r\n                // In case of the forward merge there is no case as above, just merge with next sibling.\r\n                firstElement = positionParent;\r\n                lastElement = positionParent.nextSibling;\r\n            }\r\n        }\r\n        else {\r\n            firstElement = selection.getFirstPosition().parent;\r\n            lastElement = selection.getLastPosition().parent;\r\n        }\r\n        return {\r\n            firstElement: firstElement,\r\n            lastElement: lastElement\r\n        };\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/src/documentlist/documentlistmergecommand.js?")
      }
      ,
      "./js/ckeditor5_plugins/list/src/documentlist/documentlistsplitcommand.js": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ DocumentListSplitCommand)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ "ckeditor5/src/core.js");\n/* harmony import */ var _utils_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/model */ "./js/ckeditor5_plugins/list/src/documentlist/utils/model.js");\n/**\r\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n\r\n/**\r\n * The document list split command that splits the list item at the selection.\r\n *\r\n * It is used by the {@link module:list/documentlist~DocumentList document list feature}.\r\n */\r\nclass DocumentListSplitCommand extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Command {\r\n    /**\r\n     * Creates an instance of the command.\r\n     *\r\n     * @param editor The editor instance.\r\n     * @param direction Whether list item should be split before or after the selected block.\r\n     */\r\n    constructor(editor, direction) {\r\n        super(editor);\r\n        this._direction = direction;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    refresh() {\r\n        this.isEnabled = this._checkEnabled();\r\n    }\r\n    /**\r\n     * Splits the list item at the selection.\r\n     *\r\n     * @fires execute\r\n     * @fires afterExecute\r\n     */\r\n    execute() {\r\n        const editor = this.editor;\r\n        editor.model.change(writer => {\r\n            const changedBlocks = (0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.splitListItemBefore)(this._getStartBlock(), writer);\r\n            this._fireAfterExecute(changedBlocks);\r\n        });\r\n    }\r\n    /**\r\n     * Fires the `afterExecute` event.\r\n     *\r\n     * @param changedBlocks The changed list elements.\r\n     */\r\n    _fireAfterExecute(changedBlocks) {\r\n        this.fire(\'afterExecute\', (0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.sortBlocks)(new Set(changedBlocks)));\r\n    }\r\n    /**\r\n     * Checks whether the command can be enabled in the current context.\r\n     *\r\n     * @returns Whether the command should be enabled.\r\n     */\r\n    _checkEnabled() {\r\n        const selection = this.editor.model.document.selection;\r\n        const block = this._getStartBlock();\r\n        return selection.isCollapsed &&\r\n            (0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.isListItemBlock)(block) &&\r\n            !(0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.isFirstBlockOfListItem)(block);\r\n    }\r\n    /**\r\n     * Returns the model element that is the main focus of the command (according to the current selection and command direction).\r\n     */\r\n    _getStartBlock() {\r\n        const doc = this.editor.model.document;\r\n        const positionParent = doc.selection.getFirstPosition().parent;\r\n        return (this._direction == \'before\' ? positionParent : positionParent.nextSibling);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/src/documentlist/documentlistsplitcommand.js?')
      }
      ,
      "./js/ckeditor5_plugins/list/src/documentlist/documentlistutils.js": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ DocumentListUtils)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ "ckeditor5/src/core.js");\n/* harmony import */ var _utils_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/model */ "./js/ckeditor5_plugins/list/src/documentlist/utils/model.js");\n/**\r\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n\r\n/**\r\n * A set of helpers related to document lists.\r\n */\r\nclass DocumentListUtils extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    static get pluginName() {\r\n        return \'DocumentListUtils\';\r\n    }\r\n    /**\r\n     * Expands the given list of selected blocks to include all the items of the lists they\'re in.\r\n     *\r\n     * @param blocks The list of selected blocks.\r\n     */\r\n    expandListBlocksToCompleteList(blocks) {\r\n        return (0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.expandListBlocksToCompleteList)(blocks);\r\n    }\r\n    /**\r\n     * Check if the given block is the first in the list item.\r\n     *\r\n     * @param listBlock The list block element.\r\n     */\r\n    isFirstBlockOfListItem(listBlock) {\r\n        return (0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.isFirstBlockOfListItem)(listBlock);\r\n    }\r\n    /**\r\n     * Returns true if the given model node is a list item block.\r\n     *\r\n     * @param node A model node.\r\n     */\r\n    isListItemBlock(node) {\r\n        return (0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.isListItemBlock)(node);\r\n    }\r\n    /**\r\n     * Expands the given list of selected blocks to include the leading and tailing blocks of partially selected list items.\r\n     *\r\n     * @param blocks The list of selected blocks.\r\n     * @param options.withNested Whether should include nested list items.\r\n     */\r\n    expandListBlocksToCompleteItems(blocks, options = {}) {\r\n        return (0,_utils_model__WEBPACK_IMPORTED_MODULE_1__.expandListBlocksToCompleteItems)(blocks, options);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/src/documentlist/documentlistutils.js?')
      }
      ,
      "./js/ckeditor5_plugins/list/src/documentlist/utils/listwalker.js": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ListBlocksIterable: () => (/* binding */ ListBlocksIterable),\n/* harmony export */   \"default\": () => (/* binding */ ListWalker),\n/* harmony export */   iterateSiblingListBlocks: () => (/* binding */ iterateSiblingListBlocks)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/utils */ \"ckeditor5/src/utils.js\");\n/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./model */ \"./js/ckeditor5_plugins/list/src/documentlist/utils/model.js\");\n/**\r\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n/**\r\n * @module list/documentlist/utils/listwalker\r\n */\r\n\r\n\r\n/**\r\n * Document list blocks iterator.\r\n */\r\nclass ListWalker {\r\n    /**\r\n     * Creates a document list iterator.\r\n     *\r\n     * @param startElement The start list item block element.\r\n     * @param options.direction The iterating direction.\r\n     * @param options.includeSelf Whether start block should be included in the result (if it's matching other criteria).\r\n     * @param options.sameAttributes Additional attributes that must be the same for each block.\r\n     * @param options.sameIndent Whether blocks with the same indent level as the start block should be included\r\n     * in the result.\r\n     * @param options.lowerIndent Whether blocks with a lower indent level than the start block should be included\r\n     * in the result.\r\n     * @param options.higherIndent Whether blocks with a higher indent level than the start block should be included\r\n     * in the result.\r\n     */\r\n    constructor(startElement, options) {\r\n        this._startElement = startElement;\r\n        this._referenceIndent = startElement.getAttribute('listIndent');\r\n        this._isForward = options.direction == 'forward';\r\n        this._includeSelf = !!options.includeSelf;\r\n        this._sameAttributes = (0,ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_0__.toArray)(options.sameAttributes || []);\r\n        this._sameIndent = !!options.sameIndent;\r\n        this._lowerIndent = !!options.lowerIndent;\r\n        this._higherIndent = !!options.higherIndent;\r\n    }\r\n    /**\r\n     * Performs only first step of iteration and returns the result.\r\n     *\r\n     * @param startElement The start list item block element.\r\n     * @param options.direction The iterating direction.\r\n     * @param options.includeSelf Whether start block should be included in the result (if it's matching other criteria).\r\n     * @param options.sameAttributes Additional attributes that must be the same for each block.\r\n     * @param options.sameIndent Whether blocks with the same indent level as the start block should be included\r\n     * in the result.\r\n     * @param options.lowerIndent Whether blocks with a lower indent level than the start block should be included\r\n     * in the result.\r\n     * @param options.higherIndent Whether blocks with a higher indent level than the start block should be included\r\n     * in the result.\r\n     */\r\n    static first(startElement, options) {\r\n        const walker = new this(startElement, options);\r\n        const iterator = walker[Symbol.iterator]();\r\n        return (0,ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_0__.first)(iterator);\r\n    }\r\n    /**\r\n     * Iterable interface.\r\n     */\r\n    *[Symbol.iterator]() {\r\n        const nestedItems = [];\r\n        for (const { node } of iterateSiblingListBlocks(this._getStartNode(), this._isForward ? 'forward' : 'backward')) {\r\n            const indent = node.getAttribute('listIndent');\r\n            // Leaving a nested list.\r\n            if (indent < this._referenceIndent) {\r\n                // Abort searching blocks.\r\n                if (!this._lowerIndent) {\r\n                    break;\r\n                }\r\n                // While searching for lower indents, update the reference indent to find another parent in the next step.\r\n                this._referenceIndent = indent;\r\n            }\r\n            // Entering a nested list.\r\n            else if (indent > this._referenceIndent) {\r\n                // Ignore nested blocks.\r\n                if (!this._higherIndent) {\r\n                    continue;\r\n                }\r\n                // Collect nested blocks to verify if they are really nested, or it's a different item.\r\n                if (!this._isForward) {\r\n                    nestedItems.push(node);\r\n                    continue;\r\n                }\r\n            }\r\n            // Same indent level block.\r\n            else {\r\n                // Ignore same indent block.\r\n                if (!this._sameIndent) {\r\n                    // While looking for nested blocks, stop iterating while encountering first same indent block.\r\n                    if (this._higherIndent) {\r\n                        // No more nested blocks so yield nested items.\r\n                        if (nestedItems.length) {\r\n                            yield* nestedItems;\r\n                            nestedItems.length = 0;\r\n                        }\r\n                        break;\r\n                    }\r\n                    continue;\r\n                }\r\n                // Abort if item has any additionally specified attribute different.\r\n                if (this._sameAttributes.some(attr => node.getAttribute(attr) !== this._startElement.getAttribute(attr))) {\r\n                    break;\r\n                }\r\n            }\r\n            // There is another block for the same list item so the nested items were in the same list item.\r\n            if (nestedItems.length) {\r\n                yield* nestedItems;\r\n                nestedItems.length = 0;\r\n            }\r\n            yield node;\r\n        }\r\n    }\r\n    /**\r\n     * Returns the model element to start iterating.\r\n     */\r\n    _getStartNode() {\r\n        if (this._includeSelf) {\r\n            return this._startElement;\r\n        }\r\n        return this._isForward ?\r\n            this._startElement.nextSibling :\r\n            this._startElement.previousSibling;\r\n    }\r\n}\r\n/**\r\n * Iterates sibling list blocks starting from the given node.\r\n *\r\n * @internal\r\n * @param node The model node.\r\n * @param direction Iteration direction.\r\n * @returns The object with `node` and `previous` {@link module:engine/model/element~Element blocks}.\r\n */\r\nfunction* iterateSiblingListBlocks(node, direction = 'forward') {\r\n    const isForward = direction == 'forward';\r\n    let previous = null;\r\n    while ((0,_model__WEBPACK_IMPORTED_MODULE_1__.isListItemBlock)(node)) {\r\n        yield { node, previous };\r\n        previous = node;\r\n        node = isForward ? node.nextSibling : node.previousSibling;\r\n    }\r\n}\r\n/**\r\n * The iterable protocol over the list elements.\r\n *\r\n * @internal\r\n */\r\nclass ListBlocksIterable {\r\n    /**\r\n     * @param listHead The head element of a list.\r\n     */\r\n    constructor(listHead) {\r\n        this._listHead = listHead;\r\n    }\r\n    /**\r\n     * List blocks iterator.\r\n     *\r\n     * Iterates over all blocks of a list.\r\n     */\r\n    [Symbol.iterator]() {\r\n        return iterateSiblingListBlocks(this._listHead, 'forward');\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/src/documentlist/utils/listwalker.js?")
      }
      ,
      "./js/ckeditor5_plugins/list/src/documentlist/utils/model.js": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ListItemUid: () => (/* binding */ ListItemUid),\n/* harmony export */   expandListBlocksToCompleteItems: () => (/* binding */ expandListBlocksToCompleteItems),\n/* harmony export */   expandListBlocksToCompleteList: () => (/* binding */ expandListBlocksToCompleteList),\n/* harmony export */   getAllListItemBlocks: () => (/* binding */ getAllListItemBlocks),\n/* harmony export */   getListItemBlocks: () => (/* binding */ getListItemBlocks),\n/* harmony export */   getListItems: () => (/* binding */ getListItems),\n/* harmony export */   getNestedListBlocks: () => (/* binding */ getNestedListBlocks),\n/* harmony export */   getSelectedBlockObject: () => (/* binding */ getSelectedBlockObject),\n/* harmony export */   indentBlocks: () => (/* binding */ indentBlocks),\n/* harmony export */   isFirstBlockOfListItem: () => (/* binding */ isFirstBlockOfListItem),\n/* harmony export */   isLastBlockOfListItem: () => (/* binding */ isLastBlockOfListItem),\n/* harmony export */   isListItemBlock: () => (/* binding */ isListItemBlock),\n/* harmony export */   isSingleListItem: () => (/* binding */ isSingleListItem),\n/* harmony export */   mergeListItemBefore: () => (/* binding */ mergeListItemBefore),\n/* harmony export */   outdentBlocksWithMerge: () => (/* binding */ outdentBlocksWithMerge),\n/* harmony export */   outdentFollowingItems: () => (/* binding */ outdentFollowingItems),\n/* harmony export */   removeListAttributes: () => (/* binding */ removeListAttributes),\n/* harmony export */   sortBlocks: () => (/* binding */ sortBlocks),\n/* harmony export */   splitListItemBefore: () => (/* binding */ splitListItemBefore)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/utils */ \"ckeditor5/src/utils.js\");\n/* harmony import */ var _listwalker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./listwalker */ \"./js/ckeditor5_plugins/list/src/documentlist/utils/listwalker.js\");\n/**\r\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n\r\n/**\r\n * The list item ID generator.\r\n *\r\n * @internal\r\n */\r\nclass ListItemUid {\r\n    /**\r\n     * Returns the next ID.\r\n     *\r\n     * @internal\r\n     */\r\n    /* istanbul ignore next: static function definition -- @preserve */\r\n    static next() {\r\n        return (0,ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_0__.uid)();\r\n    }\r\n}\r\n/**\r\n * Returns true if the given model node is a list item block.\r\n *\r\n * @internal\r\n */\r\nfunction isListItemBlock(node) {\r\n    return !!node && node.is('element') && node.hasAttribute('listItemId');\r\n}\r\n/**\r\n * Returns an array with all elements that represents the same list item.\r\n *\r\n * It means that values for `listIndent`, and `listItemId` for all items are equal.\r\n *\r\n * @internal\r\n * @param listItem Starting list item element.\r\n * @param options.higherIndent Whether blocks with a higher indent level than the start block should be included\r\n * in the result.\r\n */\r\nfunction getAllListItemBlocks(listItem, options = {}) {\r\n    return [\r\n        ...getListItemBlocks(listItem, { ...options, direction: 'backward' }),\r\n        ...getListItemBlocks(listItem, { ...options, direction: 'forward' })\r\n    ];\r\n}\r\n/**\r\n * Returns an array with elements that represents the same list item in the specified direction.\r\n *\r\n * It means that values for `listIndent` and `listItemId` for all items are equal.\r\n *\r\n * **Note**: For backward search the provided item is not included, but for forward search it is included in the result.\r\n *\r\n * @internal\r\n * @param listItem Starting list item element.\r\n * @param options.direction Walking direction.\r\n * @param options.higherIndent Whether blocks with a higher indent level than the start block should be included in the result.\r\n */\r\nfunction getListItemBlocks(listItem, options = {}) {\r\n    const isForward = options.direction == 'forward';\r\n    const items = Array.from(new _listwalker__WEBPACK_IMPORTED_MODULE_1__[\"default\"](listItem, {\r\n        ...options,\r\n        includeSelf: isForward,\r\n        sameIndent: true,\r\n        sameAttributes: 'listItemId'\r\n    }));\r\n    return isForward ? items : items.reverse();\r\n}\r\n/**\r\n * Returns a list items nested inside the given list item.\r\n *\r\n * @internal\r\n */\r\nfunction getNestedListBlocks(listItem) {\r\n    return Array.from(new _listwalker__WEBPACK_IMPORTED_MODULE_1__[\"default\"](listItem, {\r\n        direction: 'forward',\r\n        higherIndent: true\r\n    }));\r\n}\r\n/**\r\n * Returns array of all blocks/items of the same list as given block (same indent, same type and properties).\r\n *\r\n * @internal\r\n * @param listItem Starting list item element.\r\n */\r\nfunction getListItems(listItem) {\r\n    const backwardBlocks = new _listwalker__WEBPACK_IMPORTED_MODULE_1__[\"default\"](listItem, {\r\n        sameIndent: true,\r\n        sameAttributes: 'listType'\r\n    });\r\n    const forwardBlocks = new _listwalker__WEBPACK_IMPORTED_MODULE_1__[\"default\"](listItem, {\r\n        sameIndent: true,\r\n        sameAttributes: 'listType',\r\n        includeSelf: true,\r\n        direction: 'forward'\r\n    });\r\n    return [\r\n        ...Array.from(backwardBlocks).reverse(),\r\n        ...forwardBlocks\r\n    ];\r\n}\r\n/**\r\n * Check if the given block is the first in the list item.\r\n *\r\n * @internal\r\n * @param listBlock The list block element.\r\n */\r\nfunction isFirstBlockOfListItem(listBlock) {\r\n    const previousSibling = _listwalker__WEBPACK_IMPORTED_MODULE_1__[\"default\"].first(listBlock, {\r\n        sameIndent: true,\r\n        sameAttributes: 'listItemId'\r\n    });\r\n    if (!previousSibling) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Check if the given block is the last in the list item.\r\n *\r\n * @internal\r\n */\r\nfunction isLastBlockOfListItem(listBlock) {\r\n    const nextSibling = _listwalker__WEBPACK_IMPORTED_MODULE_1__[\"default\"].first(listBlock, {\r\n        direction: 'forward',\r\n        sameIndent: true,\r\n        sameAttributes: 'listItemId'\r\n    });\r\n    if (!nextSibling) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Expands the given list of selected blocks to include the leading and tailing blocks of partially selected list items.\r\n *\r\n * @internal\r\n * @param blocks The list of selected blocks.\r\n * @param options.withNested Whether should include nested list items.\r\n */\r\nfunction expandListBlocksToCompleteItems(blocks, options = {}) {\r\n    blocks = (0,ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_0__.toArray)(blocks);\r\n    const higherIndent = options.withNested !== false;\r\n    const allBlocks = new Set();\r\n    for (const block of blocks) {\r\n        for (const itemBlock of getAllListItemBlocks(block, { higherIndent })) {\r\n            allBlocks.add(itemBlock);\r\n        }\r\n    }\r\n    return sortBlocks(allBlocks);\r\n}\r\n/**\r\n * Expands the given list of selected blocks to include all the items of the lists they're in.\r\n *\r\n * @internal\r\n * @param blocks The list of selected blocks.\r\n */\r\nfunction expandListBlocksToCompleteList(blocks) {\r\n    blocks = (0,ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_0__.toArray)(blocks);\r\n    const allBlocks = new Set();\r\n    for (const block of blocks) {\r\n        for (const itemBlock of getListItems(block)) {\r\n            allBlocks.add(itemBlock);\r\n        }\r\n    }\r\n    return sortBlocks(allBlocks);\r\n}\r\n/**\r\n * Splits the list item just before the provided list block.\r\n *\r\n * @internal\r\n * @param listBlock The list block element.\r\n * @param writer The model writer.\r\n * @returns The array of updated blocks.\r\n */\r\nfunction splitListItemBefore(listBlock, writer) {\r\n    const blocks = getListItemBlocks(listBlock, { direction: 'forward' });\r\n    const id = ListItemUid.next();\r\n    for (const block of blocks) {\r\n        writer.setAttribute('listItemId', id, block);\r\n    }\r\n    return blocks;\r\n}\r\n/**\r\n * Merges the list item with the parent list item.\r\n *\r\n * @internal\r\n * @param listBlock The list block element.\r\n * @param parentBlock The list block element to merge with.\r\n * @param writer The model writer.\r\n * @returns The array of updated blocks.\r\n */\r\nfunction mergeListItemBefore(listBlock, parentBlock, writer) {\r\n    const attributes = {};\r\n    for (const [key, value] of parentBlock.getAttributes()) {\r\n        if (key.startsWith('list')) {\r\n            attributes[key] = value;\r\n        }\r\n    }\r\n    const blocks = getListItemBlocks(listBlock, { direction: 'forward' });\r\n    for (const block of blocks) {\r\n        writer.setAttributes(attributes, block);\r\n    }\r\n    return blocks;\r\n}\r\n/**\r\n * Increases indentation of given list blocks.\r\n *\r\n * @internal\r\n * @param blocks The block or iterable of blocks.\r\n * @param writer The model writer.\r\n * @param options.expand Whether should expand the list of blocks to include complete list items.\r\n * @param options.indentBy The number of levels the indentation should change (could be negative).\r\n */\r\nfunction indentBlocks(blocks, writer, { expand, indentBy = 1 } = {}) {\r\n    blocks = (0,ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_0__.toArray)(blocks);\r\n    // Expand the selected blocks to contain the whole list items.\r\n    const allBlocks = expand ? expandListBlocksToCompleteItems(blocks) : blocks;\r\n    for (const block of allBlocks) {\r\n        const blockIndent = block.getAttribute('listIndent') + indentBy;\r\n        if (blockIndent < 0) {\r\n            removeListAttributes(block, writer);\r\n        }\r\n        else {\r\n            writer.setAttribute('listIndent', blockIndent, block);\r\n        }\r\n    }\r\n    return allBlocks;\r\n}\r\n/**\r\n * Decreases indentation of given list of blocks. If the indentation of some blocks matches the indentation\r\n * of surrounding blocks, they get merged together.\r\n *\r\n * @internal\r\n * @param blocks The block or iterable of blocks.\r\n * @param writer The model writer.\r\n */\r\nfunction outdentBlocksWithMerge(blocks, writer) {\r\n    blocks = (0,ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_0__.toArray)(blocks);\r\n    // Expand the selected blocks to contain the whole list items.\r\n    const allBlocks = expandListBlocksToCompleteItems(blocks);\r\n    const visited = new Set();\r\n    const referenceIndent = Math.min(...allBlocks.map(block => block.getAttribute('listIndent')));\r\n    const parentBlocks = new Map();\r\n    // Collect parent blocks before the list structure gets altered.\r\n    for (const block of allBlocks) {\r\n        parentBlocks.set(block, _listwalker__WEBPACK_IMPORTED_MODULE_1__[\"default\"].first(block, { lowerIndent: true }));\r\n    }\r\n    for (const block of allBlocks) {\r\n        if (visited.has(block)) {\r\n            continue;\r\n        }\r\n        visited.add(block);\r\n        const blockIndent = block.getAttribute('listIndent') - 1;\r\n        if (blockIndent < 0) {\r\n            removeListAttributes(block, writer);\r\n            continue;\r\n        }\r\n        // Merge with parent list item while outdenting and indent matches reference indent.\r\n        if (block.getAttribute('listIndent') == referenceIndent) {\r\n            const mergedBlocks = mergeListItemIfNotLast(block, parentBlocks.get(block), writer);\r\n            // All list item blocks are updated while merging so add those to visited set.\r\n            for (const mergedBlock of mergedBlocks) {\r\n                visited.add(mergedBlock);\r\n            }\r\n            // The indent level was updated while merging so continue to next block.\r\n            if (mergedBlocks.length) {\r\n                continue;\r\n            }\r\n        }\r\n        writer.setAttribute('listIndent', blockIndent, block);\r\n    }\r\n    return sortBlocks(visited);\r\n}\r\n/**\r\n * Removes all list attributes from the given blocks.\r\n *\r\n * @internal\r\n * @param blocks The block or iterable of blocks.\r\n * @param writer The model writer.\r\n * @returns Array of altered blocks.\r\n */\r\nfunction removeListAttributes(blocks, writer) {\r\n    blocks = (0,ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_0__.toArray)(blocks);\r\n    for (const block of blocks) {\r\n        for (const attributeKey of block.getAttributeKeys()) {\r\n            if (attributeKey.startsWith('list')) {\r\n                writer.removeAttribute(attributeKey, block);\r\n            }\r\n        }\r\n    }\r\n    return blocks;\r\n}\r\n/**\r\n * Checks whether the given blocks are related to a single list item.\r\n *\r\n * @internal\r\n * @param blocks The list block elements.\r\n */\r\nfunction isSingleListItem(blocks) {\r\n    if (!blocks.length) {\r\n        return false;\r\n    }\r\n    const firstItemId = blocks[0].getAttribute('listItemId');\r\n    if (!firstItemId) {\r\n        return false;\r\n    }\r\n    return !blocks.some(item => item.getAttribute('listItemId') != firstItemId);\r\n}\r\n/**\r\n * Modifies the indents of list blocks following the given list block so the indentation is valid after\r\n * the given block is no longer a list item.\r\n *\r\n * @internal\r\n * @param lastBlock The last list block that has become a non-list element.\r\n * @param writer The model writer.\r\n * @returns Array of altered blocks.\r\n */\r\nfunction outdentFollowingItems(lastBlock, writer) {\r\n    const changedBlocks = [];\r\n    // Start from the model item that is just after the last turned-off item.\r\n    let currentIndent = Number.POSITIVE_INFINITY;\r\n    // Correct indent of all items after the last turned off item.\r\n    // Rules that should be followed:\r\n    // 1. All direct sub-items of turned-off item should become indent 0, because the first item after it\r\n    //    will be the first item of a new list. Other items are at the same level, so should have same 0 index.\r\n    // 2. All items with indent lower than indent of turned-off item should become indent 0, because they\r\n    //    should not end up as a child of any of list items that they were not children of before.\r\n    // 3. All other items should have their indent changed relatively to it's parent.\r\n    //\r\n    // For example:\r\n    // 1  * --------\r\n    // 2     * --------\r\n    // 3        * --------\t\t\t<-- this is turned off.\r\n    // 4           * --------\t\t<-- this has to become indent = 0, because it will be first item on a new list.\r\n    // 5              * --------\t<-- this should be still be a child of item above, so indent = 1.\r\n    // 6        * --------\t\t\t<-- this has to become indent = 0, because it should not be a child of any of items above.\r\n    // 7           * --------\t\t<-- this should be still be a child of item above, so indent = 1.\r\n    // 8     * --------\t\t\t\t<-- this has to become indent = 0.\r\n    // 9        * --------\t\t\t<-- this should still be a child of item above, so indent = 1.\r\n    // 10          * --------\t\t<-- this should still be a child of item above, so indent = 2.\r\n    // 11          * --------\t\t<-- this should still be at the same level as item above, so indent = 2.\r\n    // 12 * --------\t\t\t\t<-- this and all below are left unchanged.\r\n    // 13    * --------\r\n    // 14       * --------\r\n    //\r\n    // After turning off 3 the list becomes:\r\n    //\r\n    // 1  * --------\r\n    // 2     * --------\r\n    //\r\n    // 3  --------\r\n    //\r\n    // 4  * --------\r\n    // 5     * --------\r\n    // 6  * --------\r\n    // 7     * --------\r\n    // 8  * --------\r\n    // 9     * --------\r\n    // 10       * --------\r\n    // 11       * --------\r\n    // 12 * --------\r\n    // 13    * --------\r\n    // 14       * --------\r\n    //\r\n    // Thanks to this algorithm no lists are mismatched and no items get unexpected children/parent, while\r\n    // those parent-child connection which are possible to maintain are still maintained. It's worth noting\r\n    // that this is the same effect that we would be get by multiple use of outdent command. However doing\r\n    // it like this is much more efficient because it's less operation (less memory usage, easier OT) and\r\n    // less conversion (faster).\r\n    for (const { node } of (0,_listwalker__WEBPACK_IMPORTED_MODULE_1__.iterateSiblingListBlocks)(lastBlock.nextSibling, 'forward')) {\r\n        // Check each next list item, as long as its indent is higher than 0.\r\n        const indent = node.getAttribute('listIndent');\r\n        // If the indent is 0 we are not going to change anything anyway.\r\n        if (indent == 0) {\r\n            break;\r\n        }\r\n        // We check if that's item indent is lower than current relative indent.\r\n        if (indent < currentIndent) {\r\n            // If it is, current relative indent becomes that indent.\r\n            currentIndent = indent;\r\n        }\r\n        // Fix indent relatively to current relative indent.\r\n        // Note, that if we just changed the current relative indent, the newIndent will be equal to 0.\r\n        const newIndent = indent - currentIndent;\r\n        writer.setAttribute('listIndent', newIndent, node);\r\n        changedBlocks.push(node);\r\n    }\r\n    return changedBlocks;\r\n}\r\n/**\r\n * Returns the array of given blocks sorted by model indexes (document order).\r\n *\r\n * @internal\r\n */\r\nfunction sortBlocks(blocks) {\r\n    return Array.from(blocks)\r\n        .filter(block => block.root.rootName !== '$graveyard')\r\n        .sort((a, b) => a.index - b.index);\r\n}\r\n/**\r\n * Returns a selected block object. If a selected object is inline or when there is no selected\r\n * object, `null` is returned.\r\n *\r\n * @internal\r\n * @param model The instance of editor model.\r\n * @returns Selected block object or `null`.\r\n */\r\nfunction getSelectedBlockObject(model) {\r\n    const selectedElement = model.document.selection.getSelectedElement();\r\n    if (!selectedElement) {\r\n        return null;\r\n    }\r\n    if (model.schema.isObject(selectedElement) && model.schema.isBlock(selectedElement)) {\r\n        return selectedElement;\r\n    }\r\n    return null;\r\n}\r\n// Merges a given block to the given parent block if parent is a list item and there is no more blocks in the same item.\r\nfunction mergeListItemIfNotLast(block, parentBlock, writer) {\r\n    const parentItemBlocks = getListItemBlocks(parentBlock, { direction: 'forward' });\r\n    // Merge with parent only if outdented item wasn't the last one in its parent.\r\n    // Merge:\r\n    // * a\t\t\t->\t\t* a\r\n    //   * [b]\t\t->\t\t  b\r\n    //   c\t\t\t->\t\t  c\r\n    // Don't merge:\r\n    // * a\t\t\t->\t\t* a\r\n    //   * [b]\t\t-> \t\t* b\r\n    // * c\t\t\t->\t\t* c\r\n    if (parentItemBlocks.pop().index > block.index) {\r\n        return mergeListItemBefore(block, parentBlock, writer);\r\n    }\r\n    return [];\r\n}\r\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/src/documentlist/utils/model.js?")
      }
      ,
      "./js/ckeditor5_plugins/list/src/documentlist/utils/postfixers.js": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   findAndAddListHeadToMap: () => (/* binding */ findAndAddListHeadToMap),\n/* harmony export */   fixListIndents: () => (/* binding */ fixListIndents),\n/* harmony export */   fixListItemIds: () => (/* binding */ fixListItemIds)\n/* harmony export */ });\n/* harmony import */ var _listwalker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./listwalker */ \"./js/ckeditor5_plugins/list/src/documentlist/utils/listwalker.js\");\n/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./model */ \"./js/ckeditor5_plugins/list/src/documentlist/utils/model.js\");\n/**\r\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n\r\n/**\r\n * Based on the provided positions looks for the list head and stores it in the provided map.\r\n *\r\n * @internal\r\n * @param position The search starting position.\r\n * @param itemToListHead The map from list item element to the list head element.\r\n */\r\nfunction findAndAddListHeadToMap(position, itemToListHead) {\r\n    const previousNode = position.nodeBefore;\r\n    if (!(0,_model__WEBPACK_IMPORTED_MODULE_1__.isListItemBlock)(previousNode)) {\r\n        const item = position.nodeAfter;\r\n        if ((0,_model__WEBPACK_IMPORTED_MODULE_1__.isListItemBlock)(item)) {\r\n            itemToListHead.set(item, item);\r\n        }\r\n    }\r\n    else {\r\n        let listHead = previousNode;\r\n        // Previously, the loop below was defined like this:\r\n        //\r\n        // \t\tfor ( { node: listHead } of iterateSiblingListBlocks( listHead, 'backward' ) )\r\n        //\r\n        // Unfortunately, such a destructuring is incorrectly transpiled by Babel and the loop never ends.\r\n        // See: https://github.com/ckeditor/ckeditor5-react/issues/345.\r\n        for (const { node } of (0,_listwalker__WEBPACK_IMPORTED_MODULE_0__.iterateSiblingListBlocks)(listHead, 'backward')) {\r\n            listHead = node;\r\n            if (itemToListHead.has(listHead)) {\r\n                return;\r\n            }\r\n        }\r\n        itemToListHead.set(previousNode, listHead);\r\n    }\r\n}\r\n/**\r\n * Scans the list starting from the given list head element and fixes items' indentation.\r\n *\r\n * @internal\r\n * @param listNodes The iterable of list nodes.\r\n * @param writer The model writer.\r\n * @returns Whether the model was modified.\r\n */\r\nfunction fixListIndents(listNodes, writer) {\r\n    let maxIndent = 0; // Guards local sublist max indents that need fixing.\r\n    let prevIndent = -1; // Previous item indent.\r\n    let fixBy = null;\r\n    let applied = false;\r\n    for (const { node } of listNodes) {\r\n        const itemIndent = node.getAttribute('listIndent');\r\n        if (itemIndent > maxIndent) {\r\n            let newIndent;\r\n            if (fixBy === null) {\r\n                fixBy = itemIndent - maxIndent;\r\n                newIndent = maxIndent;\r\n            }\r\n            else {\r\n                if (fixBy > itemIndent) {\r\n                    fixBy = itemIndent;\r\n                }\r\n                newIndent = itemIndent - fixBy;\r\n            }\r\n            if (newIndent > prevIndent + 1) {\r\n                newIndent = prevIndent + 1;\r\n            }\r\n            writer.setAttribute('listIndent', newIndent, node);\r\n            applied = true;\r\n            prevIndent = newIndent;\r\n        }\r\n        else {\r\n            fixBy = null;\r\n            maxIndent = itemIndent + 1;\r\n            prevIndent = itemIndent;\r\n        }\r\n    }\r\n    return applied;\r\n}\r\n/**\r\n * Scans the list starting from the given list head element and fixes items' types.\r\n *\r\n * @internal\r\n * @param listNodes The iterable of list nodes.\r\n * @param seenIds The set of already known IDs.\r\n * @param writer The model writer.\r\n * @returns Whether the model was modified.\r\n */\r\nfunction fixListItemIds(listNodes, seenIds, writer) {\r\n    const visited = new Set();\r\n    let applied = false;\r\n    for (const { node } of listNodes) {\r\n        if (visited.has(node)) {\r\n            continue;\r\n        }\r\n        let listType = node.getAttribute('listType');\r\n        let listItemId = node.getAttribute('listItemId');\r\n        // Use a new ID if this one was spot earlier (even in other list).\r\n        if (seenIds.has(listItemId)) {\r\n            listItemId = _model__WEBPACK_IMPORTED_MODULE_1__.ListItemUid.next();\r\n        }\r\n        seenIds.add(listItemId);\r\n        for (const block of (0,_model__WEBPACK_IMPORTED_MODULE_1__.getListItemBlocks)(node, { direction: 'forward' })) {\r\n            visited.add(block);\r\n            // Use a new ID if a block of a bigger list item has different type.\r\n            if (block.getAttribute('listType') != listType) {\r\n                listItemId = _model__WEBPACK_IMPORTED_MODULE_1__.ListItemUid.next();\r\n                listType = block.getAttribute('listType');\r\n            }\r\n            if (block.getAttribute('listItemId') != listItemId) {\r\n                writer.setAttribute('listItemId', listItemId, block);\r\n                applied = true;\r\n            }\r\n        }\r\n    }\r\n    return applied;\r\n}\r\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/src/documentlist/utils/postfixers.js?")
      }
      ,
      "./js/ckeditor5_plugins/list/src/documentlist/utils/view.js": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createListElement: () => (/* binding */ createListElement),\n/* harmony export */   createListItemElement: () => (/* binding */ createListItemElement),\n/* harmony export */   getIndent: () => (/* binding */ getIndent),\n/* harmony export */   getViewElementIdForListType: () => (/* binding */ getViewElementIdForListType),\n/* harmony export */   getViewElementNameForListType: () => (/* binding */ getViewElementNameForListType),\n/* harmony export */   isListItemView: () => (/* binding */ isListItemView),\n/* harmony export */   isListView: () => (/* binding */ isListView)\n/* harmony export */ });\n/**\r\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n/**\r\n * Checks if view element is a list type (ul or ol).\r\n *\r\n * @internal\r\n */\r\nfunction isListView(viewElement) {\r\n    return viewElement.is('element', 'ol') || viewElement.is('element', 'ul');\r\n}\r\n/**\r\n * Checks if view element is a list item (li).\r\n *\r\n * @internal\r\n */\r\nfunction isListItemView(viewElement) {\r\n    return viewElement.is('element', 'li');\r\n}\r\n/**\r\n * Calculates the indent value for a list item. Handles HTML compliant and non-compliant lists.\r\n *\r\n * Also, fixes non HTML compliant lists indents:\r\n *\r\n * ```\r\n * before:                                     fixed list:\r\n * OL                                          OL\r\n * |-> LI (parent LIs: 0)                      |-> LI     (indent: 0)\r\n *     |-> OL                                  |-> OL\r\n *         |-> OL                                  |\r\n *         |   |-> OL                              |\r\n *         |       |-> OL                          |\r\n *         |           |-> LI (parent LIs: 1)      |-> LI (indent: 1)\r\n *         |-> LI (parent LIs: 1)                  |-> LI (indent: 1)\r\n *\r\n * before:                                     fixed list:\r\n * OL                                          OL\r\n * |-> OL                                      |\r\n *     |-> OL                                  |\r\n *          |-> OL                             |\r\n *              |-> LI (parent LIs: 0)         |-> LI        (indent: 0)\r\n *\r\n * before:                                     fixed list:\r\n * OL                                          OL\r\n * |-> LI (parent LIs: 0)                      |-> LI         (indent: 0)\r\n * |-> OL                                          |-> OL\r\n *     |-> LI (parent LIs: 0)                          |-> LI (indent: 1)\r\n * ```\r\n *\r\n * @internal\r\n */\r\nfunction getIndent(listItem) {\r\n    let indent = 0;\r\n    let parent = listItem.parent;\r\n    while (parent) {\r\n        // Each LI in the tree will result in an increased indent for HTML compliant lists.\r\n        if (isListItemView(parent)) {\r\n            indent++;\r\n        }\r\n        else {\r\n            // If however the list is nested in other list we should check previous sibling of any of the list elements...\r\n            const previousSibling = parent.previousSibling;\r\n            // ...because the we might need increase its indent:\r\n            //\t\tbefore:                           fixed list:\r\n            //\t\tOL                                OL\r\n            //\t\t|-> LI (parent LIs: 0)            |-> LI         (indent: 0)\r\n            //\t\t|-> OL                                |-> OL\r\n            //\t\t    |-> LI (parent LIs: 0)                |-> LI (indent: 1)\r\n            if (previousSibling && isListItemView(previousSibling)) {\r\n                indent++;\r\n            }\r\n        }\r\n        parent = parent.parent;\r\n    }\r\n    return indent;\r\n}\r\n/**\r\n * Creates a list attribute element (ol or ul).\r\n *\r\n * @internal\r\n */\r\nfunction createListElement(writer, indent, type, id = getViewElementIdForListType(type, indent)) {\r\n    // Negative priorities so that restricted editing attribute won't wrap lists.\r\n    return writer.createAttributeElement(getViewElementNameForListType(type), null, {\r\n        priority: 2 * indent / 100 - 100,\r\n        id\r\n    });\r\n}\r\n/**\r\n * Creates a list item attribute element (li).\r\n *\r\n * @internal\r\n */\r\nfunction createListItemElement(writer, indent, id) {\r\n    // Negative priorities so that restricted editing attribute won't wrap list items.\r\n    return writer.createAttributeElement('li', null, {\r\n        priority: (2 * indent + 1) / 100 - 100,\r\n        id\r\n    });\r\n}\r\n/**\r\n * Returns a view element name for the given list type.\r\n *\r\n * @internal\r\n */\r\nfunction getViewElementNameForListType(type) {\r\n    return type == 'numbered' ? 'ol' : 'ul';\r\n}\r\n/**\r\n * Returns a view element ID for the given list type and indent.\r\n *\r\n * @internal\r\n */\r\nfunction getViewElementIdForListType(type, indent) {\r\n    return `list-${type}-${indent}`;\r\n}\r\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/src/documentlist/utils/view.js?")
      }
      ,
      "./js/ckeditor5_plugins/list/src/documentlistproperties.js": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ DocumentListProperties)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ "ckeditor5/src/core.js");\n/* harmony import */ var _documentlistproperties_documentlistpropertiesediting__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./documentlistproperties/documentlistpropertiesediting */ "./js/ckeditor5_plugins/list/src/documentlistproperties/documentlistpropertiesediting.js");\n/* harmony import */ var _listproperties_listpropertiesui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./listproperties/listpropertiesui */ "./js/ckeditor5_plugins/list/src/listproperties/listpropertiesui.js");\n/**\r\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n/**\r\n * @module list/documentlistproperties\r\n */\r\n\r\n\r\n\r\n/**\r\n * The document list properties feature.\r\n *\r\n * This is a "glue" plugin that loads the\r\n * {@link module:list/documentlistproperties/documentlistpropertiesediting~DocumentListPropertiesEditing document list properties\r\n * editing feature} and the {@link module:list/listproperties/listpropertiesui~ListPropertiesUI list properties UI feature}.\r\n */\r\nclass DocumentListProperties extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    static get requires() {\r\n        return [_documentlistproperties_documentlistpropertiesediting__WEBPACK_IMPORTED_MODULE_1__["default"], _listproperties_listpropertiesui__WEBPACK_IMPORTED_MODULE_2__["default"]];\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    static get pluginName() {\r\n        return \'DocumentListProperties\';\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/src/documentlistproperties.js?')
      }
      ,
      "./js/ckeditor5_plugins/list/src/documentlistproperties/converters.js": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   listPropertiesUpcastConverter: () => (/* binding */ listPropertiesUpcastConverter)\n/* harmony export */ });\n/**\r\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n/**\r\n * Returns a converter that consumes the `style`, `reversed`, and `start` attributes.\r\n * In `style`, it searches for the `list-style-type` definition.\r\n * If not found, the `"default"` value will be used.\r\n *\r\n * @internal\r\n * @param strategy\r\n */\r\nfunction listPropertiesUpcastConverter(strategy) {\r\n    return (evt, data, conversionApi) => {\r\n        const { writer, schema, consumable } = conversionApi;\r\n        // If there is no view consumable to consume, set the default attribute value to be able to reconvert nested lists on parent change.\r\n        // So abort converting if attribute was directly consumed.\r\n        if (consumable.test(data.viewItem, strategy.viewConsumables) === false) {\r\n            return;\r\n        }\r\n        if (!data.modelRange) {\r\n            Object.assign(data, conversionApi.convertChildren(data.viewItem, data.modelCursor));\r\n        }\r\n        let applied = false;\r\n        for (const item of data.modelRange.getItems({ shallow: true })) {\r\n            if (!schema.checkAttribute(item, strategy.attributeName)) {\r\n                continue;\r\n            }\r\n            if (!strategy.appliesToListItem(item)) {\r\n                continue;\r\n            }\r\n            // Set list attributes only on same level items, those nested deeper are already handled by the recursive conversion.\r\n            if (item.hasAttribute(strategy.attributeName)) {\r\n                continue;\r\n            }\r\n            writer.setAttribute(strategy.attributeName, strategy.getAttributeOnUpcast(data.viewItem), item);\r\n            applied = true;\r\n        }\r\n        if (applied) {\r\n            consumable.consume(data.viewItem, strategy.viewConsumables);\r\n        }\r\n    };\r\n}\r\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/src/documentlistproperties/converters.js?')
      }
      ,
      "./js/ckeditor5_plugins/list/src/documentlistproperties/documentlistpropertiesediting.js": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DocumentListPropertiesEditing)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n/* harmony import */ var _documentlist_documentlistediting__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../documentlist/documentlistediting */ \"./js/ckeditor5_plugins/list/src/documentlist/documentlistediting.js\");\n/* harmony import */ var _documentliststartcommand__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./documentliststartcommand */ \"./js/ckeditor5_plugins/list/src/documentlistproperties/documentliststartcommand.js\");\n/* harmony import */ var _documentliststylecommand__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./documentliststylecommand */ \"./js/ckeditor5_plugins/list/src/documentlistproperties/documentliststylecommand.js\");\n/* harmony import */ var _documentlistreversedcommand__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./documentlistreversedcommand */ \"./js/ckeditor5_plugins/list/src/documentlistproperties/documentlistreversedcommand.js\");\n/* harmony import */ var _converters__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./converters */ \"./js/ckeditor5_plugins/list/src/documentlistproperties/converters.js\");\n/* harmony import */ var _utils_style__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/style */ \"./js/ckeditor5_plugins/list/src/documentlistproperties/utils/style.js\");\n/* harmony import */ var _documentlistpropertiesutils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./documentlistpropertiesutils */ \"./js/ckeditor5_plugins/list/src/documentlistproperties/documentlistpropertiesutils.js\");\n/**\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module list/documentlistproperties/documentlistpropertiesediting\n */\n\n\n\n\n\n\n\n\nconst DEFAULT_LIST_TYPE = 'default';\n/**\n * The document list properties engine feature.\n *\n * It registers the `'listStyle'`, `'listReversed'` and `'listStart'` commands if they are enabled in the configuration.\n * Read more in {@link module:list/listconfig~ListPropertiesConfig}.\n */\nclass DocumentListPropertiesEditing extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\n    /**\n     * @inheritDoc\n     */\n    static get requires() {\n        return [_documentlist_documentlistediting__WEBPACK_IMPORTED_MODULE_1__[\"default\"], _documentlistpropertiesutils__WEBPACK_IMPORTED_MODULE_7__[\"default\"]];\n    }\n    /**\n     * @inheritDoc\n     */\n    static get pluginName() {\n        return 'DocumentListPropertiesEditing';\n    }\n    /**\n     * @inheritDoc\n     */\n    constructor(editor) {\n        super(editor);\n        editor.config.define('list', {\n            properties: {\n                styles: true,\n                startIndex: false,\n                reversed: false\n            }\n        });\n    }\n    /**\n     * @inheritDoc\n     */\n    init() {\n        const editor = this.editor;\n        const model = editor.model;\n        const documentListEditing = editor.plugins.get(_documentlist_documentlistediting__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n        const enabledProperties = editor.config.get('list.properties');\n        const strategies = createAttributeStrategies(enabledProperties);\n        for (const strategy of strategies) {\n            strategy.addCommand(editor);\n            model.schema.extend('$container', { allowAttributes: strategy.attributeName });\n            model.schema.extend('$block', { allowAttributes: strategy.attributeName });\n            model.schema.extend('$blockObject', { allowAttributes: strategy.attributeName });\n            // Register downcast strategy.\n            documentListEditing.registerDowncastStrategy({\n                scope: 'list',\n                attributeName: strategy.attributeName,\n                setAttributeOnDowncast(writer, attributeValue, viewElement) {\n                    strategy.setAttributeOnDowncast(writer, attributeValue, viewElement);\n                }\n            });\n        }\n        // Set up conversion.\n        editor.conversion.for('upcast').add(dispatcher => {\n            for (const strategy of strategies) {\n                dispatcher.on('element:ol', (0,_converters__WEBPACK_IMPORTED_MODULE_5__.listPropertiesUpcastConverter)(strategy));\n                dispatcher.on('element:ul', (0,_converters__WEBPACK_IMPORTED_MODULE_5__.listPropertiesUpcastConverter)(strategy));\n            }\n        });\n        // Verify if the list view element (ul or ol) requires refreshing.\n        documentListEditing.on('checkAttributes:list', (evt, { viewElement, modelAttributes }) => {\n            for (const strategy of strategies) {\n                if (strategy.getAttributeOnUpcast(viewElement) != modelAttributes[strategy.attributeName]) {\n                    evt.return = true;\n                    evt.stop();\n                }\n            }\n        });\n        // Reset list properties after indenting list items.\n        this.listenTo(editor.commands.get('indentList'), 'afterExecute', (evt, changedBlocks) => {\n            model.change(writer => {\n                for (const node of changedBlocks) {\n                    for (const strategy of strategies) {\n                        if (strategy.appliesToListItem(node)) {\n                            // Just reset the attribute.\n                            // If there is a previous indented list that this node should be merged into,\n                            // the postfixer will unify all the attributes of both sub-lists.\n                            writer.setAttribute(strategy.attributeName, strategy.defaultValue, node);\n                        }\n                    }\n                }\n            });\n        });\n        // Add or remove list properties attributes depending on the list type.\n        documentListEditing.on('postFixer', (evt, { listNodes, writer }) => {\n            for (const { node } of listNodes) {\n                for (const strategy of strategies) {\n                    // Check if attribute is valid.\n                    if (strategy.hasValidAttribute(node)) {\n                        continue;\n                    }\n                    // Add missing default property attributes...\n                    if (strategy.appliesToListItem(node)) {\n                        writer.setAttribute(strategy.attributeName, strategy.defaultValue, node);\n                    }\n                    // ...or remove invalid property attributes.\n                    else {\n                        writer.removeAttribute(strategy.attributeName, node);\n                    }\n                    evt.return = true;\n                }\n            }\n        });\n        // Make sure that all items in a single list (items at the same level & listType) have the same properties.\n        documentListEditing.on('postFixer', (evt, { listNodes, writer }) => {\n            const previousNodesByIndent = []; // Last seen nodes of lower indented lists.\n            for (const { node, previous } of listNodes) {\n                // For the first list block there is nothing to compare with.\n                if (!previous) {\n                    continue;\n                }\n                const nodeIndent = node.getAttribute('listIndent');\n                const previousNodeIndent = previous.getAttribute('listIndent');\n                let previousNodeInList = null; // It's like `previous` but has the same indent as current node.\n                // Let's find previous node for the same indent.\n                // We're going to need that when we get back to previous indent.\n                if (nodeIndent > previousNodeIndent) {\n                    previousNodesByIndent[previousNodeIndent] = previous;\n                }\n                // Restore the one for given indent.\n                else if (nodeIndent < previousNodeIndent) {\n                    previousNodeInList = previousNodesByIndent[nodeIndent];\n                    previousNodesByIndent.length = nodeIndent;\n                }\n                // Same indent.\n                else {\n                    previousNodeInList = previous;\n                }\n                // This is a first item of a nested list.\n                if (!previousNodeInList) {\n                    continue;\n                }\n                // This is a first block of a list of a different type.\n                if (previousNodeInList.getAttribute('listType') != node.getAttribute('listType')) {\n                    continue;\n                }\n                // Copy properties from the previous one.\n                for (const strategy of strategies) {\n                    const { attributeName } = strategy;\n                    if (!strategy.appliesToListItem(node)) {\n                        continue;\n                    }\n                    const value = previousNodeInList.getAttribute(attributeName);\n                    if (node.getAttribute(attributeName) != value) {\n                        writer.setAttribute(attributeName, value, node);\n                        evt.return = true;\n                    }\n                }\n            }\n        });\n    }\n}\n/**\n * Creates an array of strategies for dealing with enabled listItem attributes.\n */\nfunction createAttributeStrategies(enabledProperties) {\n    const strategies = [];\n    if (enabledProperties.styles) {\n        const useAttribute = typeof enabledProperties.styles == 'object' && enabledProperties.styles.useAttribute;\n        strategies.push({\n            attributeName: 'listStyle',\n            defaultValue: DEFAULT_LIST_TYPE,\n            viewConsumables: { styles: 'list-style-type' },\n            addCommand(editor) {\n                let supportedTypes = (0,_utils_style__WEBPACK_IMPORTED_MODULE_6__.getAllSupportedStyleTypes)();\n                if (useAttribute) {\n                    supportedTypes = supportedTypes.filter(styleType => !!(0,_utils_style__WEBPACK_IMPORTED_MODULE_6__.getTypeAttributeFromListStyleType)(styleType));\n                }\n                editor.commands.add('listStyle', new _documentliststylecommand__WEBPACK_IMPORTED_MODULE_3__[\"default\"](editor, DEFAULT_LIST_TYPE, supportedTypes));\n            },\n            appliesToListItem() {\n                return true;\n            },\n            hasValidAttribute(item) {\n                if (!item.hasAttribute('listStyle')) {\n                    return false;\n                }\n                const value = item.getAttribute('listStyle');\n                if (value == DEFAULT_LIST_TYPE) {\n                    return true;\n                }\n                return (0,_utils_style__WEBPACK_IMPORTED_MODULE_6__.getListTypeFromListStyleType)(value) == item.getAttribute('listType');\n            },\n            setAttributeOnDowncast( writer, listStyle, element ) {\n              if ( listStyle && listStyle !== DEFAULT_LIST_TYPE ) {\n                const value = (0,_utils_style__WEBPACK_IMPORTED_MODULE_6__.getTypeAttributeFromListStyleType)( listStyle );\n                let classes = '';\n\n                if (value === 'none') {\n                  classes = 'ckeditor-list-style-none';\n                }\n\n                if ( useAttribute ) {\n                  if ( value ) {\n                    classes = 'ckeditor-list-type-attribute';\n                    writer.setAttribute( 'type', value, element );\n                    writer.setStyle( 'list-style-type', listStyle, element );\n                  }\n                } else {\n                  classes = 'ckeditor-list-type-style';\n                  writer.setStyle( 'list-style-type', listStyle, element );\n                }\n\n                if (classes) {\n                  writer.addClass(classes, element);\n                }\n                return;\n              }\n\n              ['ckeditor-list-type-style', 'ckeditor-list-type-attribute', 'ckeditor-list-style-none']\n                  .forEach(customClass => element._removeClass(customClass));\n              writer.removeStyle( 'list-style-type', element );\n              writer.removeAttribute( 'type', element );\n            },\n            getAttributeOnUpcast(listParent) {\n                const style = listParent.getStyle('list-style-type');\n                if (style) {\n                    return style;\n                }\n                const attribute = listParent.getAttribute('type');\n                if (attribute) {\n                    return (0,_utils_style__WEBPACK_IMPORTED_MODULE_6__.getListStyleTypeFromTypeAttribute)(attribute);\n                }\n                return DEFAULT_LIST_TYPE;\n            }\n        });\n    }\n    if (enabledProperties.reversed) {\n        strategies.push({\n            attributeName: 'listReversed',\n            defaultValue: false,\n            viewConsumables: { attributes: 'reversed' },\n            addCommand(editor) {\n                editor.commands.add('listReversed', new _documentlistreversedcommand__WEBPACK_IMPORTED_MODULE_4__[\"default\"](editor));\n            },\n            appliesToListItem(item) {\n                return item.getAttribute('listType') == 'numbered';\n            },\n            hasValidAttribute(item) {\n                return this.appliesToListItem(item) == item.hasAttribute('listReversed');\n            },\n            setAttributeOnDowncast(writer, listReversed, element) {\n                if (listReversed) {\n                    writer.setAttribute('reversed', 'reversed', element);\n                }\n                else {\n                    writer.removeAttribute('reversed', element);\n                }\n            },\n            getAttributeOnUpcast(listParent) {\n                return listParent.hasAttribute('reversed');\n            }\n        });\n    }\n    if (enabledProperties.startIndex) {\n        strategies.push({\n            attributeName: 'listStart',\n            defaultValue: 1,\n            viewConsumables: { attributes: 'start' },\n            addCommand(editor) {\n                editor.commands.add('listStart', new _documentliststartcommand__WEBPACK_IMPORTED_MODULE_2__[\"default\"](editor));\n            },\n            appliesToListItem(item) {\n                return item.getAttribute('listType') == 'numbered';\n            },\n            hasValidAttribute(item) {\n                return this.appliesToListItem(item) == item.hasAttribute('listStart');\n            },\n            setAttributeOnDowncast(writer, listStart, element) {\n                if (listStart == 0 || listStart > 1) {\n                    writer.setAttribute('start', listStart, element);\n                }\n                else {\n                    writer.removeAttribute('start', element);\n                }\n            },\n            getAttributeOnUpcast(listParent) {\n                const startAttributeValue = listParent.getAttribute('start');\n                return startAttributeValue >= 0 ? startAttributeValue : 1;\n            }\n        });\n    }\n    return strategies;\n}\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/src/documentlistproperties/documentlistpropertiesediting.js?")
      }
      ,
      "./js/ckeditor5_plugins/list/src/documentlistproperties/documentlistpropertiesutils.js": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ DocumentListPropertiesUtils)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ "ckeditor5/src/core.js");\n/* harmony import */ var _utils_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/style */ "./js/ckeditor5_plugins/list/src/documentlistproperties/utils/style.js");\n/**\r\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n/**\r\n * @module list/documentlistproperties/documentlistpropertiesutils\r\n */\r\n\r\n\r\n/**\r\n * A set of helpers related to document lists.\r\n */\r\nclass DocumentListPropertiesUtils extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    static get pluginName() {\r\n        return \'DocumentListPropertiesUtils\';\r\n    }\r\n    /**\r\n     * Gets all the style types supported by given list type.\r\n     */\r\n    getAllSupportedStyleTypes() {\r\n        return (0,_utils_style__WEBPACK_IMPORTED_MODULE_1__.getAllSupportedStyleTypes)();\r\n    }\r\n    /**\r\n     * Checks whether the given list-style-type is supported by numbered or bulleted list.\r\n     */\r\n    getListTypeFromListStyleType(listStyleType) {\r\n        return (0,_utils_style__WEBPACK_IMPORTED_MODULE_1__.getListTypeFromListStyleType)(listStyleType);\r\n    }\r\n    /**\r\n     * Converts `type` attribute of `<ul>` or `<ol>` elements to `list-style-type` equivalent.\r\n     */\r\n    getListStyleTypeFromTypeAttribute(value) {\r\n        return (0,_utils_style__WEBPACK_IMPORTED_MODULE_1__.getListStyleTypeFromTypeAttribute)(value);\r\n    }\r\n    /**\r\n     * Converts `list-style-type` style to `type` attribute of `<ul>` or `<ol>` elements.\r\n     */\r\n    getTypeAttributeFromListStyleType(value) {\r\n        return (0,_utils_style__WEBPACK_IMPORTED_MODULE_1__.getTypeAttributeFromListStyleType)(value);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/src/documentlistproperties/documentlistpropertiesutils.js?')
      }
      ,
      "./js/ckeditor5_plugins/list/src/documentlistproperties/documentlistreversedcommand.js": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DocumentListReversedCommand)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n/* harmony import */ var ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ckeditor5/src/utils */ \"ckeditor5/src/utils.js\");\n/* harmony import */ var _documentlist_utils_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../documentlist/utils/model */ \"./js/ckeditor5_plugins/list/src/documentlist/utils/model.js\");\n/**\r\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n/**\r\n * @module list/documentlistproperties/documentlistreversedcommand\r\n */\r\n\r\n\r\n\r\n/**\r\n * The list reversed command. It changes the `listReversed` attribute of the selected list items,\r\n * letting the user to choose the order of an ordered list.\r\n * It is used by the {@link module:list/documentlistproperties~DocumentListProperties list properties feature}.\r\n */\r\nclass DocumentListReversedCommand extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Command {\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    refresh() {\r\n        const value = this._getValue();\r\n        this.value = value;\r\n        this.isEnabled = value != null;\r\n    }\r\n    /**\r\n     * Executes the command.\r\n     *\r\n     * @fires execute\r\n     * @param options.reversed Whether the list should be reversed.\r\n     */\r\n    execute(options = {}) {\r\n        const model = this.editor.model;\r\n        const document = model.document;\r\n        let blocks = Array.from(document.selection.getSelectedBlocks())\r\n            .filter(block => (0,_documentlist_utils_model__WEBPACK_IMPORTED_MODULE_2__.isListItemBlock)(block) && block.getAttribute('listType') == 'numbered');\r\n        blocks = (0,_documentlist_utils_model__WEBPACK_IMPORTED_MODULE_2__.expandListBlocksToCompleteList)(blocks);\r\n        model.change(writer => {\r\n            for (const block of blocks) {\r\n                writer.setAttribute('listReversed', !!options.reversed, block);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Checks the command's {@link #value}.\r\n     */\r\n    _getValue() {\r\n        const model = this.editor.model;\r\n        const document = model.document;\r\n        const block = (0,ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_1__.first)(document.selection.getSelectedBlocks());\r\n        if ((0,_documentlist_utils_model__WEBPACK_IMPORTED_MODULE_2__.isListItemBlock)(block) && block.getAttribute('listType') == 'numbered') {\r\n            return block.getAttribute('listReversed');\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/src/documentlistproperties/documentlistreversedcommand.js?")
      }
      ,
      "./js/ckeditor5_plugins/list/src/documentlistproperties/documentliststartcommand.js": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DocumentListStartCommand)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n/* harmony import */ var ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ckeditor5/src/utils */ \"ckeditor5/src/utils.js\");\n/* harmony import */ var _documentlist_utils_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../documentlist/utils/model */ \"./js/ckeditor5_plugins/list/src/documentlist/utils/model.js\");\n/**\r\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n/**\r\n * @module list/documentlistproperties/documentliststartcommand\r\n */\r\n\r\n\r\n\r\n/**\r\n * The list start index command. It changes the `listStart` attribute of the selected list items,\r\n * letting the user to choose the starting point of an ordered list.\r\n * It is used by the {@link module:list/documentlistproperties~DocumentListProperties list properties feature}.\r\n */\r\nclass DocumentListStartCommand extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Command {\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    refresh() {\r\n        const value = this._getValue();\r\n        this.value = value;\r\n        this.isEnabled = value != null;\r\n    }\r\n    /**\r\n     * Executes the command.\r\n     *\r\n     * @fires execute\r\n     * @param options.startIndex The list start index.\r\n     */\r\n    execute({ startIndex = 1 } = {}) {\r\n        const model = this.editor.model;\r\n        const document = model.document;\r\n        let blocks = Array.from(document.selection.getSelectedBlocks())\r\n            .filter(block => (0,_documentlist_utils_model__WEBPACK_IMPORTED_MODULE_2__.isListItemBlock)(block) && block.getAttribute('listType') == 'numbered');\r\n        blocks = (0,_documentlist_utils_model__WEBPACK_IMPORTED_MODULE_2__.expandListBlocksToCompleteList)(blocks);\r\n        model.change(writer => {\r\n            for (const block of blocks) {\r\n                writer.setAttribute('listStart', startIndex >= 0 ? startIndex : 1, block);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Checks the command's {@link #value}.\r\n     *\r\n     * @returns The current value.\r\n     */\r\n    _getValue() {\r\n        const model = this.editor.model;\r\n        const document = model.document;\r\n        const block = (0,ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_1__.first)(document.selection.getSelectedBlocks());\r\n        if (block && (0,_documentlist_utils_model__WEBPACK_IMPORTED_MODULE_2__.isListItemBlock)(block) && block.getAttribute('listType') == 'numbered') {\r\n            return block.getAttribute('listStart');\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/src/documentlistproperties/documentliststartcommand.js?")
      }
      ,
      "./js/ckeditor5_plugins/list/src/documentlistproperties/documentliststylecommand.js": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DocumentListStyleCommand)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n/* harmony import */ var ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ckeditor5/src/utils */ \"ckeditor5/src/utils.js\");\n/* harmony import */ var _documentlist_utils_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../documentlist/utils/model */ \"./js/ckeditor5_plugins/list/src/documentlist/utils/model.js\");\n/* harmony import */ var _utils_style__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/style */ \"./js/ckeditor5_plugins/list/src/documentlistproperties/utils/style.js\");\n/**\r\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n/**\r\n * @module list/documentlistproperties/documentliststylecommand\r\n */\r\n\r\n\r\n\r\n\r\n/**\r\n * The list style command. It changes `listStyle` attribute of the selected list items,\r\n * letting the user choose styles for the list item markers.\r\n * It is used by the {@link module:list/documentlistproperties~DocumentListProperties list properties feature}.\r\n */\r\nclass DocumentListStyleCommand extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Command {\r\n    /**\r\n     * Creates an instance of the command.\r\n     *\r\n     * @param editor The editor instance.\r\n     * @param defaultType The list type that will be used by default if the value was not specified during\r\n     * the command execution.\r\n     * @param supportedTypes The list of supported style types by this command.\r\n     */\r\n    constructor(editor, defaultType, supportedTypes) {\r\n        super(editor);\r\n        this.defaultType = defaultType;\r\n        this._supportedTypes = supportedTypes;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    refresh() {\r\n        this.value = this._getValue();\r\n        this.isEnabled = this._checkEnabled();\r\n    }\r\n    /**\r\n     * Executes the command.\r\n     *\r\n     * @fires execute\r\n     * @param options.type The type of the list style, e.g. `'disc'` or `'square'`. If `null` is specified, the default\r\n     * style will be applied.\r\n     */\r\n    execute(options = {}) {\r\n        const model = this.editor.model;\r\n        const document = model.document;\r\n        model.change(writer => {\r\n            this._tryToConvertItemsToList(options);\r\n            let blocks = Array.from(document.selection.getSelectedBlocks())\r\n                .filter(block => block.hasAttribute('listType'));\r\n            if (!blocks.length) {\r\n                return;\r\n            }\r\n            blocks = (0,_documentlist_utils_model__WEBPACK_IMPORTED_MODULE_2__.expandListBlocksToCompleteList)(blocks);\r\n            for (const block of blocks) {\r\n                writer.setAttribute('listStyle', options.type || this.defaultType, block);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Checks if the given style type is supported by this plugin.\r\n     */\r\n    isStyleTypeSupported(value) {\r\n        if (!this._supportedTypes) {\r\n            return true;\r\n        }\r\n        return this._supportedTypes.includes(value);\r\n    }\r\n    /**\r\n     * Checks the command's {@link #value}.\r\n     *\r\n     * @returns The current value.\r\n     */\r\n    _getValue() {\r\n        const listItem = (0,ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_1__.first)(this.editor.model.document.selection.getSelectedBlocks());\r\n        if ((0,_documentlist_utils_model__WEBPACK_IMPORTED_MODULE_2__.isListItemBlock)(listItem)) {\r\n            return listItem.getAttribute('listStyle');\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Checks whether the command can be enabled in the current context.\r\n     *\r\n     * @returns Whether the command should be enabled.\r\n     */\r\n    _checkEnabled() {\r\n        const editor = this.editor;\r\n        const numberedList = editor.commands.get('numberedList');\r\n        const bulletedList = editor.commands.get('bulletedList');\r\n        return numberedList.isEnabled || bulletedList.isEnabled;\r\n    }\r\n    /**\r\n     * Check if the provided list style is valid. Also change the selection to a list if it's not set yet.\r\n     *\r\n     * @param options.type The type of the list style. If `null` is specified, the function does nothing.\r\n    */\r\n    _tryToConvertItemsToList(options) {\r\n        if (!options.type) {\r\n            return;\r\n        }\r\n        const listType = (0,_utils_style__WEBPACK_IMPORTED_MODULE_3__.getListTypeFromListStyleType)(options.type);\r\n        if (!listType) {\r\n            return;\r\n        }\r\n        const editor = this.editor;\r\n        const commandName = `${listType}List`;\r\n        const command = editor.commands.get(commandName);\r\n        if (!command.value) {\r\n            editor.execute(commandName);\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/src/documentlistproperties/documentliststylecommand.js?")
      }
      ,
      "./js/ckeditor5_plugins/list/src/documentlistproperties/utils/style.js": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAllSupportedStyleTypes: () => (/* binding */ getAllSupportedStyleTypes),\n/* harmony export */   getListStyleTypeFromTypeAttribute: () => (/* binding */ getListStyleTypeFromTypeAttribute),\n/* harmony export */   getListTypeFromListStyleType: () => (/* binding */ getListTypeFromListStyleType),\n/* harmony export */   getTypeAttributeFromListStyleType: () => (/* binding */ getTypeAttributeFromListStyleType)\n/* harmony export */ });\n/**\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n* @module list/documentlistproperties/utils/style\n*/\nconst LIST_STYLE_TO_LIST_TYPE = {};\nconst LIST_STYLE_TO_TYPE_ATTRIBUTE = {};\nconst TYPE_ATTRIBUTE_TO_LIST_STYLE = {};\nconst LIST_STYLE_TYPES = [\n    { listStyle: 'disc', typeAttribute: 'disc', listType: 'bulleted' },\n    { listStyle: 'circle', typeAttribute: 'circle', listType: 'bulleted' },\n    { listStyle: 'square', typeAttribute: 'square', listType: 'bulleted' },\n    { listStyle: 'none', typeAttribute: 'none', listType: 'bulleted' },\n    { listStyle: 'decimal', typeAttribute: '1', listType: 'numbered' },\n    { listStyle: 'decimal-leading-zero', typeAttribute: null, listType: 'numbered' },\n    { listStyle: 'lower-roman', typeAttribute: 'i', listType: 'numbered' },\n    { listStyle: 'upper-roman', typeAttribute: 'I', listType: 'numbered' },\n    { listStyle: 'lower-alpha', typeAttribute: 'a', listType: 'numbered' },\n    { listStyle: 'upper-alpha', typeAttribute: 'A', listType: 'numbered' },\n    { listStyle: 'lower-latin', typeAttribute: 'a', listType: 'numbered' },\n    { listStyle: 'upper-latin', typeAttribute: 'A', listType: 'numbered' },\n];\nfor (const { listStyle, typeAttribute, listType } of LIST_STYLE_TYPES) {\n    LIST_STYLE_TO_LIST_TYPE[listStyle] = listType;\n    LIST_STYLE_TO_TYPE_ATTRIBUTE[listStyle] = typeAttribute;\n    if (typeAttribute) {\n        TYPE_ATTRIBUTE_TO_LIST_STYLE[typeAttribute] = listStyle;\n    }\n}\n/**\n * Gets all the style types supported by given list type.\n */\nfunction getAllSupportedStyleTypes() {\n    return LIST_STYLE_TYPES.map(x => x.listStyle);\n}\n/**\n * Checks whether the given list-style-type is supported by numbered or bulleted list.\n */\nfunction getListTypeFromListStyleType(listStyleType) {\n    return LIST_STYLE_TO_LIST_TYPE[listStyleType] || null;\n}\n/**\n * Converts `type` attribute of `<ul>` or `<ol>` elements to `list-style-type` equivalent.\n */\nfunction getListStyleTypeFromTypeAttribute(value) {\n    return TYPE_ATTRIBUTE_TO_LIST_STYLE[value] || null;\n}\n/**\n * Converts `list-style-type` style to `type` attribute of `<ul>` or `<ol>` elements.\n */\nfunction getTypeAttributeFromListStyleType(value) {\n    return LIST_STYLE_TO_TYPE_ATTRIBUTE[value] || null;\n}\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/src/documentlistproperties/utils/style.js?")
      }
      ,
      "./js/ckeditor5_plugins/list/src/index.js": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _documentlist__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./documentlist */ "./js/ckeditor5_plugins/list/src/documentlist.js");\n/* harmony import */ var _documentlistproperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./documentlistproperties */ "./js/ckeditor5_plugins/list/src/documentlistproperties.js");\n/**\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module list\n */\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  DocumentList: _documentlist__WEBPACK_IMPORTED_MODULE_0__["default"],\n  DocumentListProperties: _documentlistproperties__WEBPACK_IMPORTED_MODULE_1__["default"],\n});\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/src/index.js?')
      }
      ,
      "./js/ckeditor5_plugins/list/src/list/listui.js": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ListUI)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./js/ckeditor5_plugins/list/src/list/utils.js\");\n/* harmony import */ var _theme_icons_numberedlist_svg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../theme/icons/numberedlist.svg */ \"./js/ckeditor5_plugins/list/theme/icons/numberedlist.svg\");\n/* harmony import */ var _theme_icons_bulletedlist_svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../theme/icons/bulletedlist.svg */ \"./js/ckeditor5_plugins/list/theme/icons/bulletedlist.svg\");\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n/**\r\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n/**\r\n * @module list/list/listui\r\n */\r\n\r\n\r\n\r\n\r\n/**\r\n * The list UI feature. It introduces the `'numberedList'` and `'bulletedList'` buttons that\r\n * allow to convert paragraphs to and from list items and indent or outdent them.\r\n */\r\nclass ListUI extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_3__.Plugin {\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    static get pluginName() {\r\n        return 'ListUI';\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    init() {\r\n        const t = this.editor.t;\r\n        // Create two buttons and link them with numberedList and bulletedList commands.\r\n        (0,_utils__WEBPACK_IMPORTED_MODULE_0__.createUIComponent)(this.editor, 'numberedList', t('Numbered List'), _theme_icons_numberedlist_svg__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\r\n        (0,_utils__WEBPACK_IMPORTED_MODULE_0__.createUIComponent)(this.editor, 'bulletedList', t('Bulleted List'), _theme_icons_bulletedlist_svg__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/src/list/listui.js?")
      }
      ,
      "./js/ckeditor5_plugins/list/src/list/utils.js": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createUIComponent: () => (/* binding */ createUIComponent),\n/* harmony export */   createViewListItemElement: () => (/* binding */ createViewListItemElement),\n/* harmony export */   findNestedList: () => (/* binding */ findNestedList),\n/* harmony export */   generateLiInUl: () => (/* binding */ generateLiInUl),\n/* harmony export */   getListTypeFromListStyleType: () => (/* binding */ getListTypeFromListStyleType),\n/* harmony export */   getSelectedListItems: () => (/* binding */ getSelectedListItems),\n/* harmony export */   getSiblingListItem: () => (/* binding */ getSiblingListItem),\n/* harmony export */   getSiblingNodes: () => (/* binding */ getSiblingNodes),\n/* harmony export */   injectViewList: () => (/* binding */ injectViewList),\n/* harmony export */   mergeViewLists: () => (/* binding */ mergeViewLists),\n/* harmony export */   positionAfterUiElements: () => (/* binding */ positionAfterUiElements)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/engine */ \"ckeditor5/src/engine.js\");\n/* harmony import */ var ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ckeditor5/src/ui */ \"ckeditor5/src/ui.js\");\n/**\r\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n\r\n/**\r\n * Creates a list item {@link module:engine/view/containerelement~ContainerElement}.\r\n *\r\n * @param writer The writer instance.\r\n */\r\nfunction createViewListItemElement(writer) {\r\n    const viewItem = writer.createContainerElement('li');\r\n    viewItem.getFillerOffset = getListItemFillerOffset;\r\n    return viewItem;\r\n}\r\n/**\r\n * Helper function that creates a `<ul><li></li></ul>` or (`<ol>`) structure out of the given `modelItem` model `listItem` element.\r\n * Then, it binds the created view list item (`<li>`) with the model `listItem` element.\r\n * The function then returns the created view list item (`<li>`).\r\n *\r\n * @param modelItem Model list item.\r\n * @param conversionApi Conversion interface.\r\n * @returns View list element.\r\n */\r\nfunction generateLiInUl(modelItem, conversionApi) {\r\n    const mapper = conversionApi.mapper;\r\n    const viewWriter = conversionApi.writer;\r\n    const listType = modelItem.getAttribute('listType') == 'numbered' ? 'ol' : 'ul';\r\n    const viewItem = createViewListItemElement(viewWriter);\r\n    const viewList = viewWriter.createContainerElement(listType, null);\r\n    viewWriter.insert(viewWriter.createPositionAt(viewList, 0), viewItem);\r\n    mapper.bindElements(modelItem, viewItem);\r\n    return viewItem;\r\n}\r\n/**\r\n * Helper function that inserts a view list at a correct place and merges it with its siblings.\r\n * It takes a model list item element (`modelItem`) and a corresponding view list item element (`injectedItem`). The view list item\r\n * should be in a view list element (`<ul>` or `<ol>`) and should be its only child.\r\n * See comments below to better understand the algorithm.\r\n *\r\n * @param modelItem Model list item.\r\n * @param injectedItem\r\n * @param conversionApi Conversion interface.\r\n * @param model The model instance.\r\n */\r\nfunction injectViewList(modelItem, injectedItem, conversionApi, model) {\r\n    const injectedList = injectedItem.parent;\r\n    const mapper = conversionApi.mapper;\r\n    const viewWriter = conversionApi.writer;\r\n    // The position where the view list will be inserted.\r\n    let insertPosition = mapper.toViewPosition(model.createPositionBefore(modelItem));\r\n    // 1. Find the previous list item that has the same or smaller indent. Basically we are looking for the first model item\r\n    // that is a \"parent\" or \"sibling\" of the injected model item.\r\n    // If there is no such list item, it means that the injected list item is the first item in \"its list\".\r\n    const refItem = getSiblingListItem(modelItem.previousSibling, {\r\n        sameIndent: true,\r\n        smallerIndent: true,\r\n        listIndent: modelItem.getAttribute('listIndent')\r\n    });\r\n    const prevItem = modelItem.previousSibling;\r\n    if (refItem && refItem.getAttribute('listIndent') == modelItem.getAttribute('listIndent')) {\r\n        // There is a list item with the same indent - we found the same-level sibling.\r\n        // Break the list after it. The inserted view item will be added in the broken space.\r\n        const viewItem = mapper.toViewElement(refItem);\r\n        insertPosition = viewWriter.breakContainer(viewWriter.createPositionAfter(viewItem));\r\n    }\r\n    else {\r\n        // There is no list item with the same indent. Check the previous model item.\r\n        if (prevItem && prevItem.name == 'listItem') {\r\n            // If it is a list item, it has to have a lower indent.\r\n            // It means that the inserted item should be added to it as its nested item.\r\n            insertPosition = mapper.toViewPosition(model.createPositionAt(prevItem, 'end'));\r\n            // There could be some not mapped elements (eg. span in to-do list) but we need to insert\r\n            // a nested list directly inside the li element.\r\n            const mappedViewAncestor = mapper.findMappedViewAncestor(insertPosition);\r\n            const nestedList = findNestedList(mappedViewAncestor);\r\n            // If there already is some nested list, then use it's position.\r\n            if (nestedList) {\r\n                insertPosition = viewWriter.createPositionBefore(nestedList);\r\n            }\r\n            else {\r\n                // Else just put new list on the end of list item content.\r\n                insertPosition = viewWriter.createPositionAt(mappedViewAncestor, 'end');\r\n            }\r\n        }\r\n        else {\r\n            // The previous item is not a list item (or does not exist at all).\r\n            // Just map the position and insert the view item at the mapped position.\r\n            insertPosition = mapper.toViewPosition(model.createPositionBefore(modelItem));\r\n        }\r\n    }\r\n    insertPosition = positionAfterUiElements(insertPosition);\r\n    // Insert the view item.\r\n    viewWriter.insert(insertPosition, injectedList);\r\n    // 2. Handle possible children of the injected model item.\r\n    if (prevItem && prevItem.name == 'listItem') {\r\n        const prevView = mapper.toViewElement(prevItem);\r\n        const walkerBoundaries = viewWriter.createRange(viewWriter.createPositionAt(prevView, 0), insertPosition);\r\n        const walker = walkerBoundaries.getWalker({ ignoreElementEnd: true });\r\n        for (const value of walker) {\r\n            if (value.item.is('element', 'li')) {\r\n                const breakPosition = viewWriter.breakContainer(viewWriter.createPositionBefore(value.item));\r\n                const viewList = value.item.parent;\r\n                const targetPosition = viewWriter.createPositionAt(injectedItem, 'end');\r\n                mergeViewLists(viewWriter, targetPosition.nodeBefore, targetPosition.nodeAfter);\r\n                viewWriter.move(viewWriter.createRangeOn(viewList), targetPosition);\r\n                // This is bad, but those lists will be removed soon anyway.\r\n                walker._position = breakPosition;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const nextViewList = injectedList.nextSibling;\r\n        if (nextViewList && (nextViewList.is('element', 'ul') || nextViewList.is('element', 'ol'))) {\r\n            let lastSubChild = null;\r\n            for (const child of nextViewList.getChildren()) {\r\n                const modelChild = mapper.toModelElement(child);\r\n                if (modelChild &&\r\n                    modelChild.getAttribute('listIndent') > modelItem.getAttribute('listIndent')) {\r\n                    lastSubChild = child;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            if (lastSubChild) {\r\n                viewWriter.breakContainer(viewWriter.createPositionAfter(lastSubChild));\r\n                viewWriter.move(viewWriter.createRangeOn(lastSubChild.parent), viewWriter.createPositionAt(injectedItem, 'end'));\r\n            }\r\n        }\r\n    }\r\n    // Merge the inserted view list with its possible neighbor lists.\r\n    mergeViewLists(viewWriter, injectedList, injectedList.nextSibling);\r\n    mergeViewLists(viewWriter, injectedList.previousSibling, injectedList);\r\n}\r\nfunction mergeViewLists(viewWriter, firstList, secondList) {\r\n    // Check if two lists are going to be merged.\r\n    if (!firstList || !secondList || (firstList.name != 'ul' && firstList.name != 'ol')) {\r\n        return null;\r\n    }\r\n    // Both parameters are list elements, so compare types now.\r\n    if (firstList.name != secondList.name || firstList.getAttribute('class') !== secondList.getAttribute('class')) {\r\n        return null;\r\n    }\r\n    return viewWriter.mergeContainers(viewWriter.createPositionAfter(firstList));\r\n}\r\n/**\r\n * Helper function that for a given `view.Position`, returns a `view.Position` that is after all `view.UIElement`s that\r\n * are after the given position.\r\n *\r\n * For example:\r\n * `<container:p>foo^<ui:span></ui:span><ui:span></ui:span>bar</container:p>`\r\n * For position ^, the position before \"bar\" will be returned.\r\n *\r\n */\r\nfunction positionAfterUiElements(viewPosition) {\r\n    return viewPosition.getLastMatchingPosition(value => value.item.is('uiElement'));\r\n}\r\n/**\r\n * Helper function that searches for a previous list item sibling of a given model item that meets the given criteria\r\n * passed by the options object.\r\n *\r\n * @param options Search criteria.\r\n * @param options.sameIndent Whether the sought sibling should have the same indentation.\r\n * @param options.smallerIndent Whether the sought sibling should have a smaller indentation.\r\n * @param options.listIndent The reference indentation.\r\n * @param options.direction Walking direction.\r\n */\r\nfunction getSiblingListItem(modelItem, options) {\r\n    const sameIndent = !!options.sameIndent;\r\n    const smallerIndent = !!options.smallerIndent;\r\n    const indent = options.listIndent;\r\n    let item = modelItem;\r\n    while (item && item.name == 'listItem') {\r\n        const itemIndent = item.getAttribute('listIndent');\r\n        if ((sameIndent && indent == itemIndent) || (smallerIndent && indent > itemIndent)) {\r\n            return item;\r\n        }\r\n        if (options.direction === 'forward') {\r\n            item = item.nextSibling;\r\n        }\r\n        else {\r\n            item = item.previousSibling;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Helper method for creating a UI button and linking it with an appropriate command.\r\n *\r\n * @internal\r\n * @param editor The editor instance to which the UI component will be added.\r\n * @param commandName The name of the command.\r\n * @param label The button label.\r\n * @param icon The source of the icon.\r\n */\r\nfunction createUIComponent(editor, commandName, label, icon) {\r\n    editor.ui.componentFactory.add(commandName, locale => {\r\n        const command = editor.commands.get(commandName);\r\n        const buttonView = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__.ButtonView(locale);\r\n        buttonView.set({\r\n            label,\r\n            icon,\r\n            tooltip: true,\r\n            isToggleable: true\r\n        });\r\n        // Bind button model to command.\r\n        buttonView.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled');\r\n        // Execute command.\r\n        buttonView.on('execute', () => {\r\n            editor.execute(commandName);\r\n            editor.editing.view.focus();\r\n        });\r\n        return buttonView;\r\n    });\r\n}\r\n/**\r\n * Returns a first list view element that is direct child of the given view element.\r\n */\r\nfunction findNestedList(viewElement) {\r\n    for (const node of viewElement.getChildren()) {\r\n        if (node.name == 'ul' || node.name == 'ol') {\r\n            return node;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Returns an array with all `listItem` elements that represent the same list.\r\n *\r\n * It means that values of `listIndent`, `listType`, `listStyle`, `listReversed` and `listStart` for all items are equal.\r\n *\r\n * Additionally, if the `position` is inside a list item, that list item will be returned as well.\r\n *\r\n * @param position Starting position.\r\n * @param direction Walking direction.\r\n */\r\nfunction getSiblingNodes(position, direction) {\r\n    const items = [];\r\n    const listItem = position.parent;\r\n    const walkerOptions = {\r\n        ignoreElementEnd: false,\r\n        startPosition: position,\r\n        shallow: true,\r\n        direction\r\n    };\r\n    const limitIndent = listItem.getAttribute('listIndent');\r\n    const nodes = [...new ckeditor5_src_engine__WEBPACK_IMPORTED_MODULE_0__.TreeWalker(walkerOptions)]\r\n        .filter(value => value.item.is('element'))\r\n        .map(value => value.item);\r\n    for (const element of nodes) {\r\n        // If found something else than `listItem`, we're out of the list scope.\r\n        if (!element.is('element', 'listItem')) {\r\n            break;\r\n        }\r\n        // If current parsed item has lower indent that element that the element that was a starting point,\r\n        // it means we left a nested list. Abort searching items.\r\n        //\r\n        // ■ List item 1.       [listIndent=0]\r\n        //     ○ List item 2.[] [listIndent=1], limitIndent = 1,\r\n        //     ○ List item 3.   [listIndent=1]\r\n        // ■ List item 4.       [listIndent=0]\r\n        //\r\n        // Abort searching when leave nested list.\r\n        if (element.getAttribute('listIndent') < limitIndent) {\r\n            break;\r\n        }\r\n        // ■ List item 1.[]     [listIndent=0] limitIndent = 0,\r\n        //     ○ List item 2.   [listIndent=1]\r\n        //     ○ List item 3.   [listIndent=1]\r\n        // ■ List item 4.       [listIndent=0]\r\n        //\r\n        // Ignore nested lists.\r\n        if (element.getAttribute('listIndent') > limitIndent) {\r\n            continue;\r\n        }\r\n        // ■ List item 1.[]  [listType=bulleted]\r\n        // 1. List item 2.   [listType=numbered]\r\n        // 2.List item 3.    [listType=numbered]\r\n        //\r\n        // Abort searching when found a different kind of a list.\r\n        if (element.getAttribute('listType') !== listItem.getAttribute('listType')) {\r\n            break;\r\n        }\r\n        // ■ List item 1.[]  [listType=bulleted]\r\n        // ■ List item 2.    [listType=bulleted]\r\n        // ○ List item 3.    [listType=bulleted]\r\n        // ○ List item 4.    [listType=bulleted]\r\n        //\r\n        // Abort searching when found a different list style,\r\n        if (element.getAttribute('listStyle') !== listItem.getAttribute('listStyle')) {\r\n            break;\r\n        }\r\n        // ... different direction\r\n        if (element.getAttribute('listReversed') !== listItem.getAttribute('listReversed')) {\r\n            break;\r\n        }\r\n        // ... and different start index\r\n        if (element.getAttribute('listStart') !== listItem.getAttribute('listStart')) {\r\n            break;\r\n        }\r\n        if (direction === 'backward') {\r\n            items.unshift(element);\r\n        }\r\n        else {\r\n            items.push(element);\r\n        }\r\n    }\r\n    return items;\r\n}\r\n/**\r\n * Returns an array with all `listItem` elements in the model selection.\r\n *\r\n * It returns all the items even if only a part of the list is selected, including items that belong to nested lists.\r\n * If no list is selected, it returns an empty array.\r\n * The order of the elements is not specified.\r\n *\r\n * @internal\r\n */\r\nfunction getSelectedListItems(model) {\r\n    const document = model.document;\r\n    // For all selected blocks find all list items that are being selected\r\n    // and update the `listStyle` attribute in those lists.\r\n    let listItems = [...document.selection.getSelectedBlocks()]\r\n        .filter(element => element.is('element', 'listItem'))\r\n        .map(element => {\r\n        const position = model.change(writer => writer.createPositionAt(element, 0));\r\n        return [\r\n            ...getSiblingNodes(position, 'backward'),\r\n            ...getSiblingNodes(position, 'forward')\r\n        ];\r\n    })\r\n        .flat();\r\n    // Since `getSelectedBlocks()` can return items that belong to the same list, and\r\n    // `getSiblingNodes()` returns the entire list, we need to remove duplicated items.\r\n    listItems = [...new Set(listItems)];\r\n    return listItems;\r\n}\r\nconst BULLETED_LIST_STYLE_TYPES = ['disc', 'circle', 'square'];\r\n// There's a lot of them (https://www.w3.org/TR/css-counter-styles-3/#typedef-counter-style).\r\n// Let's support only those that can be selected by ListPropertiesUI.\r\nconst NUMBERED_LIST_STYLE_TYPES = [\r\n    'decimal',\r\n    'decimal-leading-zero',\r\n    'lower-roman',\r\n    'upper-roman',\r\n    'lower-latin',\r\n    'upper-latin'\r\n];\r\n/**\r\n * Checks whether the given list-style-type is supported by numbered or bulleted list.\r\n */\r\nfunction getListTypeFromListStyleType(listStyleType) {\r\n    if (BULLETED_LIST_STYLE_TYPES.includes(listStyleType)) {\r\n        return 'bulleted';\r\n    }\r\n    if (NUMBERED_LIST_STYLE_TYPES.includes(listStyleType)) {\r\n        return 'numbered';\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Implementation of getFillerOffset for view list item element.\r\n *\r\n * @returns Block filler offset or `null` if block filler is not needed.\r\n */\r\nfunction getListItemFillerOffset() {\r\n    const hasOnlyLists = !this.isEmpty && (this.getChild(0).name == 'ul' || this.getChild(0).name == 'ol');\r\n    if (this.isEmpty || hasOnlyLists) {\r\n        return 0;\r\n    }\r\n    return ckeditor5_src_engine__WEBPACK_IMPORTED_MODULE_0__.getFillerOffset.call(this);\r\n}\r\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/src/list/utils.js?")
      }
      ,
      "./js/ckeditor5_plugins/list/src/listproperties/listpropertiesui.js": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ListPropertiesUI)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n/* harmony import */ var ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ckeditor5/src/ui */ \"ckeditor5/src/ui.js\");\n/* harmony import */ var _ui_listpropertiesview__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ui/listpropertiesview */ \"./js/ckeditor5_plugins/list/src/listproperties/ui/listpropertiesview.js\");\n/* harmony import */ var _theme_icons_bulletedlist_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../theme/icons/bulletedlist.svg */ \"./js/ckeditor5_plugins/list/theme/icons/bulletedlist.svg\");\n/* harmony import */ var _theme_icons_numberedlist_svg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../theme/icons/numberedlist.svg */ \"./js/ckeditor5_plugins/list/theme/icons/numberedlist.svg\");\n/* harmony import */ var _theme_icons_liststyledisc_svg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../theme/icons/liststyledisc.svg */ \"./js/ckeditor5_plugins/list/theme/icons/liststyledisc.svg\");\n/* harmony import */ var _theme_icons_liststylecircle_svg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../theme/icons/liststylecircle.svg */ \"./js/ckeditor5_plugins/list/theme/icons/liststylecircle.svg\");\n/* harmony import */ var _theme_icons_liststylesquare_svg__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../theme/icons/liststylesquare.svg */ \"./js/ckeditor5_plugins/list/theme/icons/liststylesquare.svg\");\n/* harmony import */ var _theme_icons_liststyledecimal_svg__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../theme/icons/liststyledecimal.svg */ \"./js/ckeditor5_plugins/list/theme/icons/liststyledecimal.svg\");\n/* harmony import */ var _theme_icons_liststyledecimalleadingzero_svg__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../theme/icons/liststyledecimalleadingzero.svg */ \"./js/ckeditor5_plugins/list/theme/icons/liststyledecimalleadingzero.svg\");\n/* harmony import */ var _theme_icons_liststylelowerroman_svg__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../theme/icons/liststylelowerroman.svg */ \"./js/ckeditor5_plugins/list/theme/icons/liststylelowerroman.svg\");\n/* harmony import */ var _theme_icons_liststyleupperroman_svg__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../theme/icons/liststyleupperroman.svg */ \"./js/ckeditor5_plugins/list/theme/icons/liststyleupperroman.svg\");\n/* harmony import */ var _theme_icons_liststylelowerlatin_svg__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../theme/icons/liststylelowerlatin.svg */ \"./js/ckeditor5_plugins/list/theme/icons/liststylelowerlatin.svg\");\n/* harmony import */ var _theme_icons_liststyleupperlatin_svg__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../theme/icons/liststyleupperlatin.svg */ \"./js/ckeditor5_plugins/list/theme/icons/liststyleupperlatin.svg\");\n/* harmony import */ var _theme_icons_liststylenone_svg__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../theme/icons/liststylenone.svg */ \"./js/ckeditor5_plugins/list/theme/icons/liststylenone.svg\");\n/* harmony import */ var _theme_liststyles_css__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../theme/liststyles.css */ \"./js/ckeditor5_plugins/list/theme/liststyles.css\");\n/**\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module list/listproperties/listpropertiesui\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * The list properties UI plugin. It introduces the extended `'bulletedList'` and `'numberedList'` toolbar\n * buttons that allow users to control such aspects of list as the marker, start index or order.\n *\n * **Note**: Buttons introduced by this plugin override implementations from the {@link module:list/list/listui~ListUI}\n * (because they share the same names).\n */\nclass ListPropertiesUI extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\n    /**\n     * @inheritDoc\n     */\n    static get pluginName() {\n        return 'ListPropertiesUI';\n    }\n    init() {\n        const editor = this.editor;\n        const t = editor.locale.t;\n        const enabledProperties = editor.config.get('list.properties');\n        // Note: When this plugin does not register the \"bulletedList\" dropdown due to properties configuration,\n        // a simple button will be still registered under the same name by ListUI as a fallback. This should happen\n        // in most editor configuration because the List plugin automatically requires ListUI.\n        if (enabledProperties.styles) {\n            editor.ui.componentFactory.add('bulletedList', getDropdownViewCreator({\n                editor,\n                parentCommandName: 'bulletedList',\n                buttonLabel: t('Bulleted List'),\n                buttonIcon: _theme_icons_bulletedlist_svg__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n                styleGridAriaLabel: t('Bulleted list styles toolbar'),\n                styleDefinitions: [\n                    {\n                        label: t('Toggle the disc list style'),\n                        tooltip: t('Disc'),\n                        type: 'disc',\n                        icon: _theme_icons_liststyledisc_svg__WEBPACK_IMPORTED_MODULE_5__[\"default\"]\n                    },\n                    {\n                        label: t('Toggle the circle list style'),\n                        tooltip: t('Circle'),\n                        type: 'circle',\n                        icon: _theme_icons_liststylecircle_svg__WEBPACK_IMPORTED_MODULE_6__[\"default\"]\n                    },\n                    {\n                        label: t('Toggle the square list style'),\n                        tooltip: t('Square'),\n                        type: 'square',\n                        icon: _theme_icons_liststylesquare_svg__WEBPACK_IMPORTED_MODULE_7__[\"default\"]\n                    },\n                    {\n                      label: t('Toggle the none list style'),\n                      tooltip: t('None'),\n                      type: 'none',\n                      icon: _theme_icons_liststylenone_svg__WEBPACK_IMPORTED_MODULE_14__[\"default\"]\n                    }\n                ]\n            }));\n        }\n        // Note: When this plugin does not register the \"numberedList\" dropdown due to properties configuration,\n        // a simple button will be still registered under the same name by ListUI as a fallback. This should happen\n        // in most editor configuration because the List plugin automatically requires ListUI.\n        if (enabledProperties.styles || enabledProperties.startIndex || enabledProperties.reversed) {\n            editor.ui.componentFactory.add('numberedList', getDropdownViewCreator({\n                editor,\n                parentCommandName: 'numberedList',\n                buttonLabel: t('Numbered List'),\n                buttonIcon: _theme_icons_numberedlist_svg__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n                styleGridAriaLabel: t('Numbered list styles toolbar'),\n                styleDefinitions: [\n                    {\n                        label: t('Toggle the decimal list style'),\n                        tooltip: t('Decimal'),\n                        type: 'decimal',\n                        icon: _theme_icons_liststyledecimal_svg__WEBPACK_IMPORTED_MODULE_8__[\"default\"]\n                    },\n                    {\n                        label: t('Toggle the decimal with leading zero list style'),\n                        tooltip: t('Decimal with leading zero'),\n                        type: 'decimal-leading-zero',\n                        icon: _theme_icons_liststyledecimalleadingzero_svg__WEBPACK_IMPORTED_MODULE_9__[\"default\"]\n                    },\n                    {\n                        label: t('Toggle the lower–roman list style'),\n                        tooltip: t('Lower–roman'),\n                        type: 'lower-roman',\n                        icon: _theme_icons_liststylelowerroman_svg__WEBPACK_IMPORTED_MODULE_10__[\"default\"]\n                    },\n                    {\n                        label: t('Toggle the upper–roman list style'),\n                        tooltip: t('Upper-roman'),\n                        type: 'upper-roman',\n                        icon: _theme_icons_liststyleupperroman_svg__WEBPACK_IMPORTED_MODULE_11__[\"default\"]\n                    },\n                    {\n                        label: t('Toggle the lower–latin list style'),\n                        tooltip: t('Lower-latin'),\n                        type: 'lower-latin',\n                        icon: _theme_icons_liststylelowerlatin_svg__WEBPACK_IMPORTED_MODULE_12__[\"default\"]\n                    },\n                    {\n                        label: t('Toggle the upper–latin list style'),\n                        tooltip: t('Upper-latin'),\n                        type: 'upper-latin',\n                        icon: _theme_icons_liststyleupperlatin_svg__WEBPACK_IMPORTED_MODULE_13__[\"default\"]\n                    },\n                    {\n                      label: t('Toggle the none list style'),\n                      tooltip: t('None'),\n                      type: 'none',\n                      icon: _theme_icons_liststylenone_svg__WEBPACK_IMPORTED_MODULE_14__[\"default\"]\n                    }\n                ]\n            }));\n        }\n    }\n}\n/**\n * A helper that returns a function that creates a split button with a toolbar in the dropdown,\n * which in turn contains buttons allowing users to change list styles in the context of the current selection.\n *\n * @param options.editor\n * @param options.parentCommandName The name of the higher-order editor command associated with\n * the set of particular list styles (e.g. \"bulletedList\" for \"disc\", \"circle\", and \"square\" styles).\n * @param options.buttonLabel Label of the main part of the split button.\n * @param options.buttonIcon The SVG string of an icon for the main part of the split button.\n * @param options.styleGridAriaLabel The ARIA label for the styles grid in the split button dropdown.\n * @param options.styleDefinitions Definitions of the style buttons.\n * @returns A function that can be passed straight into {@link module:ui/componentfactory~ComponentFactory#add}.\n */\nfunction getDropdownViewCreator({ editor, parentCommandName, buttonLabel, buttonIcon, styleGridAriaLabel, styleDefinitions }) {\n    const parentCommand = editor.commands.get(parentCommandName);\n    return (locale) => {\n        const dropdownView = (0,ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__.createDropdown)(locale, ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__.SplitButtonView);\n        const mainButtonView = dropdownView.buttonView;\n        dropdownView.bind('isEnabled').to(parentCommand);\n        dropdownView.class = 'ck-list-styles-dropdown';\n        // Main button was clicked.\n        mainButtonView.on('execute', () => {\n            editor.execute(parentCommandName);\n            editor.editing.view.focus();\n        });\n        mainButtonView.set({\n            label: buttonLabel,\n            icon: buttonIcon,\n            tooltip: true,\n            isToggleable: true\n        });\n        mainButtonView.bind('isOn').to(parentCommand, 'value', value => !!value);\n        dropdownView.once('change:isOpen', () => {\n            const listPropertiesView = createListPropertiesView({\n                editor,\n                dropdownView,\n                parentCommandName,\n                styleGridAriaLabel,\n                styleDefinitions\n            });\n            dropdownView.panelView.children.add(listPropertiesView);\n        });\n        // Focus the editable after executing the command.\n        // Overrides a default behaviour where the focus is moved to the dropdown button (#12125).\n        dropdownView.on('execute', () => {\n            editor.editing.view.focus();\n        });\n        return dropdownView;\n    };\n}\n/**\n * A helper that returns a function (factory) that creates individual buttons used by users to change styles\n * of lists.\n *\n * @param options.editor\n * @param options.listStyleCommand The instance of the `ListStylesCommand` class.\n * @param options.parentCommandName The name of the higher-order command associated with a\n * particular list style (e.g. \"bulletedList\" is associated with \"square\" and \"numberedList\" is associated with \"roman\").\n * @returns A function that can be passed straight into {@link module:ui/componentfactory~ComponentFactory#add}.\n */\nfunction getStyleButtonCreator({ editor, listStyleCommand, parentCommandName }) {\n    const locale = editor.locale;\n    const parentCommand = editor.commands.get(parentCommandName);\n    return ({ label, type, icon, tooltip }) => {\n        const button = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__.ButtonView(locale);\n        button.set({ label, icon, tooltip });\n        listStyleCommand.on('change:value', () => {\n            button.isOn = listStyleCommand.value === type;\n        });\n        button.on('execute', () => {\n            // If the content the selection is anchored to is a list, let's change its style.\n            if (parentCommand.value) {\n                // If the current list style is not set in the model or the style is different than the\n                // one to be applied, simply apply the new style.\n                if (listStyleCommand.value !== type) {\n                    editor.execute('listStyle', { type });\n                }\n                // If the style was the same, remove it (the button works as an off toggle).\n                else {\n                    editor.execute('listStyle', { type: listStyleCommand.defaultType });\n                }\n            }\n            // Otherwise, leave the creation of the styled list to the `ListStyleCommand`.\n            else {\n                editor.model.change(() => {\n                    editor.execute('listStyle', { type });\n                });\n            }\n        });\n        return button;\n    };\n}\n/**\n * A helper that creates the properties view for the individual style dropdown.\n *\n * @param options.editor Editor instance.\n * @param options.dropdownView Styles dropdown view that hosts the properties view.\n * @param options.parentCommandName The name of the higher-order editor command associated with\n * the set of particular list styles (e.g. \"bulletedList\" for \"disc\", \"circle\", and \"square\" styles).\n * @param options.styleDefinitions Definitions of the style buttons.\n * @param options.styleGridAriaLabel An assistive technologies label set on the grid of styles (if the grid is rendered).\n */\nfunction createListPropertiesView({ editor, dropdownView, parentCommandName, styleDefinitions, styleGridAriaLabel }) {\n    const locale = editor.locale;\n    const enabledProperties = editor.config.get('list.properties');\n    let styleButtonViews = null;\n    if (parentCommandName != 'numberedList') {\n        enabledProperties.startIndex = false;\n        enabledProperties.reversed = false;\n    }\n    if (enabledProperties.styles) {\n        const listStyleCommand = editor.commands.get('listStyle');\n        const styleButtonCreator = getStyleButtonCreator({\n            editor,\n            parentCommandName,\n            listStyleCommand\n        });\n        // The command can be ListStyleCommand or DocumentListStyleCommand.\n        const isStyleTypeSupported = typeof listStyleCommand.isStyleTypeSupported == 'function' ?\n            (styleDefinition) => listStyleCommand.isStyleTypeSupported(styleDefinition.type) :\n            () => true;\n        styleButtonViews = styleDefinitions.filter(isStyleTypeSupported).map(styleButtonCreator);\n    }\n    const listPropertiesView = new _ui_listpropertiesview__WEBPACK_IMPORTED_MODULE_2__[\"default\"](locale, {\n        styleGridAriaLabel,\n        enabledProperties,\n        styleButtonViews\n    });\n    if (enabledProperties.styles) {\n        // Accessibility: focus the first active style when opening the dropdown.\n        (0,ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__.focusChildOnDropdownOpen)(dropdownView, () => {\n            return listPropertiesView.stylesView.children.find((child) => child.isOn);\n        });\n    }\n    if (enabledProperties.startIndex) {\n        const listStartCommand = editor.commands.get('listStart');\n        listPropertiesView.startIndexFieldView.bind('isEnabled').to(listStartCommand);\n        listPropertiesView.startIndexFieldView.fieldView.bind('value').to(listStartCommand);\n        listPropertiesView.on('listStart', (evt, data) => editor.execute('listStart', data));\n    }\n    if (enabledProperties.reversed) {\n        const listReversedCommand = editor.commands.get('listReversed');\n        listPropertiesView.reversedSwitchButtonView.bind('isEnabled').to(listReversedCommand);\n        listPropertiesView.reversedSwitchButtonView.bind('isOn').to(listReversedCommand, 'value', value => !!value);\n        listPropertiesView.on('listReversed', () => {\n            const isReversed = listReversedCommand.value;\n            editor.execute('listReversed', { reversed: !isReversed });\n        });\n    }\n    // Make sure applying styles closes the dropdown.\n    listPropertiesView.delegate('execute').to(dropdownView);\n    return listPropertiesView;\n}\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/src/listproperties/listpropertiesui.js?")
      }
      ,
      "./js/ckeditor5_plugins/list/src/listproperties/ui/collapsibleview.js": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CollapsibleView)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/ui */ \"ckeditor5/src/ui.js\");\n/* harmony import */ var _ckeditor_ckeditor5_ui_theme_icons_dropdown_arrow_svg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ckeditor/ckeditor5-ui/theme/icons/dropdown-arrow.svg */ \"./node_modules/@ckeditor/ckeditor5-ui/theme/icons/dropdown-arrow.svg\");\n/* harmony import */ var _theme_collapsible_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../theme/collapsible.css */ \"./js/ckeditor5_plugins/list/theme/collapsible.css\");\n/**\r\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n// eslint-disable-next-line ckeditor5-rules/ckeditor-imports\r\n\r\n\r\n/**\r\n * A collapsible UI component. Consists of a labeled button and a container which can be collapsed\r\n * by clicking the button. The collapsible container can be a host to other UI views.\r\n *\r\n * @internal\r\n */\r\nclass CollapsibleView extends ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.View {\r\n    /**\r\n     * Creates an instance of the collapsible view.\r\n     *\r\n     * @param locale The {@link module:core/editor/editor~Editor#locale} instance.\r\n     * @param childViews An optional array of initial child views to be inserted into the collapsible.\r\n     */\r\n    constructor(locale, childViews) {\r\n        super(locale);\r\n        const bind = this.bindTemplate;\r\n        this.set('isCollapsed', false);\r\n        this.set('label', '');\r\n        this.buttonView = this._createButtonView();\r\n        this.children = this.createCollection();\r\n        this.set('_collapsibleAriaLabelUid', undefined);\r\n        if (childViews) {\r\n            this.children.addMany(childViews);\r\n        }\r\n        this.setTemplate({\r\n            tag: 'div',\r\n            attributes: {\r\n                class: [\r\n                    'ck',\r\n                    'ck-collapsible',\r\n                    bind.if('isCollapsed', 'ck-collapsible_collapsed')\r\n                ]\r\n            },\r\n            children: [\r\n                this.buttonView,\r\n                {\r\n                    tag: 'div',\r\n                    attributes: {\r\n                        class: [\r\n                            'ck',\r\n                            'ck-collapsible__children'\r\n                        ],\r\n                        role: 'region',\r\n                        hidden: bind.if('isCollapsed', 'hidden'),\r\n                        'aria-labelledby': bind.to('_collapsibleAriaLabelUid')\r\n                    },\r\n                    children: this.children\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    render() {\r\n        super.render();\r\n        this._collapsibleAriaLabelUid = this.buttonView.labelView.element.id;\r\n    }\r\n    /**\r\n     * Creates the main {@link #buttonView} of the collapsible.\r\n     */\r\n    _createButtonView() {\r\n        const buttonView = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.ButtonView(this.locale);\r\n        const bind = buttonView.bindTemplate;\r\n        buttonView.set({\r\n            withText: true,\r\n            icon: _ckeditor_ckeditor5_ui_theme_icons_dropdown_arrow_svg__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\r\n        });\r\n        buttonView.extendTemplate({\r\n            attributes: {\r\n                'aria-expanded': bind.to('isOn', value => String(value))\r\n            }\r\n        });\r\n        buttonView.bind('label').to(this);\r\n        buttonView.bind('isOn').to(this, 'isCollapsed', isCollapsed => !isCollapsed);\r\n        buttonView.on('execute', () => {\r\n            this.isCollapsed = !this.isCollapsed;\r\n        });\r\n        return buttonView;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/src/listproperties/ui/collapsibleview.js?")
      }
      ,
      "./js/ckeditor5_plugins/list/src/listproperties/ui/listpropertiesview.js": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ListPropertiesView)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/ui */ \"ckeditor5/src/ui.js\");\n/* harmony import */ var ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ckeditor5/src/utils */ \"ckeditor5/src/utils.js\");\n/* harmony import */ var _collapsibleview__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./collapsibleview */ \"./js/ckeditor5_plugins/list/src/listproperties/ui/collapsibleview.js\");\n/* harmony import */ var _theme_listproperties_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../theme/listproperties.css */ \"./js/ckeditor5_plugins/list/theme/listproperties.css\");\n/**\r\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n/**\r\n * @module list/listproperties/ui/listpropertiesview\r\n */\r\n\r\n\r\n\r\n\r\n/**\r\n * The list properties view to be displayed in the list dropdown.\r\n *\r\n * Contains a grid of available list styles and, for numbered list, also the list start index and reversed fields.\r\n *\r\n * @internal\r\n */\r\nclass ListPropertiesView extends ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.View {\r\n    /**\r\n     * Creates an instance of the list properties view.\r\n     *\r\n     * @param locale The {@link module:core/editor/editor~Editor#locale} instance.\r\n     * @param options Options of the view.\r\n     * @param options.enabledProperties An object containing the configuration of enabled list property names.\r\n     * Allows conditional rendering the sub-components of the properties view.\r\n     * @param options.styleButtonViews A list of style buttons to be rendered\r\n     * inside the styles grid. The grid will not be rendered when `enabledProperties` does not include the `'styles'` key.\r\n     * @param options.styleGridAriaLabel An assistive technologies label set on the grid of styles (if the grid is rendered).\r\n     */\r\n    constructor(locale, { enabledProperties, styleButtonViews, styleGridAriaLabel }) {\r\n        super(locale);\r\n        /**\r\n         * A view that renders the grid of list styles.\r\n         */\r\n        this.stylesView = null;\r\n        /**\r\n         * A collapsible view that hosts additional list property fields ({@link #startIndexFieldView} and\r\n         * {@link #reversedSwitchButtonView}) to visually separate them from the {@link #stylesView grid of styles}.\r\n         *\r\n         * **Note**: Only present when:\r\n         * * the view represents **numbered** list properties,\r\n         * * and the {@link #stylesView} is rendered,\r\n         * * and either {@link #startIndexFieldView} or {@link #reversedSwitchButtonView} is rendered.\r\n         *\r\n         * @readonly\r\n         */\r\n        this.additionalPropertiesCollapsibleView = null;\r\n        /**\r\n         * A labeled number field allowing the user to set the start index of the list.\r\n         *\r\n         * **Note**: Only present when the view represents **numbered** list properties.\r\n         *\r\n         * @readonly\r\n         */\r\n        this.startIndexFieldView = null;\r\n        /**\r\n         * A switch button allowing the user to make the edited list reversed.\r\n         *\r\n         * **Note**: Only present when the view represents **numbered** list properties.\r\n         *\r\n         * @readonly\r\n         */\r\n        this.reversedSwitchButtonView = null;\r\n        /**\r\n         * Tracks information about the DOM focus in the view.\r\n         */\r\n        this.focusTracker = new ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_1__.FocusTracker();\r\n        /**\r\n         * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\r\n         */\r\n        this.keystrokes = new ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_1__.KeystrokeHandler();\r\n        /**\r\n         * A collection of views that can be focused in the properties view.\r\n         */\r\n        this.focusables = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.ViewCollection();\r\n        const elementCssClasses = [\r\n            'ck',\r\n            'ck-list-properties'\r\n        ];\r\n        this.children = this.createCollection();\r\n        this.focusCycler = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.FocusCycler({\r\n            focusables: this.focusables,\r\n            focusTracker: this.focusTracker,\r\n            keystrokeHandler: this.keystrokes,\r\n            actions: {\r\n                // Navigate #children backwards using the <kbd>Shift</kbd> + <kbd>Tab</kbd> keystroke.\r\n                focusPrevious: 'shift + tab',\r\n                // Navigate #children forwards using the <kbd>Tab</kbd> key.\r\n                focusNext: 'tab'\r\n            }\r\n        });\r\n        // The rendering of the styles grid is conditional. When there is no styles grid, the view will render without collapsible\r\n        // for numbered list properties, hence simplifying the layout.\r\n        if (enabledProperties.styles) {\r\n            this.stylesView = this._createStylesView(styleButtonViews, styleGridAriaLabel);\r\n            this.children.add(this.stylesView);\r\n        }\r\n        else {\r\n            elementCssClasses.push('ck-list-properties_without-styles');\r\n        }\r\n        // The rendering of the numbered list property views is also conditional. It only makes sense for the numbered list\r\n        // dropdown. The unordered list does not have such properties.\r\n        if (enabledProperties.startIndex || enabledProperties.reversed) {\r\n            this._addNumberedListPropertyViews(enabledProperties);\r\n            elementCssClasses.push('ck-list-properties_with-numbered-properties');\r\n        }\r\n        this.setTemplate({\r\n            tag: 'div',\r\n            attributes: {\r\n                class: elementCssClasses\r\n            },\r\n            children: this.children\r\n        });\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    render() {\r\n        super.render();\r\n        if (this.stylesView) {\r\n            this.focusables.add(this.stylesView);\r\n            this.focusTracker.add(this.stylesView.element);\r\n            // Register the collapsible toggle button to the focus system.\r\n            if (this.startIndexFieldView || this.reversedSwitchButtonView) {\r\n                this.focusables.add(this.children.last.buttonView);\r\n                this.focusTracker.add(this.children.last.buttonView.element);\r\n            }\r\n            for (const item of this.stylesView.children) {\r\n                this.stylesView.focusTracker.add(item.element);\r\n            }\r\n            (0,ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.addKeyboardHandlingForGrid)({\r\n                keystrokeHandler: this.stylesView.keystrokes,\r\n                focusTracker: this.stylesView.focusTracker,\r\n                gridItems: this.stylesView.children,\r\n                // Note: The styles view has a different number of columns depending on whether the other properties\r\n                // are enabled in the dropdown or not (https://github.com/ckeditor/ckeditor5/issues/12340)\r\n                numberOfColumns: () => ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_1__.global.window\r\n                    .getComputedStyle(this.stylesView.element)\r\n                    .getPropertyValue('grid-template-columns')\r\n                    .split(' ')\r\n                    .length,\r\n                uiLanguageDirection: this.locale && this.locale.uiLanguageDirection\r\n            });\r\n        }\r\n        if (this.startIndexFieldView) {\r\n            this.focusables.add(this.startIndexFieldView);\r\n            this.focusTracker.add(this.startIndexFieldView.element);\r\n            const stopPropagation = (data) => data.stopPropagation();\r\n            // Since the form is in the dropdown panel which is a child of the toolbar, the toolbar's\r\n            // keystroke handler would take over the key management in the input. We need to prevent\r\n            // this ASAP. Otherwise, the basic caret movement using the arrow keys will be impossible.\r\n            this.keystrokes.set('arrowright', stopPropagation);\r\n            this.keystrokes.set('arrowleft', stopPropagation);\r\n            this.keystrokes.set('arrowup', stopPropagation);\r\n            this.keystrokes.set('arrowdown', stopPropagation);\r\n        }\r\n        if (this.reversedSwitchButtonView) {\r\n            this.focusables.add(this.reversedSwitchButtonView);\r\n            this.focusTracker.add(this.reversedSwitchButtonView.element);\r\n        }\r\n        // Start listening for the keystrokes coming from #element.\r\n        this.keystrokes.listenTo(this.element);\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    focus() {\r\n        this.focusCycler.focusFirst();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    focusLast() {\r\n        this.focusCycler.focusLast();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    destroy() {\r\n        super.destroy();\r\n        this.focusTracker.destroy();\r\n        this.keystrokes.destroy();\r\n    }\r\n    /**\r\n     * Creates the list styles grid.\r\n     *\r\n     * @param styleButtons Buttons to be placed in the grid.\r\n     * @param styleGridAriaLabel The assistive technology label of the grid.\r\n     */\r\n    _createStylesView(styleButtons, styleGridAriaLabel) {\r\n        const stylesView = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.View(this.locale);\r\n        stylesView.children = stylesView.createCollection();\r\n        stylesView.children.addMany(styleButtons);\r\n        stylesView.setTemplate({\r\n            tag: 'div',\r\n            attributes: {\r\n                'aria-label': styleGridAriaLabel,\r\n                class: [\r\n                    'ck',\r\n                    'ck-list-styles-list'\r\n                ]\r\n            },\r\n            children: stylesView.children\r\n        });\r\n        stylesView.children.delegate('execute').to(this);\r\n        stylesView.focus = function () {\r\n            this.children.first.focus();\r\n        };\r\n        stylesView.focusTracker = new ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_1__.FocusTracker();\r\n        stylesView.keystrokes = new ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_1__.KeystrokeHandler();\r\n        stylesView.render();\r\n        stylesView.keystrokes.listenTo(stylesView.element);\r\n        return stylesView;\r\n    }\r\n    /**\r\n     * Renders {@link #startIndexFieldView} and/or {@link #reversedSwitchButtonView} depending on the configuration of the properties view.\r\n     *\r\n     * @param enabledProperties An object containing the configuration of enabled list property names\r\n     * (see {@link #constructor}).\r\n     */\r\n    _addNumberedListPropertyViews(enabledProperties) {\r\n        const t = this.locale.t;\r\n        const numberedPropertyViews = [];\r\n        if (enabledProperties.startIndex) {\r\n            this.startIndexFieldView = this._createStartIndexField();\r\n            numberedPropertyViews.push(this.startIndexFieldView);\r\n        }\r\n        if (enabledProperties.reversed) {\r\n            this.reversedSwitchButtonView = this._createReversedSwitchButton();\r\n            numberedPropertyViews.push(this.reversedSwitchButtonView);\r\n        }\r\n        // When there are some style buttons, pack the numbered list properties into a collapsible to separate them.\r\n        if (enabledProperties.styles) {\r\n            this.additionalPropertiesCollapsibleView = new _collapsibleview__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.locale, numberedPropertyViews);\r\n            this.additionalPropertiesCollapsibleView.set({\r\n                label: t('List properties'),\r\n                isCollapsed: true\r\n            });\r\n            // Don't enable the collapsible view unless either start index or reversed field is enabled (e.g. when no list is selected).\r\n            this.additionalPropertiesCollapsibleView.buttonView.bind('isEnabled').toMany(numberedPropertyViews, 'isEnabled', (...areEnabled) => areEnabled.some(isEnabled => isEnabled));\r\n            // Automatically collapse the additional properties collapsible when either start index or reversed field gets disabled.\r\n            this.additionalPropertiesCollapsibleView.buttonView.on('change:isEnabled', (evt, data, isEnabled) => {\r\n                if (!isEnabled) {\r\n                    this.additionalPropertiesCollapsibleView.isCollapsed = true;\r\n                }\r\n            });\r\n            this.children.add(this.additionalPropertiesCollapsibleView);\r\n        }\r\n        else {\r\n            this.children.addMany(numberedPropertyViews);\r\n        }\r\n    }\r\n    /**\r\n     * Creates the list start index labeled field.\r\n     */\r\n    _createStartIndexField() {\r\n        const t = this.locale.t;\r\n        const startIndexFieldView = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.LabeledFieldView(this.locale, ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.createLabeledInputNumber);\r\n        startIndexFieldView.set({\r\n            label: t('Start at'),\r\n            class: 'ck-numbered-list-properties__start-index'\r\n        });\r\n        startIndexFieldView.fieldView.set({\r\n            min: 0,\r\n            step: 1,\r\n            value: 1,\r\n            inputMode: 'numeric'\r\n        });\r\n        startIndexFieldView.fieldView.on('input', () => {\r\n            const inputElement = startIndexFieldView.fieldView.element;\r\n            const startIndex = inputElement.valueAsNumber;\r\n            if (Number.isNaN(startIndex)) {\r\n                return;\r\n            }\r\n            if (!inputElement.checkValidity()) {\r\n                startIndexFieldView.errorText = t('Start index must be greater than 0.');\r\n            }\r\n            else {\r\n                this.fire('listStart', { startIndex });\r\n            }\r\n        });\r\n        return startIndexFieldView;\r\n    }\r\n    /**\r\n     * Creates the reversed list switch button.\r\n     */\r\n    _createReversedSwitchButton() {\r\n        const t = this.locale.t;\r\n        const reversedButtonView = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.SwitchButtonView(this.locale);\r\n        reversedButtonView.set({\r\n            withText: true,\r\n            label: t('Reversed order'),\r\n            class: 'ck-numbered-list-properties__reversed-order'\r\n        });\r\n        reversedButtonView.delegate('execute').to(this, 'listReversed');\r\n        return reversedButtonView;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/src/listproperties/ui/listpropertiesview.js?")
      }
      ,
      "./node_modules/css-loader/dist/cjs.js!./js/ckeditor5_plugins/list/theme/collapsible.css": (module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ "./node_modules/css-loader/dist/runtime/noSourceMaps.js");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/*\n * Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n.ck.ck-collapsible.ck-collapsible_collapsed {\n\t& > .ck-collapsible__children {\n\t\tdisplay: none;\n\t}\n}\n`, ""]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/theme/collapsible.css?./node_modules/css-loader/dist/cjs.js')
      }
      ,
      "./node_modules/css-loader/dist/cjs.js!./js/ckeditor5_plugins/list/theme/documentlist.css": (module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ "./node_modules/css-loader/dist/runtime/noSourceMaps.js");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/*\n * Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n.ck-editor__editable .ck-list-bogus-paragraph {\n\tdisplay: block;\n}\n`, ""]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/theme/documentlist.css?./node_modules/css-loader/dist/cjs.js')
      }
      ,
      "./node_modules/css-loader/dist/cjs.js!./js/ckeditor5_plugins/list/theme/list.css": (module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ "./node_modules/css-loader/dist/runtime/noSourceMaps.js");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/*\n * Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n.ck-content ol.ckeditor-list-type-style {\n\tlist-style-type: decimal;\n\n\t& ol {\n\t\tlist-style-type: lower-latin;\n\n\t\t& ol {\n\t\t\tlist-style-type: lower-roman;\n\n\t\t\t& ol {\n\t\t\t\tlist-style-type: upper-latin;\n\n\t\t\t\t& ol {\n\t\t\t\t\tlist-style-type: upper-roman;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n.ck-content ul.ckeditor-list-type-style {\n\tlist-style-type: disc;\n\n\t& ul {\n\t\tlist-style-type: circle;\n\n\t\t& ul {\n\t\t\tlist-style-type: square;\n\n\t\t\t& ul {\n\t\t\t\tlist-style-type: square;\n\t\t\t}\n\t\t}\n\t}\n}\n`, ""]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/theme/list.css?./node_modules/css-loader/dist/cjs.js')
      }
      ,
      "./node_modules/css-loader/dist/cjs.js!./js/ckeditor5_plugins/list/theme/listproperties.css": (module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ "./node_modules/css-loader/dist/runtime/noSourceMaps.js");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/*\n * Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/*\n * Note: This file should contain the wireframe styles only. But since there are no such styles,\n * it acts as a message to the builder telling that it should look for the corresponding styles\n * **in the theme** when compiling the editor.\n */\n`, ""]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/theme/listproperties.css?./node_modules/css-loader/dist/cjs.js')
      }
      ,
      "./node_modules/css-loader/dist/cjs.js!./js/ckeditor5_plugins/list/theme/liststyles.css": (module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ "./node_modules/css-loader/dist/runtime/noSourceMaps.js");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/*\n * Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n.ck.ck-list-styles-list {\n  display: grid;\n  grid-template-columns: repeat( 3, auto );\n  row-gap: var(--ck-spacing-medium);\n  column-gap: var(--ck-spacing-medium);\n  padding: var(--ck-spacing-large);\n\n  & .ck-button {\n    /* Make the button look like a thumbnail (the icon "takes it all"). */\n    width: var(--ck-list-style-button-size);\n    height: var(--ck-list-style-button-size);\n    padding: 0;\n\n    /*\n     * Buttons are aligned by the grid so disable default button margins to not collide with the\n     * gaps in the grid.\n     */\n    margin: 0;\n\n    /*\n     * Make sure the button border (which is displayed on focus, BTW) does not steal pixels\n     * from the button dimensions and, as a result, decrease the size of the icon\n     * (which becomes blurry as it scales down).\n     */\n    box-sizing: content-box;\n\n    & .ck-icon {\n      width: var(--ck-list-style-button-size);\n      height: var(--ck-list-style-button-size);\n    }\n  }\n}\n`, ""]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/theme/liststyles.css?./node_modules/css-loader/dist/cjs.js')
      }
      ,
      "./node_modules/css-loader/dist/runtime/api.js": module=>{
          "use strict";
          eval('\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = "";\n      var needLayer = typeof item[5] !== "undefined";\n      if (item[4]) {\n        content += "@supports (".concat(item[4], ") {");\n      }\n      if (item[2]) {\n        content += "@media ".concat(item[2], " {");\n      }\n      if (needLayer) {\n        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += "}";\n      }\n      if (item[2]) {\n        content += "}";\n      }\n      if (item[4]) {\n        content += "}";\n      }\n      return content;\n    }).join("");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === "string") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== "undefined") {\n        if (typeof item[5] === "undefined") {\n          item[5] = layer;\n        } else {\n          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = "".concat(supports);\n        } else {\n          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack://CKEditor5.list/./node_modules/css-loader/dist/runtime/api.js?')
      }
      ,
      "./node_modules/css-loader/dist/runtime/noSourceMaps.js": module=>{
          "use strict";
          eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://CKEditor5.list/./node_modules/css-loader/dist/runtime/noSourceMaps.js?")
      }
      ,
      "./js/ckeditor5_plugins/list/theme/icons/bulletedlist.svg": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("<svg viewBox=\\"0 0 20 20\\" xmlns=\\"http://www.w3.org/2000/svg\\"><path d=\\"M7 5.75c0 .414.336.75.75.75h9.5a.75.75 0 1 0 0-1.5h-9.5a.75.75 0 0 0-.75.75zm-6 0C1 4.784 1.777 4 2.75 4c.966 0 1.75.777 1.75 1.75 0 .966-.777 1.75-1.75 1.75C1.784 7.5 1 6.723 1 5.75zm6 9c0 .414.336.75.75.75h9.5a.75.75 0 1 0 0-1.5h-9.5a.75.75 0 0 0-.75.75zm-6 0c0-.966.777-1.75 1.75-1.75.966 0 1.75.777 1.75 1.75 0 .966-.777 1.75-1.75 1.75-.966 0-1.75-.777-1.75-1.75z\\"/></svg>");\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/theme/icons/bulletedlist.svg?')
      }
      ,
      "./js/ckeditor5_plugins/list/theme/icons/liststylecircle.svg": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("<svg viewBox=\\"0 0 44 44\\" xmlns=\\"http://www.w3.org/2000/svg\\"><path d=\\"M35 29a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17zm0-9a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17zm0-9a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17z\\" fill-opacity=\\".163\\"/><path d=\\"M11 27a3 3 0 1 1 0 6 3 3 0 0 1 0-6zm0 1a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm0-10a3 3 0 1 1 0 6 3 3 0 0 1 0-6zm0 1a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm0-10a3 3 0 1 1 0 6 3 3 0 0 1 0-6zm0 1a2 2 0 1 0 0 4 2 2 0 0 0 0-4z\\"/></svg>");\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/theme/icons/liststylecircle.svg?')
      }
      ,
      "./js/ckeditor5_plugins/list/theme/icons/liststyledecimal.svg": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("<svg viewBox=\\"0 0 44 44\\" xmlns=\\"http://www.w3.org/2000/svg\\"><path d=\\"M35 29a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17zm0-9a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17zm0-9a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17z\\" fill-opacity=\\".163\\"/><path d=\\"M10.29 15V8.531H9.286c-.14.393-.4.736-.778 1.03-.378.295-.728.495-1.05.6v1.121a4.257 4.257 0 0 0 1.595-.936V15h1.235zm3.343 0v-1.235h-1.235V15h1.235zM11.3 24v-1.147H8.848c.064-.111.148-.226.252-.343.104-.117.351-.354.74-.712.39-.357.66-.631.81-.821.225-.288.39-.562.494-.824.104-.263.156-.539.156-.829 0-.51-.182-.936-.545-1.279-.363-.342-.863-.514-1.499-.514-.58 0-1.063.148-1.45.444-.387.296-.617.784-.69 1.463l1.23.124c.024-.36.112-.619.264-.774.153-.155.358-.233.616-.233.26 0 .465.074.613.222.148.148.222.36.222.635 0 .25-.085.501-.255.756-.126.185-.468.536-1.024 1.055-.692.641-1.155 1.156-1.389 1.544-.234.389-.375.8-.422 1.233H11.3zm2.333 0v-1.235h-1.235V24h1.235zM9.204 34.11c.615 0 1.129-.2 1.542-.598.413-.398.62-.88.62-1.446 0-.39-.11-.722-.332-.997a1.5 1.5 0 0 0-.886-.532c.619-.337.928-.788.928-1.353 0-.399-.151-.756-.453-1.073-.366-.386-.852-.58-1.459-.58a2.25 2.25 0 0 0-.96.2 1.617 1.617 0 0 0-.668.55c-.16.232-.28.544-.358.933l1.138.194c.032-.282.123-.495.272-.642.15-.146.33-.22.54-.22.215 0 .386.065.515.194s.193.302.193.518c0 .255-.087.46-.263.613-.176.154-.43.227-.765.218l-.136 1.006c.22-.061.409-.092.567-.092.24 0 .444.09.61.272.168.182.251.428.251.739 0 .328-.087.589-.261.782a.833.833 0 0 1-.644.29.841.841 0 0 1-.607-.242c-.167-.16-.27-.394-.307-.698l-1.196.145c.062.542.285.98.668 1.316.384.335.868.503 1.45.503zm4.43-.11v-1.235h-1.236V34h1.235z\\"/></svg>");\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/theme/icons/liststyledecimal.svg?')
      }
      ,
      "./js/ckeditor5_plugins/list/theme/icons/liststyledecimalleadingzero.svg": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("<svg viewBox=\\"0 0 44 44\\" xmlns=\\"http://www.w3.org/2000/svg\\"><path d=\\"M35 29a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17zm0-9a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17zm0-9a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17z\\" fill-opacity=\\".163\\"/><path d=\\"M5.714 15.11c.624 0 1.11-.22 1.46-.66.421-.533.632-1.408.632-2.627 0-1.222-.21-2.096-.629-2.624-.351-.445-.839-.668-1.463-.668-.624 0-1.11.22-1.459.66-.422.533-.633 1.406-.633 2.619 0 1.236.192 2.095.576 2.577.384.482.89.723 1.516.723zm0-1.024a.614.614 0 0 1-.398-.14c-.115-.094-.211-.283-.287-.565-.077-.283-.115-.802-.115-1.558s.043-1.294.128-1.613c.064-.246.155-.417.272-.512a.617.617 0 0 1 .4-.143.61.61 0 0 1 .398.143c.116.095.211.284.288.567.076.283.114.802.114 1.558s-.043 1.292-.128 1.608c-.064.246-.155.417-.272.512a.617.617 0 0 1-.4.143zm6.078.914V8.531H10.79c-.14.393-.4.736-.778 1.03-.378.295-.728.495-1.05.6v1.121a4.257 4.257 0 0 0 1.595-.936V15h1.235zm3.344 0v-1.235h-1.235V15h1.235zm-9.422 9.11c.624 0 1.11-.22 1.46-.66.421-.533.632-1.408.632-2.627 0-1.222-.21-2.096-.629-2.624-.351-.445-.839-.668-1.463-.668-.624 0-1.11.22-1.459.66-.422.533-.633 1.406-.633 2.619 0 1.236.192 2.095.576 2.577.384.482.89.723 1.516.723zm0-1.024a.614.614 0 0 1-.398-.14c-.115-.094-.211-.283-.287-.565-.077-.283-.115-.802-.115-1.558s.043-1.294.128-1.613c.064-.246.155-.417.272-.512a.617.617 0 0 1 .4-.143.61.61 0 0 1 .398.143c.116.095.211.284.288.567.076.283.114.802.114 1.558s-.043 1.292-.128 1.608c-.064.246-.155.417-.272.512a.617.617 0 0 1-.4.143zm7.088.914v-1.147H10.35c.065-.111.149-.226.253-.343.104-.117.35-.354.74-.712.39-.357.66-.631.81-.821.225-.288.39-.562.493-.824.104-.263.156-.539.156-.829 0-.51-.181-.936-.544-1.279-.364-.342-.863-.514-1.499-.514-.58 0-1.063.148-1.45.444-.387.296-.617.784-.69 1.463l1.23.124c.024-.36.112-.619.264-.774.152-.155.357-.233.615-.233.261 0 .465.074.613.222.148.148.222.36.222.635 0 .25-.085.501-.255.756-.126.185-.467.536-1.024 1.055-.691.641-1.154 1.156-1.388 1.544-.235.389-.375.8-.422 1.233h4.328zm2.334 0v-1.235h-1.235V24h1.235zM5.714 34.11c.624 0 1.11-.22 1.46-.66.421-.533.632-1.408.632-2.627 0-1.222-.21-2.096-.629-2.624-.351-.445-.839-.668-1.463-.668-.624 0-1.11.22-1.459.66-.422.533-.633 1.406-.633 2.619 0 1.236.192 2.095.576 2.577.384.482.89.723 1.516.723zm0-1.024a.614.614 0 0 1-.398-.14c-.115-.094-.211-.283-.287-.565-.077-.283-.115-.802-.115-1.558s.043-1.294.128-1.613c.064-.246.155-.417.272-.512a.617.617 0 0 1 .4-.143.61.61 0 0 1 .398.143c.116.095.211.284.288.567.076.283.114.802.114 1.558s-.043 1.292-.128 1.608c-.064.246-.155.417-.272.512a.617.617 0 0 1-.4.143zm4.992 1.024c.616 0 1.13-.2 1.543-.598.413-.398.62-.88.62-1.446 0-.39-.111-.722-.332-.997a1.5 1.5 0 0 0-.886-.532c.618-.337.927-.788.927-1.353 0-.399-.15-.756-.452-1.073-.366-.386-.853-.58-1.46-.58a2.25 2.25 0 0 0-.96.2 1.617 1.617 0 0 0-.667.55c-.16.232-.28.544-.359.933l1.139.194c.032-.282.123-.495.272-.642.15-.146.33-.22.54-.22.214 0 .386.065.515.194s.193.302.193.518c0 .255-.088.46-.264.613-.175.154-.43.227-.764.218l-.136 1.006c.22-.061.408-.092.566-.092.24 0 .444.09.611.272.167.182.25.428.25.739 0 .328-.086.589-.26.782a.833.833 0 0 1-.644.29.841.841 0 0 1-.607-.242c-.167-.16-.27-.394-.308-.698l-1.195.145c.062.542.284.98.668 1.316.384.335.867.503 1.45.503zm4.43-.11v-1.235h-1.235V34h1.235z\\"/></svg>");\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/theme/icons/liststyledecimalleadingzero.svg?')
      }
      ,
      "./js/ckeditor5_plugins/list/theme/icons/liststyledisc.svg": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("<svg viewBox=\\"0 0 44 44\\" xmlns=\\"http://www.w3.org/2000/svg\\"><path d=\\"M35 29a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17zm0-9a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17zm0-9a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17z\\" fill-opacity=\\".163\\"/><path d=\\"M11 27a3 3 0 1 1 0 6 3 3 0 0 1 0-6zm0-9a3 3 0 1 1 0 6 3 3 0 0 1 0-6zm0-9a3 3 0 1 1 0 6 3 3 0 0 1 0-6z\\"/></svg>");\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/theme/icons/liststyledisc.svg?')
      }
      ,
      "./js/ckeditor5_plugins/list/theme/icons/liststylelowerlatin.svg": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("<svg viewBox=\\"0 0 44 44\\" xmlns=\\"http://www.w3.org/2000/svg\\"><path d=\\"M35 29a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17zm0-9a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17zm0-9a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17z\\" fill-opacity=\\".163\\"/><path d=\\"M9.62 14.105c.272 0 .528-.05.768-.153s.466-.257.677-.462c.009.024.023.072.044.145.047.161.086.283.119.365h1.221a2.649 2.649 0 0 1-.222-.626c-.04-.195-.059-.498-.059-.908l.013-1.441c0-.536-.055-.905-.165-1.105-.11-.201-.3-.367-.569-.497-.27-.13-.68-.195-1.23-.195-.607 0-1.064.108-1.371.325-.308.217-.525.55-.65 1.002l1.12.202c.076-.217.176-.369.299-.455.123-.086.294-.13.514-.13.325 0 .546.05.663.152.118.101.176.27.176.508v.123c-.222.093-.622.194-1.2.303-.427.082-.755.178-.982.288-.227.11-.403.268-.53.474a1.327 1.327 0 0 0-.188.706c0 .398.138.728.415.988.277.261.656.391 1.136.391zm.368-.87a.675.675 0 0 1-.492-.189.606.606 0 0 1-.193-.448c0-.176.08-.32.241-.435.106-.07.33-.142.673-.215a7.19 7.19 0 0 0 .751-.19v.247c0 .296-.016.496-.048.602a.773.773 0 0 1-.295.409 1.07 1.07 0 0 1-.637.22zm4.645.765v-1.235h-1.235V14h1.235zM10.2 25.105c.542 0 1.003-.215 1.382-.646.38-.43.57-1.044.57-1.84 0-.771-.187-1.362-.559-1.774a1.82 1.82 0 0 0-1.41-.617c-.522 0-.973.216-1.354.65v-2.32H7.594V25h1.147v-.686a1.9 1.9 0 0 0 .67.592c.26.133.523.2.79.2zm-.299-.975c-.354 0-.638-.164-.852-.492-.153-.232-.229-.59-.229-1.073 0-.468.098-.818.295-1.048a.93.93 0 0 1 .738-.345c.302 0 .55.118.743.354.193.236.29.62.29 1.154 0 .5-.096.868-.288 1.1-.192.233-.424.35-.697.35zm4.478.87v-1.235h-1.234V25h1.234zm-4.017 9.105c.6 0 1.08-.142 1.437-.426.357-.284.599-.704.725-1.261l-1.213-.207c-.061.326-.167.555-.316.688a.832.832 0 0 1-.576.2.916.916 0 0 1-.75-.343c-.185-.228-.278-.62-.278-1.173 0-.498.091-.853.274-1.066.183-.212.429-.318.736-.318.232 0 .42.061.565.184.145.123.238.306.28.55l1.216-.22c-.146-.501-.387-.874-.722-1.119-.336-.244-.788-.366-1.356-.366-.695 0-1.245.214-1.653.643-.407.43-.61 1.03-.61 1.8 0 .762.202 1.358.608 1.788.406.431.95.646 1.633.646zM14.633 34v-1.235h-1.235V34h1.235z\\"/></svg>");\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/theme/icons/liststylelowerlatin.svg?')
      }
      ,
      "./js/ckeditor5_plugins/list/theme/icons/liststylelowerroman.svg": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("<svg viewBox=\\"0 0 44 44\\" xmlns=\\"http://www.w3.org/2000/svg\\"><path d=\\"M35 29a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17zm0-9a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17zm0-9a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17z\\" fill-opacity=\\".163\\"/><path d=\\"M11.88 8.7V7.558h-1.234V8.7h1.234zm0 5.3V9.333h-1.234V14h1.234zm2.5 0v-1.235h-1.234V14h1.235zm-4.75 4.7v-1.142H8.395V18.7H9.63zm0 5.3v-4.667H8.395V24H9.63zm2.5-5.3v-1.142h-1.234V18.7h1.235zm0 5.3v-4.667h-1.234V24h1.235zm2.501 0v-1.235h-1.235V24h1.235zM7.38 28.7v-1.142H6.145V28.7H7.38zm0 5.3v-4.667H6.145V34H7.38zm2.5-5.3v-1.142H8.646V28.7H9.88zm0 5.3v-4.667H8.646V34H9.88zm2.5-5.3v-1.142h-1.234V28.7h1.235zm0 5.3v-4.667h-1.234V34h1.235zm2.501 0v-1.235h-1.235V34h1.235z\\"/></svg>");\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/theme/icons/liststylelowerroman.svg?')
      }
      ,
      "./js/ckeditor5_plugins/list/theme/icons/liststylenone.svg": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("<svg viewBox=\\"0 0 44 44\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n  <path\\n    d=\\"M35 29a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17zm0-9a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17zm0-9a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17z\\"\\n    fill-opacity=\\".163\\"/>\\n</svg>\\n");\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/theme/icons/liststylenone.svg?')
      }
      ,
      "./js/ckeditor5_plugins/list/theme/icons/liststylesquare.svg": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("<svg viewBox=\\"0 0 44 44\\" xmlns=\\"http://www.w3.org/2000/svg\\"><path d=\\"M35 29a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17zm0-9a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17zm0-9a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17z\\" fill-opacity=\\".163\\"/><path d=\\"M14 27v6H8v-6h6zm0-9v6H8v-6h6zm0-9v6H8V9h6z\\"/></svg>");\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/theme/icons/liststylesquare.svg?')
      }
      ,
      "./js/ckeditor5_plugins/list/theme/icons/liststyleupperlatin.svg": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("<svg viewBox=\\"0 0 44 44\\" xmlns=\\"http://www.w3.org/2000/svg\\"><path d=\\"M35 29a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17zm0-9a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17zm0-9a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17z\\" fill-opacity=\\".163\\"/><path d=\\"m7.88 15 .532-1.463h2.575L11.549 15h1.415l-2.58-6.442H9.01L6.5 15h1.38zm2.69-2.549H8.811l.87-2.39.887 2.39zM14.88 15v-1.235h-1.234V15h1.234zM9.352 25c.83-.006 1.352-.02 1.569-.044.346-.038.636-.14.872-.305.236-.166.422-.387.558-.664.137-.277.205-.562.205-.855 0-.372-.106-.695-.317-.97-.21-.276-.512-.471-.905-.585a1.51 1.51 0 0 0 .661-.567 1.5 1.5 0 0 0 .244-.83c0-.28-.066-.53-.197-.754a1.654 1.654 0 0 0-.495-.539 1.676 1.676 0 0 0-.672-.266c-.25-.042-.63-.063-1.14-.063H7.158V25h2.193zm.142-3.88H8.46v-1.49h.747c.612 0 .983.007 1.112.022.217.026.38.102.49.226.11.125.165.287.165.486a.68.68 0 0 1-.192.503.86.86 0 0 1-.525.23 11.47 11.47 0 0 1-.944.023h.18zm.17 2.795H8.46v-1.723h1.05c.592 0 .977.03 1.154.092.177.062.313.16.406.295a.84.84 0 0 1 .14.492c0 .228-.06.41-.181.547a.806.806 0 0 1-.473.257c-.126.026-.423.04-.892.04zM14.88 25v-1.235h-1.234V25h1.234zm-5.018 9.11c.691 0 1.262-.17 1.711-.512.45-.341.772-.864.965-1.567l-1.261-.4c-.109.472-.287.818-.536 1.037-.25.22-.547.33-.892.33-.47 0-.85-.173-1.143-.519-.293-.345-.44-.925-.44-1.74 0-.767.15-1.322.447-1.665.297-.343.684-.514 1.162-.514.346 0 .64.096.881.29.242.193.4.457.477.79l1.288-.307c-.147-.516-.367-.911-.66-1.187-.492-.465-1.132-.698-1.92-.698-.902 0-1.63.296-2.184.89-.554.593-.83 1.426-.83 2.498 0 1.014.275 1.813.825 2.397.551.585 1.254.877 2.11.877zM14.88 34v-1.235h-1.234V34h1.234z\\"/></svg>");\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/theme/icons/liststyleupperlatin.svg?')
      }
      ,
      "./js/ckeditor5_plugins/list/theme/icons/liststyleupperroman.svg": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("<svg viewBox=\\"0 0 44 44\\" xmlns=\\"http://www.w3.org/2000/svg\\"><path d=\\"M35 29a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17zm0-9a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17zm0-9a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h17z\\" fill-opacity=\\".163\\"/><path d=\\"M11.916 15V8.558h-1.301V15h1.3zm2.465 0v-1.235h-1.235V15h1.235zM9.665 25v-6.442h-1.3V25h1.3zm2.5 0v-6.442h-1.3V25h1.3zm2.466 0v-1.235h-1.235V25h1.235zm-7.216 9v-6.442h-1.3V34h1.3zm2.5 0v-6.442h-1.3V34h1.3zm2.501 0v-6.442h-1.3V34h1.3zm2.465 0v-1.235h-1.235V34h1.235z\\"/></svg>");\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/theme/icons/liststyleupperroman.svg?')
      }
      ,
      "./js/ckeditor5_plugins/list/theme/icons/numberedlist.svg": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("<svg viewBox=\\"0 0 20 20\\" xmlns=\\"http://www.w3.org/2000/svg\\"><path d=\\"M7 5.75c0 .414.336.75.75.75h9.5a.75.75 0 1 0 0-1.5h-9.5a.75.75 0 0 0-.75.75zM3.5 3v5H2V3.7H1v-1h2.5V3zM.343 17.857l2.59-3.257H2.92a.6.6 0 1 0-1.04 0H.302a2 2 0 1 1 3.995 0h-.001c-.048.405-.16.734-.333.988-.175.254-.59.692-1.244 1.312H4.3v1h-4l.043-.043zM7 14.75a.75.75 0 0 1 .75-.75h9.5a.75.75 0 1 1 0 1.5h-9.5a.75.75 0 0 1-.75-.75z\\"/></svg>");\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/theme/icons/numberedlist.svg?')
      }
      ,
      "./node_modules/@ckeditor/ckeditor5-ui/theme/icons/dropdown-arrow.svg": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("<svg viewBox=\\"0 0 10 10\\" xmlns=\\"http://www.w3.org/2000/svg\\"><path d=\\"M.941 4.523a.75.75 0 1 1 1.06-1.06l3.006 3.005 3.005-3.005a.75.75 0 1 1 1.06 1.06l-3.549 3.55a.75.75 0 0 1-1.168-.136L.941 4.523z\\"/></svg>");\n\n//# sourceURL=webpack://CKEditor5.list/./node_modules/@ckeditor/ckeditor5-ui/theme/icons/dropdown-arrow.svg?')
      }
      ,
      "./js/ckeditor5_plugins/list/theme/collapsible.css": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_collapsible_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../../node_modules/css-loader/dist/cjs.js!./collapsible.css */ "./node_modules/css-loader/dist/cjs.js!./js/ckeditor5_plugins/list/theme/collapsible.css");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_collapsible_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_collapsible_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _node_modules_css_loader_dist_cjs_js_collapsible_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _node_modules_css_loader_dist_cjs_js_collapsible_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/theme/collapsible.css?')
      }
      ,
      "./js/ckeditor5_plugins/list/theme/documentlist.css": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_documentlist_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../../node_modules/css-loader/dist/cjs.js!./documentlist.css */ "./node_modules/css-loader/dist/cjs.js!./js/ckeditor5_plugins/list/theme/documentlist.css");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_documentlist_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_documentlist_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _node_modules_css_loader_dist_cjs_js_documentlist_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _node_modules_css_loader_dist_cjs_js_documentlist_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/theme/documentlist.css?')
      }
      ,
      "./js/ckeditor5_plugins/list/theme/list.css": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_list_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../../node_modules/css-loader/dist/cjs.js!./list.css */ "./node_modules/css-loader/dist/cjs.js!./js/ckeditor5_plugins/list/theme/list.css");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_list_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_list_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _node_modules_css_loader_dist_cjs_js_list_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _node_modules_css_loader_dist_cjs_js_list_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/theme/list.css?')
      }
      ,
      "./js/ckeditor5_plugins/list/theme/listproperties.css": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_listproperties_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../../node_modules/css-loader/dist/cjs.js!./listproperties.css */ "./node_modules/css-loader/dist/cjs.js!./js/ckeditor5_plugins/list/theme/listproperties.css");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_listproperties_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_listproperties_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _node_modules_css_loader_dist_cjs_js_listproperties_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _node_modules_css_loader_dist_cjs_js_listproperties_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/theme/listproperties.css?')
      }
      ,
      "./js/ckeditor5_plugins/list/theme/liststyles.css": (__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{
          "use strict";
          eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_liststyles_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../../node_modules/css-loader/dist/cjs.js!./liststyles.css */ "./node_modules/css-loader/dist/cjs.js!./js/ckeditor5_plugins/list/theme/liststyles.css");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_liststyles_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_liststyles_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _node_modules_css_loader_dist_cjs_js_liststyles_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _node_modules_css_loader_dist_cjs_js_liststyles_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);\n\n\n//# sourceURL=webpack://CKEditor5.list/./js/ckeditor5_plugins/list/theme/liststyles.css?')
      }
      ,
      "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js": module=>{
          "use strict";
          eval('\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = "".concat(id, " ").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://CKEditor5.list/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?')
      }
      ,
      "./node_modules/style-loader/dist/runtime/insertBySelector.js": module=>{
          "use strict";
          eval('\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === "undefined") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error("Couldn\'t find a style target. This probably means that the value for the \'insert\' parameter is invalid.");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://CKEditor5.list/./node_modules/style-loader/dist/runtime/insertBySelector.js?')
      }
      ,
      "./node_modules/style-loader/dist/runtime/insertStyleElement.js": module=>{
          "use strict";
          eval('\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement("style");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://CKEditor5.list/./node_modules/style-loader/dist/runtime/insertStyleElement.js?')
      }
      ,
      "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js": (module,__unused_webpack_exports,__webpack_require__)=>{
          "use strict";
          eval('\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute("nonce", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://CKEditor5.list/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?')
      }
      ,
      "./node_modules/style-loader/dist/runtime/styleDomAPI.js": module=>{
          "use strict";
          eval('\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = "";\n  if (obj.supports) {\n    css += "@supports (".concat(obj.supports, ") {");\n  }\n  if (obj.media) {\n    css += "@media ".concat(obj.media, " {");\n  }\n  var needLayer = typeof obj.layer !== "undefined";\n  if (needLayer) {\n    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += "}";\n  }\n  if (obj.media) {\n    css += "}";\n  }\n  if (obj.supports) {\n    css += "}";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== "undefined") {\n    css += "\\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === "undefined") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://CKEditor5.list/./node_modules/style-loader/dist/runtime/styleDomAPI.js?')
      }
      ,
      "./node_modules/style-loader/dist/runtime/styleTagTransform.js": module=>{
          "use strict";
          eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://CKEditor5.list/./node_modules/style-loader/dist/runtime/styleTagTransform.js?")
      }
      ,
      "ckeditor5/src/core.js": (module,__unused_webpack_exports,__webpack_require__)=>{
          eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/core.js");\n\n//# sourceURL=webpack://CKEditor5.list/delegated_./core.js_from_dll-reference_CKEditor5.dll?')
      }
      ,
      "ckeditor5/src/engine.js": (module,__unused_webpack_exports,__webpack_require__)=>{
          eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/engine.js");\n\n//# sourceURL=webpack://CKEditor5.list/delegated_./engine.js_from_dll-reference_CKEditor5.dll?')
      }
      ,
      "ckeditor5/src/enter.js": (module,__unused_webpack_exports,__webpack_require__)=>{
          eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/enter.js");\n\n//# sourceURL=webpack://CKEditor5.list/delegated_./enter.js_from_dll-reference_CKEditor5.dll?')
      }
      ,
      "ckeditor5/src/typing.js": (module,__unused_webpack_exports,__webpack_require__)=>{
          eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/typing.js");\n\n//# sourceURL=webpack://CKEditor5.list/delegated_./typing.js_from_dll-reference_CKEditor5.dll?')
      }
      ,
      "ckeditor5/src/ui.js": (module,__unused_webpack_exports,__webpack_require__)=>{
          eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/ui.js");\n\n//# sourceURL=webpack://CKEditor5.list/delegated_./ui.js_from_dll-reference_CKEditor5.dll?')
      }
      ,
      "ckeditor5/src/utils.js": (module,__unused_webpack_exports,__webpack_require__)=>{
          eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/utils.js");\n\n//# sourceURL=webpack://CKEditor5.list/delegated_./utils.js_from_dll-reference_CKEditor5.dll?')
      }
      ,
      "dll-reference CKEditor5.dll": e=>{
          "use strict";
          e.exports = CKEditor5.dll
      }
  }
    , __webpack_module_cache__ = {};
  function __webpack_require__(e) {
      var t = __webpack_module_cache__[e];
      if (void 0 !== t)
          return t.exports;
      var n = __webpack_module_cache__[e] = {
          id: e,
          exports: {}
      };
      return __webpack_modules__[e](n, n.exports, __webpack_require__),
      n.exports
  }
  __webpack_require__.n = e=>{
      var t = e && e.__esModule ? ()=>e.default : ()=>e;
      return __webpack_require__.d(t, {
          a: t
      }),
      t
  }
  ,
  __webpack_require__.d = (e,t)=>{
      for (var n in t)
          __webpack_require__.o(t, n) && !__webpack_require__.o(e, n) && Object.defineProperty(e, n, {
              enumerable: !0,
              get: t[n]
          })
  }
  ,
  __webpack_require__.o = (e,t)=>Object.prototype.hasOwnProperty.call(e, t),
  __webpack_require__.r = e=>{
      "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
          value: "Module"
      }),
      Object.defineProperty(e, "__esModule", {
          value: !0
      })
  }
  ,
  __webpack_require__.nc = void 0;
  var __webpack_exports__ = __webpack_require__("./js/ckeditor5_plugins/list/src/index.js");
  return __webpack_exports__ = __webpack_exports__.default,
  __webpack_exports__
}
)()));
